{
  "4": {
    "DAI": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "supply",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "metaTxProcessor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "PERMIT_TYPEHASH",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approveFor",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "nonces",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "holder",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "nonce",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "expiry",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "allowed",
                "type": "bool"
              },
              {
                "internalType": "uint8",
                "name": "v",
                "type": "uint8"
              },
              {
                "internalType": "bytes32",
                "name": "r",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "s",
                "type": "bytes32"
              }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "version",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50604051610d8f380380610d8f8339818101604052604081101561003357600080fd5b508051602090910151600780546001600160a01b0319166001600160a01b0383161790556002829055604051806042610d4d8239604080519182900360420182208282018252600e83526d2230b49029ba30b13632b1b7b4b760911b6020938401528151808301835260018152603160f81b908401528151808401919091527f0b1461ddc0c1d5ded79a1db0f74dae949050a7c0b28728c724b24958c27a328b818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152306080808301919091528251808303909101815260a09091019091528051910120600055505050610c1a806101336000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633644e515116100975780638fcbaf0c116100665780638fcbaf0c146102bf57806395d89b411461031b578063a9059cbb14610323578063dd62ed3e1461034f576100f5565b80633644e5151461026357806354fd4d501461026b57806370a08231146102735780637ecebe0014610299576100f5565b806323b872dd116100d357806323b872dd146101d15780632b9917461461020757806330adf81f1461023d578063313ce56714610245576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b61010261037d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103a7565b604080519115158252519081900360200190f35b6101bf6103be565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b038135811691602081013590911690604001356103c4565b6101a36004803603606081101561021d57600080fd5b506001600160a01b038135811691602081013590911690604001356104b1565b6101bf610511565b61024d610535565b6040805160ff9092168252519081900360200190f35b6101bf61053a565b610102610540565b6101bf6004803603602081101561028957600080fd5b50356001600160a01b031661055d565b6101bf600480360360208110156102af57600080fd5b50356001600160a01b0316610574565b61031960048036036101008110156102d657600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e00135610586565b005b61010261087e565b6101a36004803603604081101561033957600080fd5b506001600160a01b03813516906020013561089d565b6101bf6004803603604081101561036557600080fd5b506001600160a01b03813581169160200135166108aa565b6040518060400160405280600e81526020016d2230b49029ba30b13632b1b7b4b760911b81525081565b60006103b433848461090b565b5060015b92915050565b60025490565b6000336001600160a01b038516148015906103ea57506007546001600160a01b03163314155b1561049c576001600160a01b0384166000908152600460209081526040808320338452909152902054600019811461049a5782811015610471576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600460209081526040808320338452909152902083820390555b505b6104a78484846109de565b5060019392505050565b6000336001600160a01b03851614610506576040805162461bcd60e51b815260206004820152601360248201527236b9b39739b2b73232b910109e9037bbb732b960691b604482015290519081900360640190fd5b6104a784848461090b565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b601290565b60005481565b604051806040016040528060018152602001603160f81b81525081565b600080600061056b84610b71565b95945050505050565b60016020526000908152604090205481565b600054604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020808301919091526001600160a01b03808d16838501819052908c166060840152608083018b905260a083018a905288151560c0808501919091528451808503909101815260e08401855280519083012061190160f01b61010085015261010284019590955261012280840195909552835180840390950185526101429092019092528251929091019190912090610686576040805162461bcd60e51b815260206004820152601560248201527404461692f696e76616c69642d616464726573732d3605c1b604482015290519081900360640190fd5b6040805160008152602080820180845284905260ff8716828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa1580156106dd573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610741576040805162461bcd60e51b815260206004820152601260248201527111185a4bda5b9d985b1a590b5c195c9b5a5d60721b604482015290519081900360640190fd5b85158061074e5750854211155b610794576040805162461bcd60e51b815260206004820152601260248201527111185a4bdc195c9b5a5d0b595e1c1a5c995960721b604482015290519081900360640190fd5b6001600160a01b03891660009081526001602081905260409091208054918201905587146107fd576040805162461bcd60e51b81526020600482015260116024820152704461692f696e76616c69642d6e6f6e636560781b604482015290519081900360640190fd5b60008561080b57600061080f565b6000195b6001600160a01b03808c166000818152600460209081526040808320948f168084529482529182902085905581518581529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a350505050505050505050565b6040518060400160405280600381526020016244414960e81b81525081565b60006103b43384846109de565b60006001600160a01b038216158015906108d157506007546001600160a01b038381169116145b156108df57506000196103b8565b506001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001600160a01b0383161580159061092b57506001600160a01b03821615155b61097c576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420617070726f7665207769746820307830000000000000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610a2e576040805162461bcd60e51b8152602060048201526012602482015271043616e6e6f742073656e6420746f203078360741b604482015290519081900360640190fd5b600080610a3a85610b71565b9150915082811015610a85576040805162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da08199d5b99608a1b604482015290519081900360640190fd5b81610ab65760058054820190556001600160a01b0385166000908152600660205260409020805460ff191660011790555b6001600160a01b03851660009081526003602052604090208382039055610adc84610b71565b909250905081610b125760058054820190556001600160a01b0384166000908152600660205260409020805460ff191660011790555b6001600160a01b0380851660008181526003602090815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b038116600090815260036020908152604080832054600690925282205460ff16158015610ba85750600254600554105b15610bda5760009150600554600254039050678ac7230489e80000811115610bd55750678ac7230489e800005b610bdf565b600191505b91509156fea2646970667358221220a0bf757f4cef41f5a863ecc297bf4782a80946e9ed200868db621f7effc4ecfc64736f6c63430006010033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e747261637429",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD8F CODESIZE SUB DUP1 PUSH2 0xD8F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x42 PUSH2 0xD4D DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x42 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xE DUP4 MSTORE PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB1461DDC0C1D5DED79A1DB0F74DAE949050A7C0B28728C724B24958C27A328B DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SSTORE POP POP POP PUSH2 0xC1A DUP1 PUSH2 0x133 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x8FCBAF0C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34F JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x299 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x245 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x169 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x511 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x53A JUMP JUMPDEST PUSH2 0x102 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x574 JUMP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3EA JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x49C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x49A JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x36B9B39739B2B73232B910109E9037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x56B DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0xC0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP5 ADD DUP6 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH2 0x122 DUP1 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH2 0x142 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x686 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4461692F696E76616C69642D616464726573732D3 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP5 SWAP1 MSTORE PUSH1 0xFF DUP8 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDA5B9D985B1A590B5C195C9B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0x74E JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x794 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDC195C9B5A5D0B595E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD SWAP1 SSTORE DUP8 EQ PUSH2 0x7FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4461692F696E76616C69642D6E6F6E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x80B JUMPI PUSH1 0x0 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x0 NOT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP16 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x444149 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8D1 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x8DF JUMPI POP PUSH1 0x0 NOT PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x92B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x97C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F7665207769746820307830000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E6E6F742073656E6420746F2030783 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3A DUP6 PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xA85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD08195B9BDD59DA08199D5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xAB6 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE PUSH2 0xADC DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xB12 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 DUP9 ADD SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD LT JUMPDEST ISZERO PUSH2 0xBDA JUMPI PUSH1 0x0 SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD SUB SWAP1 POP PUSH8 0x8AC7230489E80000 DUP2 GT ISZERO PUSH2 0xBD5 JUMPI POP PUSH8 0x8AC7230489E80000 JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xBF PUSH22 0x7F4CEF41F5A863ECC297BF4782A80946E9ED200868DB PUSH3 0x1F7EFF 0xC4 0xEC 0xFC PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C616464726573 PUSH20 0x20766572696679696E67436F6E74726163742900 ",
            "sourceMap": "59:10010:19:-:0;;;1353:397;8:9:-1;5:2;;;30:1;27;20:12;5:2;1353:397:19;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1353:397:19;;;;;;;1423:16;:34;;-1:-1:-1;;;;;;1423:34:19;-1:-1:-1;;;;;1423:34:19;;;;;1467:12;:21;;;1353:397;1551:79;;;;;;;;;;;;;;;;;1660:4;;;;;;;;-1:-1:-1;;;1660:4:19;;;;;1696:7;;;;;;;;;;-1:-1:-1;;;1696:7:19;;;;1527:215;;;;;;;;;1644:22;1527:215;;;;1680:25;1527:215;;;;1727:4;1527:215;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1527:215:19;;;;;;;1517:226;;;;;-1:-1:-1;1498:245:19;-1:-1:-1;;;59:10010:19;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80633644e515116100975780638fcbaf0c116100665780638fcbaf0c146102bf57806395d89b411461031b578063a9059cbb14610323578063dd62ed3e1461034f576100f5565b80633644e5151461026357806354fd4d501461026b57806370a08231146102735780637ecebe0014610299576100f5565b806323b872dd116100d357806323b872dd146101d15780632b9917461461020757806330adf81f1461023d578063313ce56714610245576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b61010261037d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103a7565b604080519115158252519081900360200190f35b6101bf6103be565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b038135811691602081013590911690604001356103c4565b6101a36004803603606081101561021d57600080fd5b506001600160a01b038135811691602081013590911690604001356104b1565b6101bf610511565b61024d610535565b6040805160ff9092168252519081900360200190f35b6101bf61053a565b610102610540565b6101bf6004803603602081101561028957600080fd5b50356001600160a01b031661055d565b6101bf600480360360208110156102af57600080fd5b50356001600160a01b0316610574565b61031960048036036101008110156102d657600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e00135610586565b005b61010261087e565b6101a36004803603604081101561033957600080fd5b506001600160a01b03813516906020013561089d565b6101bf6004803603604081101561036557600080fd5b506001600160a01b03813581169160200135166108aa565b6040518060400160405280600e81526020016d2230b49029ba30b13632b1b7b4b760911b81525081565b60006103b433848461090b565b5060015b92915050565b60025490565b6000336001600160a01b038516148015906103ea57506007546001600160a01b03163314155b1561049c576001600160a01b0384166000908152600460209081526040808320338452909152902054600019811461049a5782811015610471576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600460209081526040808320338452909152902083820390555b505b6104a78484846109de565b5060019392505050565b6000336001600160a01b03851614610506576040805162461bcd60e51b815260206004820152601360248201527236b9b39739b2b73232b910109e9037bbb732b960691b604482015290519081900360640190fd5b6104a784848461090b565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b601290565b60005481565b604051806040016040528060018152602001603160f81b81525081565b600080600061056b84610b71565b95945050505050565b60016020526000908152604090205481565b600054604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020808301919091526001600160a01b03808d16838501819052908c166060840152608083018b905260a083018a905288151560c0808501919091528451808503909101815260e08401855280519083012061190160f01b61010085015261010284019590955261012280840195909552835180840390950185526101429092019092528251929091019190912090610686576040805162461bcd60e51b815260206004820152601560248201527404461692f696e76616c69642d616464726573732d3605c1b604482015290519081900360640190fd5b6040805160008152602080820180845284905260ff8716828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa1580156106dd573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610741576040805162461bcd60e51b815260206004820152601260248201527111185a4bda5b9d985b1a590b5c195c9b5a5d60721b604482015290519081900360640190fd5b85158061074e5750854211155b610794576040805162461bcd60e51b815260206004820152601260248201527111185a4bdc195c9b5a5d0b595e1c1a5c995960721b604482015290519081900360640190fd5b6001600160a01b03891660009081526001602081905260409091208054918201905587146107fd576040805162461bcd60e51b81526020600482015260116024820152704461692f696e76616c69642d6e6f6e636560781b604482015290519081900360640190fd5b60008561080b57600061080f565b6000195b6001600160a01b03808c166000818152600460209081526040808320948f168084529482529182902085905581518581529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a350505050505050505050565b6040518060400160405280600381526020016244414960e81b81525081565b60006103b43384846109de565b60006001600160a01b038216158015906108d157506007546001600160a01b038381169116145b156108df57506000196103b8565b506001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001600160a01b0383161580159061092b57506001600160a01b03821615155b61097c576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420617070726f7665207769746820307830000000000000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610a2e576040805162461bcd60e51b8152602060048201526012602482015271043616e6e6f742073656e6420746f203078360741b604482015290519081900360640190fd5b600080610a3a85610b71565b9150915082811015610a85576040805162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da08199d5b99608a1b604482015290519081900360640190fd5b81610ab65760058054820190556001600160a01b0385166000908152600660205260409020805460ff191660011790555b6001600160a01b03851660009081526003602052604090208382039055610adc84610b71565b909250905081610b125760058054820190556001600160a01b0384166000908152600660205260409020805460ff191660011790555b6001600160a01b0380851660008181526003602090815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b038116600090815260036020908152604080832054600690925282205460ff16158015610ba85750600254600554105b15610bda5760009150600554600254039050678ac7230489e80000811115610bd55750678ac7230489e800005b610bdf565b600191505b91509156fea2646970667358221220a0bf757f4cef41f5a863ecc297bf4782a80946e9ed200868db621f7effc4ecfc64736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x8FCBAF0C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34F JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x299 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x245 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x169 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x511 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x53A JUMP JUMPDEST PUSH2 0x102 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x574 JUMP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3EA JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x49C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x49A JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x36B9B39739B2B73232B910109E9037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x56B DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0xC0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP5 ADD DUP6 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH2 0x122 DUP1 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH2 0x142 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x686 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4461692F696E76616C69642D616464726573732D3 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP5 SWAP1 MSTORE PUSH1 0xFF DUP8 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDA5B9D985B1A590B5C195C9B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0x74E JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x794 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDC195C9B5A5D0B595E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD SWAP1 SSTORE DUP8 EQ PUSH2 0x7FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4461692F696E76616C69642D6E6F6E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x80B JUMPI PUSH1 0x0 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x0 NOT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP16 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x444149 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8D1 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x8DF JUMPI POP PUSH1 0x0 NOT PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x92B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x97C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F7665207769746820307830000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E6E6F742073656E6420746F2030783 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3A DUP6 PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xA85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD08195B9BDD59DA08199D5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xAB6 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE PUSH2 0xADC DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xB12 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 DUP9 ADD SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD LT JUMPDEST ISZERO PUSH2 0xBDA JUMPI PUSH1 0x0 SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD SUB SWAP1 POP PUSH8 0x8AC7230489E80000 DUP2 GT ISZERO PUSH2 0xBD5 JUMPI POP PUSH8 0x8AC7230489E80000 JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xBF PUSH22 0x7F4CEF41F5A863ECC297BF4782A80946E9ED200868DB PUSH3 0x1F7EFF 0xC4 0xEC 0xFC PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "59:10010:19:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59:10010:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;523:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;523:51:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5741:178;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5741:178:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1875:89;;;:::i;:::-;;;;;;;;;;;;;;;;4229:672;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4229:672:19;;;;;;;;;;;;;;;;;:::i;6211:286::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6211:286:19;;;;;;;;;;;;;;;;;:::i;361:108::-;;;:::i;3476:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;166:45;;;:::i;626:38::-;;;:::i;2605:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2605:150:19;-1:-1:-1;;;;;2605:150:19;;:::i;475:42::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;475:42:19;-1:-1:-1;;;;;475:42:19;;:::i;9074:993::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;9074:993:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;580:40;;;:::i;3775:167::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3775:167:19;;;;;;;;:::i;3033:334::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3033:334:19;;;;;;;;;;:::i;523:51::-;;;;;;;;;;;;;;-1:-1:-1;;;523:51:19;;;;:::o;5741:178::-;5823:12;5851:40;5863:10;5875:7;5884:6;5851:11;:40::i;:::-;-1:-1:-1;5908:4:19;5741:178;;;;;:::o;1875:89::-;1945:12;;1875:89;:::o;4229:672::-;4325:12;4357:10;-1:-1:-1;;;;;4357:18:19;;;;;;:52;;-1:-1:-1;4393:16:19;;-1:-1:-1;;;;;4393:16:19;4379:10;:30;;4357:52;4353:484;;;-1:-1:-1;;;;;4452:17:19;;4425:24;4452:17;;;:11;:17;;;;;;;;4470:10;4452:29;;;;;;;;-1:-1:-1;;4499:32:19;;4495:332;;4702:6;4682:16;:26;;4674:63;;;;;-1:-1:-1;;;4674:63:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4755:17:19;;;;;;:11;:17;;;;;;;;4773:10;4755:29;;;;;;;4787:25;;;4755:57;;4495:332;4353:484;;4846:27;4856:4;4862:2;4866:6;4846:9;:27::i;:::-;-1:-1:-1;4890:4:19;4229:672;;;;;:::o;6211:286::-;6311:12;6360:10;-1:-1:-1;;;;;6360:19:19;;;6339:85;;;;;-1:-1:-1;;;6339:85:19;;;;;;;;;;;;-1:-1:-1;;;6339:85:19;;;;;;;;;;;;;;;6434:35;6446:5;6453:7;6462:6;6434:11;:35::i;361:108::-;403:66;361:108;:::o;3476:81::-;3547:2;3476:81;:::o;166:45::-;;;;:::o;626:38::-;;;;;;;;;;;;;;-1:-1:-1;;;626:38:19;;;;:::o;2605:150::-;2660:7;2680:6;2688:15;2707:17;2718:5;2707:10;:17::i;:::-;2679:45;2605:150;-1:-1:-1;;;;;2605:150:19:o;475:42::-;;;;;;;;;;;;;:::o;9074:993::-;9242:14;9343:16;9387:253;;;403:66;9387:253;;;;;;;;-1:-1:-1;;;;;9387:253:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9387:253:19;;;;;9377:264;;;;;;-1:-1:-1;;;9281:370:19;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9281:370:19;;;;;;;9271:381;;;;;;;;;;;9663:54;;;;;-1:-1:-1;;;9663:54:19;;;;;;;;;;;;-1:-1:-1;;;9663:54:19;;;;;;;;;;;;;;;9745:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9745:26:19;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9745:26:19;;;;;;;;-1:-1:-1;;;;;9735:36:19;:6;-1:-1:-1;;;;;9735:36:19;;9727:67;;;;;-1:-1:-1;;;9727:67:19;;;;;;;;;;;;-1:-1:-1;;;9727:67:19;;;;;;;;;;;;;;;9812:11;;;:28;;;9834:6;9827:3;:13;;9812:28;9804:59;;;;;-1:-1:-1;;;9804:59:19;;;;;;;;;;;;-1:-1:-1;;;9804:59:19;;;;;;;;;;;;;;;-1:-1:-1;;;;;9890:14:19;;;;;;:6;:14;;;;;;;;:16;;;;;;;9881:25;;9873:55;;;;;-1:-1:-1;;;9873:55:19;;;;;;;;;;;;-1:-1:-1;;;9873:55:19;;;;;;;;;;;;;;;9938:8;9949:7;:22;;9970:1;9949:22;;;-1:-1:-1;;9949:22:19;-1:-1:-1;;;;;9981:19:19;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:34;;;10030:30;;;;;;;9938:33;;-1:-1:-1;9981:28:19;;:19;;10030:30;;;;;;;;;9074:993;;;;;;;;;;:::o;580:40::-;;;;;;;;;;;;;;-1:-1:-1;;;580:40:19;;;;:::o;3775:167::-;3853:12;3881:33;3891:10;3903:2;3907:6;3881:9;:33::i;3033:334::-;3129:17;-1:-1:-1;;;;;3165:21:19;;;;;;:52;;-1:-1:-1;3201:16:19;;-1:-1:-1;;;;;3190:27:19;;;3201:16;;3190:27;3165:52;3162:155;;;-1:-1:-1;;;3233:73:19;;3162:155;-1:-1:-1;;;;;;3333:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3033:334::o;6504:314::-;-1:-1:-1;;;;;6625:19:19;;;;;;:44;;-1:-1:-1;;;;;;6648:21:19;;;;6625:44;6604:114;;;;;-1:-1:-1;;;6604:114:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6728:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;6779:32;;;;;;;;;;;;;;;;;6504:314;;;:::o;6824:781::-;-1:-1:-1;;;;;6912:16:19;;6904:47;;;;;-1:-1:-1;;;6904:47:19;;;;;;;;;;;;-1:-1:-1;;;6904:47:19;;;;;;;;;;;;;;;6962:12;6976:22;7002:16;7013:4;7002:10;:16::i;:::-;6961:57;;;;7054:6;7036:14;:24;;7028:52;;;;;-1:-1:-1;;;7028:52:19;;;;;;;;;;;;-1:-1:-1;;;7028:52:19;;;;;;;;;;;;;;;7095:7;7090:154;;7118:14;:32;;;;;;-1:-1:-1;;;;;7164:14:19;;7118;7164;;;:8;:14;;;;;:21;;-1:-1:-1;;7164:21:19;-1:-1:-1;7164:21:19;;;7090:154;-1:-1:-1;;;;;7253:15:19;;;;;;:9;:15;;;;;7271:23;;;7253:41;;7333:14;7344:2;7333:10;:14::i;:::-;7305:42;;-1:-1:-1;7305:42:19;-1:-1:-1;7305:42:19;7357:152;;7385:14;:32;;;;;;-1:-1:-1;;;;;7431:12:19;;7385:14;7431:12;;;:8;:12;;;;;:19;;-1:-1:-1;;7431:19:19;-1:-1:-1;7431:19:19;;;7357:152;-1:-1:-1;;;;;7518:13:19;;;;;;;:9;:13;;;;;;;;;7534:23;;;7518:39;;7572:26;;;;;;;7518:13;;7572:26;;;;;;;;;;;;;6824:781;;;;;:::o;2005:446::-;-1:-1:-1;;;;;2114:16:19;;2063:12;2114:16;;;:9;:16;;;;;;;;;2145:8;:15;;;;;;;;2144:16;:49;;;;;2181:12;;2164:14;;:29;2144:49;2140:305;;;2219:5;2209:15;;2263:14;;2248:12;;:29;2238:39;;2305:20;2295:7;:30;2291:99;;;-1:-1:-1;2355:20:19;2291:99;2140:305;;;2430:4;2420:14;;2140:305;2005:446;;;:::o"
          },
          "methodIdentifiers": {
            "DOMAIN_SEPARATOR()": "3644e515",
            "PERMIT_TYPEHASH()": "30adf81f",
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "approveFor(address,address,uint256)": "2b991746",
            "balanceOf(address)": "70a08231",
            "decimals()": "313ce567",
            "name()": "06fdde03",
            "nonces(address)": "7ecebe00",
            "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "version()": "54fd4d50"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"metaTxProcessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"address whose token is allowed.\",\"spender\":\"address allowed to transfer.\"},\"returns\":{\"remaining\":\"the amount of token `spender` is allowed to transfer on behalf of `owner`.\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"the number of tokens allowed.\",\"spender\":\"address to be given rights to transfer.\"},\"returns\":{\"success\":\"true if success.\"}},\"approveFor(address,address,uint256)\":{\"params\":{\"amount\":\"the number of tokens allowed.\",\"owner\":\"address whose token is allowed.\",\"spender\":\"address to be given rights to transfer.\"},\"returns\":{\"success\":\"true if success.\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address to query the balance of.\"},\"returns\":{\"_0\":\"The amount owned by `owner`.\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"the number of tokens transfered.\",\"to\":\"the recipient address of the tokens transfered.\"},\"returns\":{\"success\":\"true if success.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"the number of tokens transfered.\",\"from\":\"whose token it is transferring from.\",\"to\":\"the recipient address of the tokens transfered.\"},\"returns\":{\"success\":\"true if success.\"}}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"gets allowance of `spender` for `owner`'s tokens.\"},\"approve(address,uint256)\":{\"notice\":\"approve `spender` to transfer `amount` tokens.\"},\"approveFor(address,address,uint256)\":{\"notice\":\"approve `spender` to transfer `amount` tokens from `owner`.\"},\"balanceOf(address)\":{\"notice\":\"Gets the balance of `owner`.\"},\"decimals()\":{\"notice\":\"returns the number of decimals for that token.\"},\"totalSupply()\":{\"notice\":\"Gets the total number of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `from` to `to`.\"}}}},\"settings\":{\"compilationTarget\":{\"src/Test/PAW.sol\":\"PAW\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Test/PAW.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../Interfaces/ERC20.sol\\\";\\n\\ncontract PAW /*is ERC20*/{ // interface seems to require overrides :(\\n\\n     // --- EIP712 niceties ---\\n    bytes32 public /*immutable*/ DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\\n    mapping (address => uint256) public nonces;\\n    string  public constant name     = \\\"Dai Stablecoin\\\";\\n    string  public constant symbol   = \\\"DAI\\\";\\n    string  public constant version  = \\\"1\\\";\\n\\n    ///////////////// EVENTS FOR ERC20 ////////////////\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    ///////////////////////////////////////////////////\\n\\n    uint256 internal /*immutable*/ _totalSupply;\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => uint256)) internal _allowances;\\n\\n    uint256 internal _supplyClaimed;\\n    mapping(address => bool) internal _claimed; // TODO optimize it by storing it in the same slot as _balances\\n    address internal /*immutable*/ _metaTxProcessor;\\n\\n    constructor(uint256 supply, address metaTxProcessor) public {\\n        _metaTxProcessor = metaTxProcessor;\\n        _totalSupply = supply;\\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\\n            keccak256(\\\"EIP712Domain(string name,string version,address verifyingContract)\\\"),\\n            keccak256(bytes(name)),\\n            keccak256(bytes(version)),\\n            address(this)\\n        ));\\n    }\\n\\n    /// @notice Gets the total number of tokens in existence.\\n    /// @return the total number of tokens in existence.\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    // function hasClaimed() TODO\\n\\n    function _balanceOf(address owner) internal view returns (bool claimed, uint256 balance) {\\n        balance = _balances[owner];\\n        if (!_claimed[owner] && _supplyClaimed < _totalSupply) {\\n            claimed = false;\\n            balance = _totalSupply - _supplyClaimed;\\n            if (balance > 10000000000000000000) {\\n                balance = 10000000000000000000;\\n            }\\n        } else {\\n            claimed = true;\\n        }\\n    }\\n\\n    /// @notice Gets the balance of `owner`.\\n    /// @param owner The address to query the balance of.\\n    /// @return The amount owned by `owner`.\\n    function balanceOf(address owner) public view returns (uint256) {\\n        (bool _, uint256 balance) = _balanceOf(owner);\\n        return balance;\\n    }\\n\\n    /// @notice gets allowance of `spender` for `owner`'s tokens.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender address allowed to transfer.\\n    /// @return remaining the amount of token `spender` is allowed to transfer on behalf of `owner`.\\n    function allowance(address owner, address spender)\\n        public\\n        view\\n        returns (uint256 remaining)\\n    {\\n        if(spender != address(0) && spender == _metaTxProcessor) {\\n            return 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n        }\\n        return _allowances[owner][spender];\\n    }\\n\\n    /// @notice returns the number of decimals for that token.\\n    /// @return the number of decimals.\\n    function decimals() public view returns (uint8) {\\n        return uint8(18);\\n    }\\n\\n    /// @notice Transfer `amount` tokens to `to`.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return success true if success.\\n    function transfer(address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n\\n    /// @notice Transfer `amount` tokens from `from` to `to`.\\n    /// @param from whose token it is transferring from.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return success true if success.\\n    function transferFrom(address from, address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        if (msg.sender != from && msg.sender != _metaTxProcessor) {\\n            uint256 currentAllowance = _allowances[from][msg.sender];\\n            if (currentAllowance != (2**256) - 1) {\\n                // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n                require(currentAllowance >= amount, \\\"Not enough funds allowed\\\");\\n                _allowances[from][msg.sender] = currentAllowance - amount;\\n            }\\n        }\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    // /// @notice burn `amount` tokens.\\n    // /// @param amount the number of tokens to burn.\\n    // /// @return true if success.\\n    // function burn(uint256 amount) external returns (bool) {\\n    //     _burn(msg.sender, amount);\\n    //     return true;\\n    // }\\n\\n    // /// @notice burn `amount` tokens from `owner`.\\n    // /// @param owner address whose token is to burn.\\n    // /// @param amount the number of token to burn.\\n    // /// @return true if success.\\n    // function burnFor(address owner, uint256 amount) external returns (bool) {\\n    //     _burn(owner, amount);\\n    //     return true;\\n    // }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens.\\n    /// @param spender address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return success true if success.\\n    function approve(address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _approveFor(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens from `owner`.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender  address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return success true if success.\\n    function approveFor(address owner, address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        require(\\n            msg.sender == owner,\\n            \\\"msg.sender != owner\\\"\\n        );\\n        _approveFor(owner, spender, amount);\\n        return true;\\n    }\\n\\n\\n    function _approveFor(address owner, address spender, uint256 amount)\\n        internal\\n    {\\n        require(\\n            owner != address(0) && spender != address(0),\\n            \\\"Cannot approve with 0x0\\\"\\n        );\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _transfer(address from, address to, uint256 amount) internal {\\n        require(to != address(0), \\\"Cannot send to 0x0\\\");\\n        (bool claimed, uint256 currentBalance) = _balanceOf(from);\\n        require(currentBalance >= amount, \\\"not enough fund\\\");\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[from] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[from] = currentBalance - amount;\\n\\n        (claimed, currentBalance) = _balanceOf(to);\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[to] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[to] = currentBalance + amount;\\n        emit Transfer(from, to, amount);\\n    }\\n\\n    // function _mint(address to, uint256 amount) internal {\\n    //     require(to != address(0), \\\"Cannot mint to 0x0\\\");\\n    //     require(amount > 0, \\\"cannot mint 0 tokens\\\");\\n    //     uint256 currentTotalSupply = _totalSupply;\\n    //     uint256 newTotalSupply = currentTotalSupply + amount;\\n    //     require(newTotalSupply > currentTotalSupply, \\\"overflow\\\");\\n    //     _totalSupply = newTotalSupply;\\n    //     _balances[to] += amount;\\n    //     emit Transfer(address(0), to, amount);\\n    // }\\n\\n    // function _burn(address from, uint256 amount) internal {\\n    //     require(amount > 0, \\\"cannot burn 0 tokens\\\");\\n    //     if (msg.sender != from) {\\n    //         uint256 currentAllowance = _allowances[from][msg.sender];\\n    //         require(\\n    //             currentAllowance >= amount,\\n    //             \\\"Not enough funds allowed\\\"\\n    //         );\\n    //         if (currentAllowance != (2**256) - 1) {\\n    //             // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n    //             _allowances[from][msg.sender] = currentAllowance - amount;\\n    //         }\\n    //     }\\n\\n    //     uint256 currentBalance = balanceOf(from);\\n    //     require(currentBalance >= amount, \\\"Not enough funds\\\");\\n    //     _balances[from] = currentBalance - amount;\\n    //     _totalSupply -= amount;\\n    //     emit Transfer(from, address(0), amount);\\n    // }\\n\\n    // --- Approve by signature ---\\n    function permit(address holder, address spender, uint256 nonce, uint256 expiry,\\n                    bool allowed, uint8 v, bytes32 r, bytes32 s) external\\n    {\\n        bytes32 digest =\\n            keccak256(abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(abi.encode(PERMIT_TYPEHASH,\\n                                     holder,\\n                                     spender,\\n                                     nonce,\\n                                     expiry,\\n                                     allowed))\\n        ));\\n\\n        require(holder != address(0), \\\"Dai/invalid-address-0\\\");\\n        require(holder == ecrecover(digest, v, r, s), \\\"Dai/invalid-permit\\\");\\n        require(expiry == 0 || now <= expiry, \\\"Dai/permit-expired\\\");\\n        require(nonce == nonces[holder]++, \\\"Dai/invalid-nonce\\\");\\n        uint wad = allowed ? uint(-1) : 0;\\n        _allowances[holder][spender] = wad;\\n        emit Approval(holder, spender, wad);\\n    }\\n}\\n\",\"keccak256\":\"0xec82c958ca88eff94163197e4cce71064026ba70160dce25bae5b20b4163ba94\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "allowance(address,address)": {
              "notice": "gets allowance of `spender` for `owner`'s tokens."
            },
            "approve(address,uint256)": {
              "notice": "approve `spender` to transfer `amount` tokens."
            },
            "approveFor(address,address,uint256)": {
              "notice": "approve `spender` to transfer `amount` tokens from `owner`."
            },
            "balanceOf(address)": {
              "notice": "Gets the balance of `owner`."
            },
            "decimals()": {
              "notice": "returns the number of decimals for that token."
            },
            "totalSupply()": {
              "notice": "Gets the total number of tokens in existence."
            },
            "transfer(address,uint256)": {
              "notice": "Transfer `amount` tokens to `to`."
            },
            "transferFrom(address,address,uint256)": {
              "notice": "Transfer `amount` tokens from `from` to `to`."
            }
          }
        }
      },
      "args": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "0x0000000000000000000000000000000000000000"
      ],
      "address": "0xCc4E49EC86a6A7E6c90c98920Db0DA91EB72586f",
      "transactionHash": "0xaa33a9a2ff8511397091f690a3f01f9a1b0ad76ff4ec7b8a1a20870e83b380d2"
    },
    "GenericMetaTxProcessor": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "batchId",
                "type": "uint256"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "batchNonce",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "returnData",
                "type": "bytes"
              }
            ],
            "name": "MetaTx",
            "type": "event"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                  },
                  {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                  },
                  {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                  },
                  {
                    "internalType": "enum GenericMetaTxProcessor.SignatureType",
                    "name": "signatureType",
                    "type": "uint8"
                  }
                ],
                "internalType": "struct GenericMetaTxProcessor.Call",
                "name": "callData",
                "type": "tuple"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "tokenContract",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "batchId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "batchNonce",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "expiry",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "txGas",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "baseGas",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "tokenGasPrice",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "relayer",
                    "type": "address"
                  }
                ],
                "internalType": "struct GenericMetaTxProcessor.CallParams",
                "name": "callParams",
                "type": "tuple"
              },
              {
                "internalType": "address",
                "name": "tokenReceiver",
                "type": "address"
              }
            ],
            "name": "executeMetaTransaction",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              },
              {
                "internalType": "bytes",
                "name": "returnData",
                "type": "bytes"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "batchId",
                "type": "uint256"
              }
            ],
            "name": "meta_nonce",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60806040526002805460ff1916905534801561001a57600080fd5b50604051610027906100b1565b604051809103902060405161003b90610088565b604051809103902060405161004f9061010b565b6040519081900381206100689392913090602001610118565b60408051601f19818403018152919052805160209091012060005561013c565b7f47656e65726963204d657461205472616e73616374696f6e0000000000000000815260180190565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c6164647265737320766572696679696e67436f6e74726163602082015261742960f01b604082015260420190565b603160f81b815260010190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b6114718061014b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806326d431e21461003b57806353f1defe14610065575b600080fd5b61004e610049366004610e28565b610085565b60405161005c9291906110e3565b60405180910390f35b610078610073366004610daf565b6100f9565b60405161005c91906113df565b60025460009060609060ff16156100b75760405162461bcd60e51b81526004016100ae90611353565b60405180910390fd5b6002805460ff191660011790556100ce8585610124565b6100d885856101db565b6100e38585856103ce565b6002805460ff1916905590969095509350505050565b6001600160a01b03821660009081526001602090815260408083208484529091529020545b92915050565b6101008101516001600160a01b0316158061014c57506101008101516001600160a01b031633145b6101685760405162461bcd60e51b81526004016100ae906112ae565b8060800151421061018b5760405162461bcd60e51b81526004016100ae90611265565b606081015182516001600160a01b031660009081526001602081815260408084208187015185529091529091205401146101d75760405162461bcd60e51b81526004016100ae906111d1565b5050565b60606101e783836108c8565b90506002836080015160028111156101fb57fe5b14156102b157825160608401516040516320c13b0b60e01b808252926001600160a01b0316916320c13b0b916102359186916004016111a3565b60206040518083038186803b15801561024d57600080fd5b505afa158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102859190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611378565b6103c9565b6001836080015160028111156102c357fe5b1415610379578251815160208301206060850151604051630b135d3f60e11b808252936001600160a01b031692631626ba7e926103029260040161116c565b60206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103529190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611235565b600061039082805190602001208560600151610904565b905083600001516001600160a01b0316816001600160a01b0316146103c75760405162461bcd60e51b81526004016100ae90611286565b505b505050565b60608281015184516001600160a01b031660009081526001602090815260408083208188015184529091528082209290925584519186015151909291906104f95760e08501511561044757610441866000015187602001518388602001518960a001518a60e001518b60c001518b6109bf565b506104f0565b8551602080880151908701516040516323b872dd60e01b81526001600160a01b038516936323b872dd936104829391929091906004016110a6565b602060405180830381600087803b15801561049c57600080fd5b505af11580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104d49190810190610dd9565b6104f05760405162461bcd60e51b81526004016100ae90611302565b6001925061086e565b61050b86604001518760000151610a6e565b6105275760405162461bcd60e51b81526004016100ae90611208565b6020850151600090156106df576040516370a0823160e01b81526001600160a01b038316906370a0823190610560903090600401611092565b60206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105b09190810190610f14565b875160208801516040516323b872dd60e01b81529293506001600160a01b038516926323b872dd926105e99290913091906004016110a6565b602060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061063b9190810190610dd9565b6106575760405162461bcd60e51b81526004016100ae906113a8565b6020808801519087015160405163095ea7b360e01b81526001600160a01b0385169263095ea7b39261068b926004016110ca565b602060405180830381600087803b1580156106a557600080fd5b505af11580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106dd9190810190610dd9565b505b60e08601511561071b5761071187600001518860200151848960a001518a60e001518b60c001518b8e60400151610a99565b9094509250610738565b61073287602001518760a001518960400151610ad5565b90945092505b60208601511561086c576040516370a0823160e01b81526000906001600160a01b038416906370a0823190610771903090600401611092565b60206040518083038186803b15801561078957600080fd5b505afa15801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107c19190810190610f14565b90508181111561086a57875160405163a9059cbb60e01b81526001600160a01b0385169163a9059cbb916107fc9190868603906004016110ca565b602060405180830381600087803b15801561081657600080fd5b505af115801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061084e9190810190610dd9565b61086a5760405162461bcd60e51b81526004016100ae906112d5565b505b505b8460600151856040015187600001516001600160a01b03167f7b0be7654550ec505d9f6fba967d2dbc7c84c72f39508dfb76ca7b8dc9d094a886866040516108b79291906110e3565b60405180910390a450935093915050565b60606000546108d78484610b4f565b80516020918201206040516108ed939201610f74565b604051602081830303815290604052905092915050565b6000815160411461091457600080fd5b60208201516040830151606084015160001a601b81101561093357601b015b8060ff16601b148061094857508060ff16601c145b61095157600080fd5b600186828585604051600081526020016040526040516109749493929190611185565b6020604051602081039080840390855afa158015610996573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b0384166109b657600080fd5b50505092915050565b6000805a6040516323b872dd60e01b81529091506001600160a01b038916906323b872dd906109f6908d908d908c906004016110a6565b602060405180830381600087803b158015610a1057600080fd5b505af1158015610a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a489190810190610dd9565b508415610a5e57610a5e8a898888858989610bc9565b5060019998505050505050505050565b6000604483511015610a825750600061011e565b5060248201516001600160a01b0382161492915050565b6000606060005a9050610aad8a8986610ad5565b90935091508615610ac757610ac78b8a8a8a858b8b610bc9565b509850989650505050505050565b60006060846001600160a01b03168484604051610af29190610f58565b60006040518083038160008787f1925050503d8060008114610b30576040519150601f19603f3d011682016040523d82523d6000602084013e610b35565b606091505b509092509050603f84045a11610b4757fe5b935093915050565b6060604051610b5d90610f8f565b604051809103902083600001518460200151846000015185602001518760400151604051610b8b9190610f58565b604080519182900382209089015160608a015160808b015160a08c015160c08d015160e08e01516101008f01516108ed9d9c9b9a9998602001611106565b60005a8403905085811115610bdb5750845b820184810285828281610bea57fe5b0414610c085760405162461bcd60e51b81526004016100ae90611331565b6040516323b872dd60e01b81526001600160a01b038916906323b872dd90610c38908c90879086906004016110a6565b602060405180830381600087803b158015610c5257600080fd5b505af1158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c8a9190810190610dd9565b50505050505050505050565b80356001600160a01b038116811461011e57600080fd5b600082601f830112610cbd578081fd5b813567ffffffffffffffff811115610cd3578182fd5b610ce6601f8201601f19166020016113e8565b9150808252836020828501011115610cfd57600080fd5b8060208401602084013760009082016020015292915050565b80356003811061011e57600080fd5b6000610120808385031215610d38578182fd5b610d41816113e8565b915050610d4e8383610c96565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100610da584828501610c96565b9082015292915050565b60008060408385031215610dc1578182fd5b610dcb8484610c96565b946020939093013593505050565b600060208284031215610dea578081fd5b81518015158114610df9578182fd5b9392505050565b600060208284031215610e11578081fd5b81516001600160e01b031981168114610df9578182fd5b60008060006101608486031215610e3d578081fd5b833567ffffffffffffffff80821115610e54578283fd5b81860160a08189031215610e66578384fd5b610e7060a06113e8565b9250610e7c8882610c96565b8352610e8b8860208301610c96565b6020840152604081013582811115610ea1578485fd5b610ead89828401610cad565b604085015250606081013582811115610ec4578485fd5b610ed089828401610cad565b606085015250610ee38860808301610d16565b6080840152505080935050610efb8560208601610d25565b9150610f0b856101408601610c96565b90509250925092565b600060208284031215610f25578081fd5b5051919050565b60008151808452610f4481602086016020860161140f565b601f01601f19169290920160200192915050565b60008251610f6a81846020870161140f565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b7f45524332304d6574615472616e73616374696f6e28616464726573732066726f81527f6d2c6164647265737320746f2c6164647265737320746f6b656e436f6e74726160208201527f63742c75696e7432353620616d6f756e742c627974657320646174612c75696e60408201527f7432353620626174636849642c75696e743235362062617463684e6f6e63652c60608201527f75696e74323536206578706972792c75696e743235362074784761732c75696e60808201527f7432353620626173654761732c75696e7432353620746f6b656e47617350726960a08201527263652c616464726573732072656c617965722960681b60c082015260d30190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60008315158252604060208301526110fe6040830184610f2c565b949350505050565b9c8d526001600160a01b039b8c1660208e0152998b1660408d0152978a1660608c015260808b019690965260a08a019490945260c089019290925260e0880152610100870152610120860152610140850152610160840152166101808201526101a00190565b6000838252604060208301526110fe6040830184610f2c565b93845260ff9290921660208401526040830152606082015260800190565b6000604082526111b66040830185610f2c565b82810360208401526111c88185610f2c565b95945050505050565b60208082526017908201527f62617463684e6f6e6365206f7574206f66206f72646572000000000000000000604082015260600190565b602080825260139082015272666972737420706172616d20213d2066726f6d60681b604082015260600190565b602080825260169082015275696e76616c69642031363534207369676e617475726560501b604082015260600190565b602080825260079082015266195e1c1a5c995960ca1b604082015260600190565b6020808252600e908201526d7369676e657220213d2066726f6d60901b604082015260600190565b6020808252600d908201526c3bb937b733903932b630bcb2b960991b604082015260600190565b602080825260139082015272115490cc8c17d4915195539117d19052531151606a1b604082015260600190565b602080825260159082015274115490cc8c17d514905394d1915497d19052531151605a1b604082015260600190565b6020808252600890820152676f766572666c6f7760c01b604082015260600190565b6020808252600b908201526a494e5f50524f475245535360a81b604082015260600190565b602080825260169082015275696e76616c69642031323731207369676e617475726560501b604082015260600190565b60208082526017908201527f45524332305f414c4c4f434154494f4e5f4641494c4544000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561140757600080fd5b604052919050565b60005b8381101561142a578181015183820152602001611412565b838111156103c7575050600091015256fea2646970667358221220e6d61c2c64c813c35c482f4c60c86e19df7fe0b77f980bd80c625c3e3c73f71064736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x27 SWAP1 PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x3B SWAP1 PUSH2 0x88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x4F SWAP1 PUSH2 0x10B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH2 0x68 SWAP4 SWAP3 SWAP2 ADDRESS SWAP1 PUSH1 0x20 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x0 SSTORE PUSH2 0x13C JUMP JUMPDEST PUSH32 0x47656E65726963204D657461205472616E73616374696F6E0000000000000000 DUP2 MSTORE PUSH1 0x18 ADD SWAP1 JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C6164647265737320766572696679696E67436F6E74726163 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x7429 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1471 DUP1 PUSH2 0x14B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D431E2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x53F1DEFE EQ PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xCE DUP6 DUP6 PUSH2 0x124 JUMP JUMPDEST PUSH2 0xD8 DUP6 DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0xE3 DUP6 DUP6 DUP6 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x14C JUMPI POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12AE JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD TIMESTAMP LT PUSH2 0x18B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 DUP8 ADD MLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD ADD EQ PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x11D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E7 DUP4 DUP4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1FB JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2B1 JUMPI DUP3 MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x20C13B0B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x20C13B0B SWAP2 PUSH2 0x235 SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x285 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x379 JUMPI DUP3 MLOAD DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x1626BA7E SWAP3 PUSH2 0x302 SWAP3 PUSH1 0x4 ADD PUSH2 0x116C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x352 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x904 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1286 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP2 ADD MLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 DUP9 ADD MLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP5 MLOAD SWAP2 DUP7 ADD MLOAD MLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4F9 JUMPI PUSH1 0xE0 DUP6 ADD MLOAD ISZERO PUSH2 0x447 JUMPI PUSH2 0x441 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD DUP4 DUP9 PUSH1 0x20 ADD MLOAD DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 PUSH2 0x9BF JUMP JUMPDEST POP PUSH2 0x4F0 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x482 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x4D4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x86E JUMP JUMPDEST PUSH2 0x50B DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x560 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x5B0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x5E9 SWAP3 SWAP1 SWAP2 ADDRESS SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x63B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x68B SWAP3 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x6DD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP JUMPDEST PUSH1 0xE0 DUP7 ADD MLOAD ISZERO PUSH2 0x71B JUMPI PUSH2 0x711 DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP5 DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 DUP15 PUSH1 0x40 ADD MLOAD PUSH2 0xA99 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x738 JUMP JUMPDEST PUSH2 0x732 DUP8 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0x40 ADD MLOAD PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x771 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x7C1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x86A JUMPI DUP8 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x7FC SWAP2 SWAP1 DUP7 DUP7 SUB SWAP1 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x84E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12D5 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7B0BE7654550EC505D9F6FBA967D2DBC7C84C72F39508DFB76CA7B8DC9D094A8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8B7 SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 SLOAD PUSH2 0x8D7 DUP5 DUP5 PUSH2 0xB4F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x8ED SWAP4 SWAP3 ADD PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x948 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP7 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x974 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x9F6 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xA48 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP DUP5 ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5E DUP11 DUP10 DUP9 DUP9 DUP6 DUP10 DUP10 PUSH2 0xBC9 JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 DUP4 MLOAD LT ISZERO PUSH2 0xA82 JUMPI POP PUSH1 0x0 PUSH2 0x11E JUMP JUMPDEST POP PUSH1 0x24 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 GAS SWAP1 POP PUSH2 0xAAD DUP11 DUP10 DUP7 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP7 ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC7 DUP12 DUP11 DUP11 DUP11 DUP6 DUP12 DUP12 PUSH2 0xBC9 JUMP JUMPDEST POP SWAP9 POP SWAP9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF2 SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x3F DUP5 DIV GAS GT PUSH2 0xB47 JUMPI INVALID JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0xB5D SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 SWAP1 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 DUP13 ADD MLOAD PUSH1 0xC0 DUP14 ADD MLOAD PUSH1 0xE0 DUP15 ADD MLOAD PUSH2 0x100 DUP16 ADD MLOAD PUSH2 0x8ED SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 PUSH1 0x20 ADD PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x0 GAS DUP5 SUB SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0xBDB JUMPI POP DUP5 JUMPDEST DUP3 ADD DUP5 DUP2 MUL DUP6 DUP3 DUP3 DUP2 PUSH2 0xBEA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xC38 SWAP1 DUP13 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xC8A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCBD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xCE6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD38 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD4E DUP4 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xDA5 DUP5 DUP3 DUP6 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDCB DUP5 DUP5 PUSH2 0xC96 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE11 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE3D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE54 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD PUSH1 0xA0 DUP2 DUP10 SUB SLT ISZERO PUSH2 0xE66 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xE70 PUSH1 0xA0 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 POP PUSH2 0xE7C DUP9 DUP3 PUSH2 0xC96 JUMP JUMPDEST DUP4 MSTORE PUSH2 0xE8B DUP9 PUSH1 0x20 DUP4 ADD PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEA1 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xEAD DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE POP PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEC4 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xED0 DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE POP PUSH2 0xEE3 DUP9 PUSH1 0x80 DUP4 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE POP POP DUP1 SWAP4 POP POP PUSH2 0xEFB DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0B DUP6 PUSH2 0x140 DUP7 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF25 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF44 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x140F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF6A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x140F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH32 0x45524332304D6574615472616E73616374696F6E28616464726573732066726F DUP2 MSTORE PUSH32 0x6D2C6164647265737320746F2C6164647265737320746F6B656E436F6E747261 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x63742C75696E7432353620616D6F756E742C627974657320646174612C75696E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7432353620626174636849642C75696E743235362062617463684E6F6E63652C PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x75696E74323536206578706972792C75696E743235362074784761732C75696E PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x7432353620626173654761732C75696E7432353620746F6B656E476173507269 PUSH1 0xA0 DUP3 ADD MSTORE PUSH19 0x63652C616464726573732072656C6179657229 PUSH1 0x68 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xD3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP13 DUP14 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP10 DUP12 AND PUSH1 0x40 DUP14 ADD MSTORE SWAP8 DUP11 AND PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP11 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE AND PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x11B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF2C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11C8 DUP2 DUP6 PUSH2 0xF2C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x62617463684E6F6E6365206F7574206F66206F72646572000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x666972737420706172616D20213D2066726F6D PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031363534207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x7369676E657220213D2066726F6D PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x3BB937B733903932B630BCB2B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x115490CC8C17D4915195539117D19052531151 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x494E5F50524F4752455353 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031323731207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305F414C4C4F434154494F4E5F4641494C4544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1412 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xD6 SHR 0x2C PUSH5 0xC813C35C48 0x2F 0x4C PUSH1 0xC8 PUSH15 0x19DF7FE0B77F980BD80C625C3E3C73 0xF7 LT PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "394:9709:1:-:0;;;1686:17;;;-1:-1:-1;;1686:17:1;;;1760:271;5:2:-1;;;;30:1;27;20:12;5:2;1760:271:1;785:93;;;;;;;;;;;;;;1900:37;;;;;;;;;;;;;;1955:14;;;;;;;;;;;;;;;1833:181;;;;1995:4;;1833:181;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;1833:181:1;;;1810:214;;49:4:-1;1810:214:1;;;;1791:16;:233;394:9709;;1443:372:-1;542:26;522:47;;506:2;588:12;;1623:192;1822:372;911:34;891:55;;980:34;975:2;966:12;;959:56;-1:-1;;;1044:2;1035:12;;1028:26;875:2;1073:12;;2002:192;2201:372;-1:-1;;;1375:24;;1360:1;1418:11;;2381:192;2580:547;196:37;;;2947:2;2932:18;;196:37;;;;3030:2;3015:18;;196:37;-1:-1;;;;;3527:54;3113:2;3098:18;;76:37;2782:3;2767:19;;2753:374;;394:9709:1;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806326d431e21461003b57806353f1defe14610065575b600080fd5b61004e610049366004610e28565b610085565b60405161005c9291906110e3565b60405180910390f35b610078610073366004610daf565b6100f9565b60405161005c91906113df565b60025460009060609060ff16156100b75760405162461bcd60e51b81526004016100ae90611353565b60405180910390fd5b6002805460ff191660011790556100ce8585610124565b6100d885856101db565b6100e38585856103ce565b6002805460ff1916905590969095509350505050565b6001600160a01b03821660009081526001602090815260408083208484529091529020545b92915050565b6101008101516001600160a01b0316158061014c57506101008101516001600160a01b031633145b6101685760405162461bcd60e51b81526004016100ae906112ae565b8060800151421061018b5760405162461bcd60e51b81526004016100ae90611265565b606081015182516001600160a01b031660009081526001602081815260408084208187015185529091529091205401146101d75760405162461bcd60e51b81526004016100ae906111d1565b5050565b60606101e783836108c8565b90506002836080015160028111156101fb57fe5b14156102b157825160608401516040516320c13b0b60e01b808252926001600160a01b0316916320c13b0b916102359186916004016111a3565b60206040518083038186803b15801561024d57600080fd5b505afa158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102859190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611378565b6103c9565b6001836080015160028111156102c357fe5b1415610379578251815160208301206060850151604051630b135d3f60e11b808252936001600160a01b031692631626ba7e926103029260040161116c565b60206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103529190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611235565b600061039082805190602001208560600151610904565b905083600001516001600160a01b0316816001600160a01b0316146103c75760405162461bcd60e51b81526004016100ae90611286565b505b505050565b60608281015184516001600160a01b031660009081526001602090815260408083208188015184529091528082209290925584519186015151909291906104f95760e08501511561044757610441866000015187602001518388602001518960a001518a60e001518b60c001518b6109bf565b506104f0565b8551602080880151908701516040516323b872dd60e01b81526001600160a01b038516936323b872dd936104829391929091906004016110a6565b602060405180830381600087803b15801561049c57600080fd5b505af11580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104d49190810190610dd9565b6104f05760405162461bcd60e51b81526004016100ae90611302565b6001925061086e565b61050b86604001518760000151610a6e565b6105275760405162461bcd60e51b81526004016100ae90611208565b6020850151600090156106df576040516370a0823160e01b81526001600160a01b038316906370a0823190610560903090600401611092565b60206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105b09190810190610f14565b875160208801516040516323b872dd60e01b81529293506001600160a01b038516926323b872dd926105e99290913091906004016110a6565b602060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061063b9190810190610dd9565b6106575760405162461bcd60e51b81526004016100ae906113a8565b6020808801519087015160405163095ea7b360e01b81526001600160a01b0385169263095ea7b39261068b926004016110ca565b602060405180830381600087803b1580156106a557600080fd5b505af11580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106dd9190810190610dd9565b505b60e08601511561071b5761071187600001518860200151848960a001518a60e001518b60c001518b8e60400151610a99565b9094509250610738565b61073287602001518760a001518960400151610ad5565b90945092505b60208601511561086c576040516370a0823160e01b81526000906001600160a01b038416906370a0823190610771903090600401611092565b60206040518083038186803b15801561078957600080fd5b505afa15801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107c19190810190610f14565b90508181111561086a57875160405163a9059cbb60e01b81526001600160a01b0385169163a9059cbb916107fc9190868603906004016110ca565b602060405180830381600087803b15801561081657600080fd5b505af115801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061084e9190810190610dd9565b61086a5760405162461bcd60e51b81526004016100ae906112d5565b505b505b8460600151856040015187600001516001600160a01b03167f7b0be7654550ec505d9f6fba967d2dbc7c84c72f39508dfb76ca7b8dc9d094a886866040516108b79291906110e3565b60405180910390a450935093915050565b60606000546108d78484610b4f565b80516020918201206040516108ed939201610f74565b604051602081830303815290604052905092915050565b6000815160411461091457600080fd5b60208201516040830151606084015160001a601b81101561093357601b015b8060ff16601b148061094857508060ff16601c145b61095157600080fd5b600186828585604051600081526020016040526040516109749493929190611185565b6020604051602081039080840390855afa158015610996573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b0384166109b657600080fd5b50505092915050565b6000805a6040516323b872dd60e01b81529091506001600160a01b038916906323b872dd906109f6908d908d908c906004016110a6565b602060405180830381600087803b158015610a1057600080fd5b505af1158015610a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a489190810190610dd9565b508415610a5e57610a5e8a898888858989610bc9565b5060019998505050505050505050565b6000604483511015610a825750600061011e565b5060248201516001600160a01b0382161492915050565b6000606060005a9050610aad8a8986610ad5565b90935091508615610ac757610ac78b8a8a8a858b8b610bc9565b509850989650505050505050565b60006060846001600160a01b03168484604051610af29190610f58565b60006040518083038160008787f1925050503d8060008114610b30576040519150601f19603f3d011682016040523d82523d6000602084013e610b35565b606091505b509092509050603f84045a11610b4757fe5b935093915050565b6060604051610b5d90610f8f565b604051809103902083600001518460200151846000015185602001518760400151604051610b8b9190610f58565b604080519182900382209089015160608a015160808b015160a08c015160c08d015160e08e01516101008f01516108ed9d9c9b9a9998602001611106565b60005a8403905085811115610bdb5750845b820184810285828281610bea57fe5b0414610c085760405162461bcd60e51b81526004016100ae90611331565b6040516323b872dd60e01b81526001600160a01b038916906323b872dd90610c38908c90879086906004016110a6565b602060405180830381600087803b158015610c5257600080fd5b505af1158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c8a9190810190610dd9565b50505050505050505050565b80356001600160a01b038116811461011e57600080fd5b600082601f830112610cbd578081fd5b813567ffffffffffffffff811115610cd3578182fd5b610ce6601f8201601f19166020016113e8565b9150808252836020828501011115610cfd57600080fd5b8060208401602084013760009082016020015292915050565b80356003811061011e57600080fd5b6000610120808385031215610d38578182fd5b610d41816113e8565b915050610d4e8383610c96565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100610da584828501610c96565b9082015292915050565b60008060408385031215610dc1578182fd5b610dcb8484610c96565b946020939093013593505050565b600060208284031215610dea578081fd5b81518015158114610df9578182fd5b9392505050565b600060208284031215610e11578081fd5b81516001600160e01b031981168114610df9578182fd5b60008060006101608486031215610e3d578081fd5b833567ffffffffffffffff80821115610e54578283fd5b81860160a08189031215610e66578384fd5b610e7060a06113e8565b9250610e7c8882610c96565b8352610e8b8860208301610c96565b6020840152604081013582811115610ea1578485fd5b610ead89828401610cad565b604085015250606081013582811115610ec4578485fd5b610ed089828401610cad565b606085015250610ee38860808301610d16565b6080840152505080935050610efb8560208601610d25565b9150610f0b856101408601610c96565b90509250925092565b600060208284031215610f25578081fd5b5051919050565b60008151808452610f4481602086016020860161140f565b601f01601f19169290920160200192915050565b60008251610f6a81846020870161140f565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b7f45524332304d6574615472616e73616374696f6e28616464726573732066726f81527f6d2c6164647265737320746f2c6164647265737320746f6b656e436f6e74726160208201527f63742c75696e7432353620616d6f756e742c627974657320646174612c75696e60408201527f7432353620626174636849642c75696e743235362062617463684e6f6e63652c60608201527f75696e74323536206578706972792c75696e743235362074784761732c75696e60808201527f7432353620626173654761732c75696e7432353620746f6b656e47617350726960a08201527263652c616464726573732072656c617965722960681b60c082015260d30190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60008315158252604060208301526110fe6040830184610f2c565b949350505050565b9c8d526001600160a01b039b8c1660208e0152998b1660408d0152978a1660608c015260808b019690965260a08a019490945260c089019290925260e0880152610100870152610120860152610140850152610160840152166101808201526101a00190565b6000838252604060208301526110fe6040830184610f2c565b93845260ff9290921660208401526040830152606082015260800190565b6000604082526111b66040830185610f2c565b82810360208401526111c88185610f2c565b95945050505050565b60208082526017908201527f62617463684e6f6e6365206f7574206f66206f72646572000000000000000000604082015260600190565b602080825260139082015272666972737420706172616d20213d2066726f6d60681b604082015260600190565b602080825260169082015275696e76616c69642031363534207369676e617475726560501b604082015260600190565b602080825260079082015266195e1c1a5c995960ca1b604082015260600190565b6020808252600e908201526d7369676e657220213d2066726f6d60901b604082015260600190565b6020808252600d908201526c3bb937b733903932b630bcb2b960991b604082015260600190565b602080825260139082015272115490cc8c17d4915195539117d19052531151606a1b604082015260600190565b602080825260159082015274115490cc8c17d514905394d1915497d19052531151605a1b604082015260600190565b6020808252600890820152676f766572666c6f7760c01b604082015260600190565b6020808252600b908201526a494e5f50524f475245535360a81b604082015260600190565b602080825260169082015275696e76616c69642031323731207369676e617475726560501b604082015260600190565b60208082526017908201527f45524332305f414c4c4f434154494f4e5f4641494c4544000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561140757600080fd5b604052919050565b60005b8381101561142a578181015183820152602001611412565b838111156103c7575050600091015256fea2646970667358221220e6d61c2c64c813c35c482f4c60c86e19df7fe0b77f980bd80c625c3e3c73f71064736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D431E2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x53F1DEFE EQ PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xCE DUP6 DUP6 PUSH2 0x124 JUMP JUMPDEST PUSH2 0xD8 DUP6 DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0xE3 DUP6 DUP6 DUP6 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x14C JUMPI POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12AE JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD TIMESTAMP LT PUSH2 0x18B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 DUP8 ADD MLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD ADD EQ PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x11D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E7 DUP4 DUP4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1FB JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2B1 JUMPI DUP3 MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x20C13B0B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x20C13B0B SWAP2 PUSH2 0x235 SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x285 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x379 JUMPI DUP3 MLOAD DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x1626BA7E SWAP3 PUSH2 0x302 SWAP3 PUSH1 0x4 ADD PUSH2 0x116C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x352 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x904 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1286 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP2 ADD MLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 DUP9 ADD MLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP5 MLOAD SWAP2 DUP7 ADD MLOAD MLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4F9 JUMPI PUSH1 0xE0 DUP6 ADD MLOAD ISZERO PUSH2 0x447 JUMPI PUSH2 0x441 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD DUP4 DUP9 PUSH1 0x20 ADD MLOAD DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 PUSH2 0x9BF JUMP JUMPDEST POP PUSH2 0x4F0 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x482 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x4D4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x86E JUMP JUMPDEST PUSH2 0x50B DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x560 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x5B0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x5E9 SWAP3 SWAP1 SWAP2 ADDRESS SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x63B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x68B SWAP3 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x6DD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP JUMPDEST PUSH1 0xE0 DUP7 ADD MLOAD ISZERO PUSH2 0x71B JUMPI PUSH2 0x711 DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP5 DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 DUP15 PUSH1 0x40 ADD MLOAD PUSH2 0xA99 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x738 JUMP JUMPDEST PUSH2 0x732 DUP8 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0x40 ADD MLOAD PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x771 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x7C1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x86A JUMPI DUP8 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x7FC SWAP2 SWAP1 DUP7 DUP7 SUB SWAP1 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x84E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12D5 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7B0BE7654550EC505D9F6FBA967D2DBC7C84C72F39508DFB76CA7B8DC9D094A8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8B7 SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 SLOAD PUSH2 0x8D7 DUP5 DUP5 PUSH2 0xB4F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x8ED SWAP4 SWAP3 ADD PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x948 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP7 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x974 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x9F6 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xA48 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP DUP5 ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5E DUP11 DUP10 DUP9 DUP9 DUP6 DUP10 DUP10 PUSH2 0xBC9 JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 DUP4 MLOAD LT ISZERO PUSH2 0xA82 JUMPI POP PUSH1 0x0 PUSH2 0x11E JUMP JUMPDEST POP PUSH1 0x24 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 GAS SWAP1 POP PUSH2 0xAAD DUP11 DUP10 DUP7 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP7 ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC7 DUP12 DUP11 DUP11 DUP11 DUP6 DUP12 DUP12 PUSH2 0xBC9 JUMP JUMPDEST POP SWAP9 POP SWAP9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF2 SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x3F DUP5 DIV GAS GT PUSH2 0xB47 JUMPI INVALID JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0xB5D SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 SWAP1 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 DUP13 ADD MLOAD PUSH1 0xC0 DUP14 ADD MLOAD PUSH1 0xE0 DUP15 ADD MLOAD PUSH2 0x100 DUP16 ADD MLOAD PUSH2 0x8ED SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 PUSH1 0x20 ADD PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x0 GAS DUP5 SUB SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0xBDB JUMPI POP DUP5 JUMPDEST DUP3 ADD DUP5 DUP2 MUL DUP6 DUP3 DUP3 DUP2 PUSH2 0xBEA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xC38 SWAP1 DUP13 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xC8A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCBD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xCE6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD38 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD4E DUP4 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xDA5 DUP5 DUP3 DUP6 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDCB DUP5 DUP5 PUSH2 0xC96 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE11 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE3D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE54 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD PUSH1 0xA0 DUP2 DUP10 SUB SLT ISZERO PUSH2 0xE66 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xE70 PUSH1 0xA0 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 POP PUSH2 0xE7C DUP9 DUP3 PUSH2 0xC96 JUMP JUMPDEST DUP4 MSTORE PUSH2 0xE8B DUP9 PUSH1 0x20 DUP4 ADD PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEA1 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xEAD DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE POP PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEC4 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xED0 DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE POP PUSH2 0xEE3 DUP9 PUSH1 0x80 DUP4 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE POP POP DUP1 SWAP4 POP POP PUSH2 0xEFB DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0B DUP6 PUSH2 0x140 DUP7 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF25 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF44 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x140F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF6A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x140F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH32 0x45524332304D6574615472616E73616374696F6E28616464726573732066726F DUP2 MSTORE PUSH32 0x6D2C6164647265737320746F2C6164647265737320746F6B656E436F6E747261 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x63742C75696E7432353620616D6F756E742C627974657320646174612C75696E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7432353620626174636849642C75696E743235362062617463684E6F6E63652C PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x75696E74323536206578706972792C75696E743235362074784761732C75696E PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x7432353620626173654761732C75696E7432353620746F6B656E476173507269 PUSH1 0xA0 DUP3 ADD MSTORE PUSH19 0x63652C616464726573732072656C6179657229 PUSH1 0x68 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xD3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP13 DUP14 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP10 DUP12 AND PUSH1 0x40 DUP14 ADD MSTORE SWAP8 DUP11 AND PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP11 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE AND PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x11B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF2C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11C8 DUP2 DUP6 PUSH2 0xF2C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x62617463684E6F6E6365206F7574206F66206F72646572000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x666972737420706172616D20213D2066726F6D PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031363534207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x7369676E657220213D2066726F6D PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x3BB937B733903932B630BCB2B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x115490CC8C17D4915195539117D19052531151 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x494E5F50524F4752455353 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031323731207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305F414C4C4F434154494F4E5F4641494C4544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1412 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xD6 SHR 0x2C PUSH5 0xC813C35C48 0x2F 0x4C PUSH1 0xC8 PUSH15 0x19DF7FE0B77F980BD80C625C3E3C73 0xF7 LT PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "394:9709:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:9709:1;;;;;;;;;;;;;;;;;;;;;;;;2453:480;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;9973:128;;;;;;;;;:::i;:::-;;;;;;;;2453:480;2664:4;;2606:12;;2620:23;;2664:4;;2663:5;2655:29;;;;-1:-1:-1;;;2655:29:1;;;;;;;;;;;;;;;;;2694:4;:11;;-1:-1:-1;;2694:11:1;2701:4;2694:11;;;2715:47;2741:8;2751:10;2715:25;:47::i;:::-;2772:42;2793:8;2803:10;2772:20;:42::i;:::-;2848:56;2868:8;2878:10;2890:13;2848:19;:56::i;:::-;2914:4;:12;;-1:-1:-1;;2914:12:1;;;2824:80;;;;-1:-1:-1;2453:480:1;-1:-1:-1;;;;2453:480:1:o;9973:128::-;-1:-1:-1;;;;;10072:13:1;;10046:7;10072:13;;;:7;:13;;;;;;;;:22;;;;;;;;;9973:128;;;;;:::o;3014:450::-;3168:18;;;;-1:-1:-1;;;;;3168:32:1;;;:68;;-1:-1:-1;3204:18:1;;;;-1:-1:-1;;;;;3204:32:1;3226:10;3204:32;3168:68;3147:128;;;;-1:-1:-1;;;3147:128:1;;;;;;;;;3311:10;:17;;;3293:15;:35;3285:55;;;;-1:-1:-1;;;3285:55:1;;;;;;;;;3408:21;;;;3366:13;;-1:-1:-1;;;;;3358:22:1;;;;;:7;:22;;;;;;;;3381:18;;;;3358:42;;;;;;;;;:46;:71;3350:107;;;;-1:-1:-1;;;3350:107:1;;;;;;;;;3014:450;;:::o;4388:895::-;4516:23;4542:36;4557:8;4567:10;4542:14;:36::i;:::-;4516:62;-1:-1:-1;4618:21:1;4592:8;:22;;;:47;;;;;;;;;4588:689;;;4688:13;;4732:18;;;;4680:71;;-1:-1:-1;;;4680:71:1;;;4755:18;-1:-1:-1;;;;;4680:39:1;;103:10:3;;4680:71:1;;4720:10;;4680:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4680:71:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4680:71:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4680:71:1;;;;;;;;;-1:-1:-1;;;;;;4680:93:1;;4655:174;;;;-1:-1:-1;;;4655:174:1;;;;;;;;;4588:689;;;4875:21;4849:8;:22;;;:47;;;;;;;;;4846:431;;;4944:13;;4976:21;;;;;;4999:18;;;;4936:82;;-1:-1:-1;;;4936:82:1;;;5022:18;-1:-1:-1;;;;;4936:39:1;;103:10:6;;4936:82:1;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4936:82:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4936:82:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4936:82:1;;;;;;;;;-1:-1:-1;;;;;;4936:104:1;;4911:185;;;;-1:-1:-1;;;4911:185:1;;;;;;;;4846:431;5127:14;5144:58;5170:10;5160:21;;;;;;5183:8;:18;;;5144:15;:58::i;:::-;5127:75;;5234:8;:13;;;-1:-1:-1;;;;;5224:23:1;:6;-1:-1:-1;;;;;5224:23:1;;5216:50;;;;-1:-1:-1;;;5216:50:1;;;;;;;;;4846:431;;4388:895;;;:::o;7432:2535::-;7598:23;7678:21;;;;7641:13;;-1:-1:-1;;;;;7633:22:1;7584:12;7633:22;;;:7;:22;;;;;;;;7656:18;;;;7633:42;;;;;;;;:66;;;;7738:24;;7778:13;;;;:20;7584:12;;7598:23;7738:24;7774:2086;;7822:24;;;;:28;7819:555;;7870:343;7916:8;:13;;;7951:8;:11;;;7984:13;8019:10;:17;;;8058:10;:16;;;8096:10;:24;;;8142:10;:18;;;8182:13;7870:24;:343::i;:::-;;7819:555;;;8287:13;;8302:11;;;;;8315:17;;;;8260:73;;-1:-1:-1;;;8260:73:1;;-1:-1:-1;;;;;8260:26:1;;;;;:73;;8287:13;;8302:11;;8315:17;8260:73;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8260:73:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8260:73:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8260:73:1;;;;;;;;;8252:107;;;;-1:-1:-1;;;8252:107:1;;;;;;;;;8397:4;8387:14;;7774:2086;;;8457:65;8493:8;:13;;;8508:8;:13;;;8457:35;:65::i;:::-;8432:143;;;;-1:-1:-1;;;8432:143:1;;;;;;;;;8629:17;;;;8589:23;;8629:21;8626:315;;8688:38;;-1:-1:-1;;;8688:38:1;;-1:-1:-1;;;;;8688:23:1;;;;;:38;;8720:4;;8688:38;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8688:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8688:38:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8688:38:1;;;;;;;;;8779:13;;8809:17;;;;8752:75;;-1:-1:-1;;;8752:75:1;;8670:56;;-1:-1:-1;;;;;;8752:26:1;;;;;:75;;8779:13;;8802:4;;8809:17;8752:75;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8752:75:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8752:75:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8752:75:1;;;;;;;;;8744:111;;;;-1:-1:-1;;;8744:111:1;;;;;;;;;8895:11;;;;;8908:17;;;;8873:53;;-1:-1:-1;;;8873:53:1;;-1:-1:-1;;;;;8873:21:1;;;;;:53;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8873:53:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8873:53:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8873:53:1;;;;;;;;;;8626:315;8957:24;;;;:28;8954:574;;9029:352;9088:8;:13;;;9123:8;:11;;;9156:13;9191:10;:16;;;9229:10;:24;;;9275:10;:18;;;9315:13;9350:8;:13;;;9029:37;:352::i;:::-;9005:376;;-1:-1:-1;9005:376:1;-1:-1:-1;8954:574:1;;;9444:69;9468:8;:11;;;9481:10;:16;;;9499:8;:13;;;9444:23;:69::i;:::-;9420:93;;-1:-1:-1;9420:93:1;-1:-1:-1;8954:574:1;9544:17;;;;:21;9541:309;;9606:38;;-1:-1:-1;;;9606:38:1;;9585:18;;-1:-1:-1;;;;;9606:23:1;;;;;:38;;9638:4;;9606:38;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9606:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9606:38:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9606:38:1;;;;;;;;;9585:59;;9679:15;9666:10;:28;9662:174;;;9749:13;;9726:67;;-1:-1:-1;;;9726:67:1;;-1:-1:-1;;;;;9726:22:1;;;;;:67;;9749:13;9764:28;;;;9726:67;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9726:67:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9726:67:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9726:67:1;;;;;;;;;9718:99;;;;-1:-1:-1;;;9718:99:1;;;;;;;;;9541:309;;7774:2086;;9917:10;:21;;;9897:10;:18;;;9882:8;:13;;;-1:-1:-1;;;;;9875:85:1;;9940:7;9949:10;9875:85;;;;;;;;;;;;;;;;7432:2535;;;;;;;:::o;3470:298::-;3591:12;3676:16;;3716:34;3729:8;3739:10;3716:12;:34::i;:::-;3706:45;;;;;;;3622:139;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3622:139:1;;;3615:146;;3470:298;;;;:::o;47:637:15:-;143:17;184:3;:10;198:2;184:16;176:25;;;;;;310:2;301:12;;295:19;347:2;338:12;;332:19;392:2;383:12;;377:19;212:9;369:28;516:2;512:6;;508:44;;;539:2;534:7;508:44;569:1;:7;;574:2;569:7;:18;;;;580:1;:7;;585:2;580:7;569:18;561:27;;;;;;611:24;621:4;627:1;630;633;611:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;611:24:15;;-1:-1:-1;;611:24:15;;;-1:-1:-1;;;;;;;653:23:15;;645:32;;;;;;47:637;;;;;;;:::o;6265:552:1:-;6537:4;6553:18;6574:9;6593:44;;-1:-1:-1;;;6593:44:1;;6553:30;;-1:-1:-1;;;;;;6593:26:1;;;;;:44;;6620:4;;6626:2;;6630:6;;6593:44;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6593:44:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6593:44:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6593:44:1;;;;;;;;;-1:-1:-1;6651:17:1;;6647:143;;6684:95;6692:4;6698:13;6713:8;6723:13;6738:10;6750:13;6765;6684:7;:95::i;:::-;-1:-1:-1;6806:4:1;;6265:552;-1:-1:-1;;;;;;;;;6265:552:1:o;1504:348:13:-;1623:4;1662:7;1647:4;:11;:23;1643:66;;;-1:-1:-1;1693:5:13;1686:12;;1643:66;-1:-1:-1;1789:2:13;1779:13;;1773:20;-1:-1:-1;;;;;1828:17:13;;1819:26;1504:348;;;;:::o;6823:603:1:-;7111:12;7125:23;7160:18;7181:9;7160:30;;7224:43;7248:2;7252:8;7262:4;7224:23;:43::i;:::-;7200:67;;-1:-1:-1;7200:67:1;-1:-1:-1;7281:17:1;;7277:143;;7314:95;7322:4;7328:13;7343:8;7353:13;7368:10;7380:13;7395;7314:7;:95::i;:::-;6823:603;;;;;;;;;;;;:::o;5906:353::-;6036:12;6050:23;6109:2;-1:-1:-1;;;;;6109:7:1;6121:8;6131:4;6109:27;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1;6085:51:1;;-1:-1:-1;6085:51:1;-1:-1:-1;6176:2:1;6165:8;:13;6153:9;:25;6146:33;;;;5906:353;;;;;;:::o;3774:608::-;3892:12;964:238;;;;;;;;;;;;;;3990:8;:13;;;4017:8;:11;;;4042:10;:24;;;4080:10;:17;;;4121:8;:13;;;4111:24;;;;;;;;;;;;;;;;;4149:18;;;;4181:21;;;;4216:17;;;;4247:16;;;;4277:18;;;;4309:24;;;;4347:18;;;;3923:452;;;;;;;;;;;5289:611;5529:17;5562:9;5549:10;:22;5529:42;;5596:8;5584:9;:20;5581:70;;;-1:-1:-1;5632:8:1;5581:70;5660:26;;5721:25;;;5733:13;5660:26;5721:25;5660:26;5764;;;;;:43;5756:64;;;;-1:-1:-1;;;5756:64:1;;;;;;;;;5830:63;;-1:-1:-1;;;5830:63:1;;-1:-1:-1;;;;;5830:26:1;;;;;:63;;5857:4;;5863:13;;5878:14;;5830:63;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5830:63:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5830:63:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5830:63:1;;;;;;;;;;5289:611;;;;;;;;;:::o;5:130:-1:-;72:20;;-1:-1;;;;;26280:54;;27189:35;;27179:2;;27238:1;;27228:12;417:432;;514:3;507:4;499:6;495:17;491:27;481:2;;-1:-1;;522:12;481:2;569:6;556:20;24711:18;24703:6;24700:30;24697:2;;;-1:-1;;24733:12;24697:2;591:60;24806:9;24787:17;;-1:-1;;24783:33;24874:4;24864:15;591:60;;;582:69;;671:6;664:5;657:21;775:3;24874:4;766:6;699;757:16;;754:25;751:2;;;792:1;;782:12;751:2;26595:6;24874:4;699:6;695:17;24874:4;733:5;729:16;26572:30;26651:1;26633:16;;;24874:4;26633:16;26626:27;733:5;474:375;-1:-1;;474:375;857:162;940:20;;27579:1;27569:12;;27559:2;;27595:1;;27585:12;1073:1526;;1189:6;;1177:9;1172:3;1168:19;1164:32;1161:2;;;-1:-1;;1199:12;1161:2;1227:22;1189:6;1227:22;;;1218:31;;;1340:49;1385:3;1361:22;1340:49;;;1322:16;1315:75;1453:2;1511:9;1507:22;3827:20;1453:2;1472:5;1468:16;1461:75;1600:2;1658:9;1654:22;3827:20;1600:2;1619:5;1615:16;1608:75;1750:2;1808:9;1804:22;3827:20;1750:2;1769:5;1765:16;1758:75;1896:3;1955:9;1951:22;3827:20;1896:3;1916:5;1912:16;1905:75;2042:3;2101:9;2097:22;3827:20;2042:3;2062:5;2058:16;2051:75;2190:3;2249:9;2245:22;3827:20;2190:3;2210:5;2206:16;2199:75;2344:3;2403:9;2399:22;3827:20;2344:3;2364:5;2360:16;2353:75;2492:3;2528:49;2573:3;2492;2553:9;2549:22;2528:49;;;2508:18;;;2501:77;2512:5;1155:1444;-1:-1;;1155:1444;4038:366;;;4159:2;4147:9;4138:7;4134:23;4130:32;4127:2;;;-1:-1;;4165:12;4127:2;4227:53;4272:7;4248:22;4227:53;;;4217:63;4317:2;4356:22;;;;3827:20;;-1:-1;;;4121:283;4411:257;;4523:2;4511:9;4502:7;4498:23;4494:32;4491:2;;;-1:-1;;4529:12;4491:2;223:6;217:13;27335:5;25962:13;25955:21;27313:5;27310:32;27300:2;;-1:-1;;27346:12;27300:2;4581:71;4485:183;-1:-1;;;4485:183;4675:261;;4789:2;4777:9;4768:7;4764:23;4760:32;4757:2;;;-1:-1;;4795:12;4757:2;354:13;;-1:-1;;;;;;26128:78;;27430:34;;27420:2;;-1:-1;;27468:12;4943:675;;;;5129:3;5117:9;5108:7;5104:23;5100:33;5097:2;;;-1:-1;;5136:12;5097:2;5194:17;5181:31;5232:18;;5224:6;5221:30;5218:2;;;-1:-1;;5254:12;5218:2;5341:6;5330:9;5326:22;2757:4;2745:9;2740:3;2736:19;2732:30;2729:2;;;-1:-1;;2765:12;2729:2;2793:20;2757:4;2793:20;;;2784:29;;2895:49;2940:3;2916:22;2895:49;;;2877:16;2870:75;3037:49;3082:3;3004:2;3062:9;3058:22;3037:49;;;3004:2;3023:5;3019:16;3012:75;3176:2;3165:9;3161:18;3148:32;5232:18;3192:6;3189:30;3186:2;;;-1:-1;;3222:12;3186:2;3267:54;3317:3;3308:6;3297:9;3293:22;3267:54;;;3176:2;3253:5;3249:16;3242:80;;3416:2;3405:9;3401:18;3388:32;5232:18;3432:6;3429:30;3426:2;;;-1:-1;;3462:12;3426:2;3507:54;3557:3;3548:6;3537:9;3533:22;3507:54;;;3416:2;3493:5;3489:16;3482:80;;3666:65;3727:3;3632;3707:9;3703:22;3666:65;;;3632:3;3652:5;3648:16;3641:91;;;5274:84;;;;5413:80;5485:7;3004:2;5465:9;5461:22;5413:80;;;5403:90;;5549:53;5594:7;5530:3;5574:9;5570:22;5549:53;;;5539:63;;5091:527;;;;;;5625:263;;5740:2;5728:9;5719:7;5715:23;5711:32;5708:2;;;-1:-1;;5746:12;5708:2;-1:-1;3975:13;;5702:186;-1:-1;5702:186;6405:343;;6547:5;24979:12;25263:6;25258:3;25251:19;6640:52;6685:6;25300:4;25295:3;25291:14;25300:4;6666:5;6662:16;6640:52;;;24806:9;27093:14;-1:-1;;27089:28;6704:39;;;;25300:4;6704:39;;6495:253;-1:-1;;6495:253;13147:254;;6915:5;24979:12;7026:52;7071:6;7066:3;7059:4;7052:5;7048:16;7026:52;;;7090:16;;;;;13268:133;-1:-1;;13268:133;13677:650;-1:-1;;;8423:87;;8408:1;8529:11;;6197:37;;;;14179:12;;;6197:37;14290:12;;;13913:414;14334:372;10799:34;10779:55;;10868:34;10863:2;10854:12;;10847:56;10937:34;10932:2;10923:12;;10916:56;11006:34;11001:2;10992:12;;10985:56;11076:34;11070:3;11061:13;;11054:57;11146:34;11140:3;11131:13;;11124:57;-1:-1;;;11210:3;11201:13;;11194:44;10762:3;11257:13;;14514:192;14713:213;-1:-1;;;;;26280:54;;;;5966:37;;14831:2;14816:18;;14802:124;14933:435;-1:-1;;;;;26280:54;;;5966:37;;26280:54;;;;15271:2;15256:18;;5966:37;15354:2;15339:18;;6197:37;;;;15107:2;15092:18;;15078:290;15375:324;-1:-1;;;;;26280:54;;;;5966:37;;15685:2;15670:18;;6197:37;15521:2;15506:18;;15492:207;15706:396;;6107:5;25962:13;25955:21;6087:3;6080:34;15864:2;15976;15965:9;15961:18;15954:48;16016:76;15864:2;15853:9;15849:18;16078:6;16016:76;;;16008:84;15835:267;-1:-1;;;;15835:267;16109:1561;6197:37;;;-1:-1;;;;;26280:54;;;16731:2;16716:18;;5966:37;26280:54;;;16814:2;16799:18;;5966:37;26280:54;;;16897:2;16882:18;;5966:37;16980:3;16965:19;;6197:37;;;;26291:42;17049:19;;6197:37;;;;17148:3;17133:19;;6197:37;;;;17232:3;17217:19;;6197:37;17316:3;17301:19;;6197:37;17400:3;17385:19;;6197:37;17485:3;17470:19;;6197:37;17570:3;17555:19;;6197:37;26280:54;17655:3;17640:19;;5966:37;16566:3;16551:19;;16537:1133;17677:400;;6227:5;6204:3;6197:37;17837:2;17955;17944:9;17940:18;17933:48;17995:72;17837:2;17826:9;17822:18;18053:6;17995:72;;18084:539;6197:37;;;26496:4;26485:16;;;;18443:2;18428:18;;13100:35;18526:2;18511:18;;6197:37;18609:2;18594:18;;6197:37;18282:3;18267:19;;18253:370;18630:484;;18808:2;18829:17;18822:47;18883:76;18808:2;18797:9;18793:18;18945:6;18883:76;;;19007:9;19001:4;18997:20;18992:2;18981:9;18977:18;18970:48;19032:72;19099:4;19090:6;19032:72;;;19024:80;18779:335;-1:-1;;;;;18779:335;19121:407;19312:2;19326:47;;;8040:2;19297:18;;;25251:19;8076:25;25291:14;;;8056:46;8121:12;;;19283:245;19535:407;19726:2;19740:47;;;8779:2;19711:18;;;25251:19;-1:-1;;;25291:14;;;8795:42;8856:12;;;19697:245;19949:407;20140:2;20154:47;;;9107:2;20125:18;;;25251:19;-1:-1;;;25291:14;;;9123:45;9187:12;;;20111:245;20363:407;20554:2;20568:47;;;9438:1;20539:18;;;25251:19;-1:-1;;;25291:14;;;9453:30;9502:12;;;20525:245;20777:407;20968:2;20982:47;;;9753:2;20953:18;;;25251:19;-1:-1;;;25291:14;;;9769:37;9825:12;;;20939:245;21191:407;21382:2;21396:47;;;10076:2;21367:18;;;25251:19;-1:-1;;;25291:14;;;10092:36;10147:12;;;21353:245;21605:407;21796:2;21810:47;;;10398:2;21781:18;;;25251:19;-1:-1;;;25291:14;;;10414:42;10475:12;;;21767:245;22019:407;22210:2;22224:47;;;11509:2;22195:18;;;25251:19;-1:-1;;;25291:14;;;11525:44;11588:12;;;22181:245;22433:407;22624:2;22638:47;;;11839:1;22609:18;;;25251:19;-1:-1;;;25291:14;;;11854:31;11904:12;;;22595:245;22847:407;23038:2;23052:47;;;12155:2;23023:18;;;25251:19;-1:-1;;;25291:14;;;12171:34;12224:12;;;23009:245;23261:407;23452:2;23466:47;;;12475:2;23437:18;;;25251:19;-1:-1;;;25291:14;;;12491:45;12555:12;;;23423:245;23675:407;23866:2;23880:47;;;12806:2;23851:18;;;25251:19;12842:25;25291:14;;;12822:46;12887:12;;;23837:245;24089:213;6197:37;;;24207:2;24192:18;;24178:124;24309:256;24371:2;24365:9;24397:17;;;24472:18;24457:34;;24493:22;;;24454:62;24451:2;;;24529:1;;24519:12;24451:2;24371;24538:22;24349:216;;-1:-1;24349:216;26668:268;26733:1;26740:101;26754:6;26751:1;26748:13;26740:101;;;26821:11;;;26815:18;26802:11;;;26795:39;26776:2;26769:10;26740:101;;;26856:6;26853:1;26850:13;26847:2;;;-1:-1;;26733:1;26903:16;;26896:27;26717:219"
          },
          "methodIdentifiers": {
            "executeMetaTransaction((address,address,bytes,bytes,uint8),(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),address)": "26d431e2",
            "meta_nonce(address,uint256)": "53f1defe"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"MetaTx\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"enum GenericMetaTxProcessor.SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"}],\"internalType\":\"struct GenericMetaTxProcessor.Call\",\"name\":\"callData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batchNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"internalType\":\"struct GenericMetaTxProcessor.CallParams\",\"name\":\"callParams\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"name\":\"meta_nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/GenericMetaTxProcessor.sol\":\"GenericMetaTxProcessor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/GenericMetaTxProcessor.sol\":{\"content\":\"pragma solidity 0.6.1;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./Libraries/BytesUtil.sol\\\";\\nimport \\\"./Libraries/AddressUtils.sol\\\";\\nimport \\\"./Libraries/SigUtil.sol\\\";\\nimport \\\"./Libraries/SafeMath.sol\\\";\\nimport \\\"./Interfaces/ERC1271.sol\\\";\\nimport \\\"./Interfaces/ERC1271Constants.sol\\\";\\nimport \\\"./Interfaces/ERC1654.sol\\\";\\nimport \\\"./Interfaces/ERC1654Constants.sol\\\";\\nimport \\\"./Interfaces/ERC20.sol\\\";\\n\\ncontract GenericMetaTxProcessor is ERC1271Constants, ERC1654Constants {\\n\\n    // ////////////// LIBRARIES /////////////////\\n    using SafeMath for uint256;\\n    using AddressUtils for address;\\n    // //////////////////////////////////////////\\n\\n\\n    // /////////////// CONSTANTS ////////////////\\n    enum SignatureType { DIRECT, EIP1654, EIP1271 }\\n\\n    bytes32 constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,address verifyingContract)\\\"\\n    );\\n    bytes32 DOMAIN_SEPARATOR;\\n\\n    bytes32 constant ERC20METATRANSACTION_TYPEHASH = keccak256(\\n        \\\"ERC20MetaTransaction(address from,address to,address tokenContract,uint256 amount,bytes data,uint256 batchId,uint256 batchNonce,uint256 expiry,uint256 txGas,uint256 baseGas,uint256 tokenGasPrice,address relayer)\\\"\\n    );\\n    // //////////////////////////////////////////\\n\\n    // //////////////// EVENTS //////////////////\\n    event MetaTx(\\n        address indexed from,\\n        uint256 indexed batchId,\\n        uint256 indexed batchNonce,\\n        bool success,\\n        bytes returnData\\n    ); // TODO specify event as part of ERC-1776 ?\\n    // //////////////////////////////////////////\\n\\n    // //////////////// STATE ///////////////////\\n    mapping(address => mapping(uint256 => uint256)) batches;\\n    bool lock = false;\\n    // //////////////////////////////////////////\\n\\n    constructor() public {\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(\\\"Generic Meta Transaction\\\"),\\n                keccak256(\\\"1\\\"),\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    struct Call {\\n        address from;\\n        address to;\\n        bytes data;\\n        bytes signature;\\n        SignatureType signatureType;\\n    }\\n\\n    struct CallParams {\\n        address tokenContract;\\n        uint256 amount;\\n        uint256 batchId;\\n        uint256 batchNonce;\\n        uint256 expiry;\\n        uint256 txGas;\\n        uint256 baseGas;\\n        uint256 tokenGasPrice;\\n        address relayer;\\n    }\\n\\n    function executeMetaTransaction(\\n        Call memory callData,\\n        CallParams memory callParams,\\n        address tokenReceiver\\n    ) public returns (bool success, bytes memory returnData) {\\n        require(!lock, \\\"IN_PROGRESS\\\");\\n        lock = true;\\n        _ensureParametersValidity(callData, callParams);\\n        _ensureCorrectSigner(callData, callParams);\\n        (success, returnData) = _performERC20MetaTx(callData, callParams, tokenReceiver);\\n        lock = false;\\n    }\\n\\n    // ////////////////////////////// INTERNALS /////////////////////////\\n\\n    function _ensureParametersValidity(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal view {\\n        require(\\n            callParams.relayer == address(0) || callParams.relayer == msg.sender,\\n            \\\"wrong relayer\\\"\\n        );\\n        require(block.timestamp < callParams.expiry, \\\"expired\\\");\\n        require(batches[callData.from][callParams.batchId] + 1 == callParams.batchNonce, \\\"batchNonce out of order\\\");\\n    }\\n\\n    function _encodeMessage(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal view returns (bytes memory) {\\n        return abi.encodePacked(\\n            \\\"\\\\x19\\\\x01\\\",\\n            DOMAIN_SEPARATOR,\\n            keccak256(messageBytes(callData, callParams))\\n        );\\n    }\\n\\n    function messageBytes(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal pure returns(bytes memory) {\\n        return abi.encode(\\n            ERC20METATRANSACTION_TYPEHASH,\\n            callData.from,\\n            callData.to,\\n            callParams.tokenContract,\\n            callParams.amount,\\n            keccak256(callData.data),\\n            callParams.batchId,\\n            callParams.batchNonce,\\n            callParams.expiry,\\n            callParams.txGas,\\n            callParams.baseGas,\\n            callParams.tokenGasPrice,\\n            callParams.relayer\\n        );\\n    }\\n\\n    function _ensureCorrectSigner(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal view {\\n        bytes memory dataToHash = _encodeMessage(callData, callParams);\\n        if (callData.signatureType == SignatureType.EIP1271) {\\n            require(\\n                ERC1271(callData.from).isValidSignature(dataToHash, callData.signature) == ERC1271_MAGICVALUE,\\n                \\\"invalid 1271 signature\\\"\\n            );\\n        } else if(callData.signatureType == SignatureType.EIP1654){\\n            require(\\n                ERC1654(callData.from).isValidSignature(keccak256(dataToHash), callData.signature) == ERC1654_MAGICVALUE,\\n                \\\"invalid 1654 signature\\\"\\n            );\\n        } else {\\n            address signer = SigUtil.recover(keccak256(dataToHash), callData.signature);\\n            require(signer == callData.from, \\\"signer != from\\\");\\n        }\\n    }\\n\\n    function _charge(\\n        address from,\\n        ERC20 tokenContract,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 initialGas,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) internal {\\n        uint256 gasCharge = initialGas - gasleft();\\n        if(gasCharge > gasLimit) {\\n            gasCharge = gasLimit;\\n        }\\n        gasCharge += baseGasCharge;\\n        uint256 tokensToCharge = gasCharge * tokenGasPrice;\\n        require(tokensToCharge / gasCharge == tokenGasPrice, \\\"overflow\\\");\\n        tokenContract.transferFrom(from, tokenReceiver, tokensToCharge);\\n    }\\n\\n    function _executeWithSpecificGas(\\n        address to,\\n        uint256 gasLimit,\\n        bytes memory data\\n    ) internal returns (bool success, bytes memory returnData) {\\n        (success, returnData) = to.call.gas(gasLimit)(data);\\n        assert(gasleft() > gasLimit / 63); // not enough gas provided, assert to throw all gas // TODO use EIP-1930\\n    }\\n\\n    function _transferAndChargeForGas(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 amount,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) internal returns (bool) {\\n        uint256 initialGas = gasleft();\\n        tokenContract.transferFrom(from, to, amount);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, tokenContract, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n        return true;\\n    }\\n\\n    function _executeWithSpecificGasAndChargeForIt(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver,\\n        bytes memory data\\n    ) internal returns (bool success, bytes memory returnData) {\\n        uint256 initialGas = gasleft();\\n        (success, returnData) = _executeWithSpecificGas(to, gasLimit, data);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, tokenContract, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n    }\\n\\n    function _performERC20MetaTx(\\n        Call memory callData,\\n        CallParams memory callParams,\\n        address tokenReceiver\\n    ) internal returns (bool success, bytes memory returnData) {\\n        batches[callData.from][callParams.batchId] = callParams.batchNonce;\\n\\n        ERC20 tokenContract = ERC20(callParams.tokenContract);\\n\\n        if (callData.data.length == 0) {\\n            if(callParams.tokenGasPrice > 0) {\\n                _transferAndChargeForGas(\\n                    callData.from,\\n                    callData.to,\\n                    tokenContract,\\n                    callParams.amount,\\n                    callParams.txGas,\\n                    callParams.tokenGasPrice,\\n                    callParams.baseGas,\\n                    tokenReceiver\\n                );\\n            } else {\\n                require(tokenContract.transferFrom(callData.from, callData.to, callParams.amount), \\\"ERC20_TRANSFER_FAILED\\\");\\n            }\\n            success = true;\\n        } else {\\n            require(\\n                BytesUtil.doFirstParamEqualsAddress(callData.data, callData.from),\\n                \\\"first param != from\\\"\\n            );\\n            uint256 previousBalance;\\n            if(callParams.amount > 0) {\\n                previousBalance = tokenContract.balanceOf(address(this));\\n                require(tokenContract.transferFrom(callData.from, address(this), callParams.amount), \\\"ERC20_ALLOCATION_FAILED\\\");\\n                tokenContract.approve(callData.to, callParams.amount);\\n            }\\n            if(callParams.tokenGasPrice > 0) {\\n                (success, returnData) = _executeWithSpecificGasAndChargeForIt(\\n                    callData.from,\\n                    callData.to,\\n                    tokenContract,\\n                    callParams.txGas,\\n                    callParams.tokenGasPrice,\\n                    callParams.baseGas,\\n                    tokenReceiver,\\n                    callData.data\\n                );\\n            } else {\\n                (success, returnData) = _executeWithSpecificGas(callData.to, callParams.txGas, callData.data);\\n            }\\n            if(callParams.amount > 0) {\\n                uint256 newBalance = tokenContract.balanceOf(address(this));\\n                if (newBalance > previousBalance) {\\n                    require(tokenContract.transfer(callData.from, newBalance - previousBalance), \\\"ERC20_REFUND_FAILED\\\");\\n                }\\n            }\\n        }\\n\\n        emit MetaTx(callData.from, callParams.batchId, callParams.batchNonce, success, returnData);\\n    }\\n\\n    function meta_nonce(address from, uint256 batchId) external view returns(uint256) {\\n        return batches[from][batchId];\\n    }\\n}\\n\",\"keccak256\":\"0x978e4629751fe117530f25323bce657eedd285a99dc444422e270322388baeef\"},\"src/Interfaces/ERC1271.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC1271 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided data\\n    * @param data Arbitrary length data signed on the behalf of address(this)\\n    * @param signature Signature byte array associated with _data\\n    *\\n    * MUST return the bytes4 magic value 0x20c13b0b when function passes.\\n    * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\\n    * MUST allow external calls\\n    */\\n    function isValidSignature(bytes calldata data, bytes calldata signature)\\n        external\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0xd47b461d487409fbb422a86f77818cf4c3a904d21c80b7df63c42f5b114da68f\"},\"src/Interfaces/ERC1271Constants.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ncontract ERC1271Constants {\\n    bytes4 internal constant ERC1271_MAGICVALUE = 0x20c13b0b;\\n}\\n\",\"keccak256\":\"0xe699d97bb95be085cbb795821dd52673088d58d96976e26a0b066a856a6c1f3d\"},\"src/Interfaces/ERC1654.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC1654 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided hash\\n    * @param hash 32 bytes hash to be signed\\n    * @param signature Signature byte array associated with hash\\n    * @return magicValue 0x1626ba7e if valid else 0x00000000\\n    */\\n    function isValidSignature(bytes32 hash, bytes calldata signature)\\n        external\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4f006eeed4fdb08128571445ecdc75e13858dee0b7876431b46f75a2d9d9ff6a\"},\"src/Interfaces/ERC1654Constants.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ncontract ERC1654Constants {\\n    bytes4 internal constant ERC1654_MAGICVALUE = 0x1626ba7e;\\n}\\n\",\"keccak256\":\"0xd7650a572f69557bd6dfe3701a5bf02fd7148a127d7ec4a05dde59fca4ef19dd\"},\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0xeac7dc828dbde8ad86c624d39dca24f7f66c3986958d8a71cd69a6aa9b5ed679\"},\"src/Libraries/BytesUtil.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary BytesUtil {\\n    function memcpy(uint256 dest, uint256 src, uint256 len) internal pure {\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        uint256 mask = 256**(32 - len) - 1;\\n        assembly {\\n            let srcpart := and(mload(src), not(mask))\\n            let destpart := and(mload(dest), mask)\\n            mstore(dest, or(destpart, srcpart))\\n        }\\n    }\\n\\n    function pointerToBytes(uint256 src, uint256 len)\\n        internal\\n        pure\\n        returns (bytes memory)\\n    {\\n        bytes memory ret = new bytes(len);\\n        uint256 retptr;\\n        assembly {\\n            retptr := add(ret, 32)\\n        }\\n\\n        memcpy(retptr, src, len);\\n        return ret;\\n    }\\n\\n    function addressToBytes(address a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(\\n                add(m, 20),\\n                xor(0x140000000000000000000000000000000000000000, a)\\n            )\\n            mstore(0x40, add(m, 52))\\n            b := m\\n        }\\n    }\\n\\n    function uint256ToBytes(uint256 a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(add(m, 32), a)\\n            mstore(0x40, add(m, 64))\\n            b := m\\n        }\\n    }\\n\\n    function doFirstParamEqualsAddress(bytes memory data, address _address)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + 32)) {\\n            return false;\\n        }\\n        uint256 value;\\n        assembly {\\n            value := mload(add(data, 36))\\n        }\\n        return value == uint256(_address);\\n    }\\n\\n    function doParamEqualsUInt256(bytes memory data, uint256 i, uint256 value)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + (i + 1) * 32)) {\\n            return false;\\n        }\\n        uint256 offset = 36 + i * 32;\\n        uint256 valuePresent;\\n        assembly {\\n            valuePresent := mload(add(data, offset))\\n        }\\n        return valuePresent == value;\\n    }\\n\\n    function overrideFirst32BytesWithAddress(\\n        bytes memory data,\\n        address _address\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n\\n        bytes memory addressBytes = addressToBytes(_address);\\n        uint256 src;\\n        assembly {\\n            src := add(addressBytes, 32)\\n        }\\n\\n        memcpy(dest, src, 20);\\n        return data;\\n    }\\n\\n    function overrideFirstTwo32BytesWithAddressAndInt(\\n        bytes memory data,\\n        address _address,\\n        uint256 _value\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        uint256 src;\\n\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n        bytes memory bbytes = addressToBytes(_address);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 20);\\n\\n        assembly {\\n            dest := add(data, 68)\\n        } // 48 = 32 (offset) + 4 (func sig) + 32 (next slot)\\n        bbytes = uint256ToBytes(_value);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 32);\\n\\n        return data;\\n    }\\n}\\n\",\"keccak256\":\"0xbc2e25a5e410c9f7889beb483fe471a6aa55997ac0d3bafabd5042451a806529\"},\"src/Libraries/SafeMath.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that revert\\n */\\nlibrary SafeMath {\\n    /**\\n    * @dev Multiplies two numbers, throws on overflow.\\n    */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        c = a * b;\\n        require(c / a == b, \\\"overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Integer division of two numbers, truncating the quotient.\\n    */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        // uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return a / b;\\n    }\\n\\n    /**\\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\n    */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"undeflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n    * @dev Adds two numbers, throws on overflow.\\n    */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        c = a + b;\\n        require(c >= a, \\\"overflow\\\");\\n        return c;\\n    }\\n}\\n\",\"keccak256\":\"0x77a1483e56a10a93ab2d6b8ae7bd9a40d10e1c0edb9583cce13493b5549bf199\"},\"src/Libraries/SigUtil.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary SigUtil {\\n    function recover(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address recovered)\\n    {\\n        require(sig.length == 65);\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n        require(v == 27 || v == 28);\\n\\n        recovered = ecrecover(hash, v, r, s);\\n        require(recovered != address(0));\\n    }\\n\\n    function recoverWithZeroOnFailure(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address)\\n    {\\n        if (sig.length != 65) {\\n            return (address(0));\\n        }\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            return (address(0));\\n        } else {\\n            return ecrecover(hash, v, r, s);\\n        }\\n    }\\n\\n    // Builds a prefixed hash to mimic the behavior of eth_sign.\\n    function prefixed(bytes32 hash) internal pure returns (bytes memory) {\\n        return abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash);\\n    }\\n}\\n\",\"keccak256\":\"0x779ab6a267e945cd0f164fecf7f6366888e3f1bb36730391b47fd70d52a8f222\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      },
      "args": [],
      "address": "0x172690708ea4Ca089088398d1118685CE798560a",
      "transactionHash": "0x3bcbb24bbd2e34071c1a1c1bc7df350d06f4ccc9d318c0d44bebed0ea0080bd6"
    },
    "MTX": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "supply",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "metaTxProcessor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "PERMIT_TYPEHASH",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approveFor",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "nonces",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "holder",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "nonce",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "expiry",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "allowed",
                "type": "bool"
              },
              {
                "internalType": "uint8",
                "name": "v",
                "type": "uint8"
              },
              {
                "internalType": "bytes32",
                "name": "r",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "s",
                "type": "bytes32"
              }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "version",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50604051610d8f380380610d8f8339818101604052604081101561003357600080fd5b508051602090910151600780546001600160a01b0319166001600160a01b0383161790556002829055604051806042610d4d8239604080519182900360420182208282018252600e83526d2230b49029ba30b13632b1b7b4b760911b6020938401528151808301835260018152603160f81b908401528151808401919091527f0b1461ddc0c1d5ded79a1db0f74dae949050a7c0b28728c724b24958c27a328b818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152306080808301919091528251808303909101815260a09091019091528051910120600055505050610c1a806101336000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633644e515116100975780638fcbaf0c116100665780638fcbaf0c146102bf57806395d89b411461031b578063a9059cbb14610323578063dd62ed3e1461034f576100f5565b80633644e5151461026357806354fd4d501461026b57806370a08231146102735780637ecebe0014610299576100f5565b806323b872dd116100d357806323b872dd146101d15780632b9917461461020757806330adf81f1461023d578063313ce56714610245576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b61010261037d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103a7565b604080519115158252519081900360200190f35b6101bf6103be565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b038135811691602081013590911690604001356103c4565b6101a36004803603606081101561021d57600080fd5b506001600160a01b038135811691602081013590911690604001356104b1565b6101bf610511565b61024d610535565b6040805160ff9092168252519081900360200190f35b6101bf61053a565b610102610540565b6101bf6004803603602081101561028957600080fd5b50356001600160a01b031661055d565b6101bf600480360360208110156102af57600080fd5b50356001600160a01b0316610574565b61031960048036036101008110156102d657600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e00135610586565b005b61010261087e565b6101a36004803603604081101561033957600080fd5b506001600160a01b03813516906020013561089d565b6101bf6004803603604081101561036557600080fd5b506001600160a01b03813581169160200135166108aa565b6040518060400160405280600e81526020016d2230b49029ba30b13632b1b7b4b760911b81525081565b60006103b433848461090b565b5060015b92915050565b60025490565b6000336001600160a01b038516148015906103ea57506007546001600160a01b03163314155b1561049c576001600160a01b0384166000908152600460209081526040808320338452909152902054600019811461049a5782811015610471576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600460209081526040808320338452909152902083820390555b505b6104a78484846109de565b5060019392505050565b6000336001600160a01b03851614610506576040805162461bcd60e51b815260206004820152601360248201527236b9b39739b2b73232b910109e9037bbb732b960691b604482015290519081900360640190fd5b6104a784848461090b565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b601290565b60005481565b604051806040016040528060018152602001603160f81b81525081565b600080600061056b84610b71565b95945050505050565b60016020526000908152604090205481565b600054604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020808301919091526001600160a01b03808d16838501819052908c166060840152608083018b905260a083018a905288151560c0808501919091528451808503909101815260e08401855280519083012061190160f01b61010085015261010284019590955261012280840195909552835180840390950185526101429092019092528251929091019190912090610686576040805162461bcd60e51b815260206004820152601560248201527404461692f696e76616c69642d616464726573732d3605c1b604482015290519081900360640190fd5b6040805160008152602080820180845284905260ff8716828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa1580156106dd573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610741576040805162461bcd60e51b815260206004820152601260248201527111185a4bda5b9d985b1a590b5c195c9b5a5d60721b604482015290519081900360640190fd5b85158061074e5750854211155b610794576040805162461bcd60e51b815260206004820152601260248201527111185a4bdc195c9b5a5d0b595e1c1a5c995960721b604482015290519081900360640190fd5b6001600160a01b03891660009081526001602081905260409091208054918201905587146107fd576040805162461bcd60e51b81526020600482015260116024820152704461692f696e76616c69642d6e6f6e636560781b604482015290519081900360640190fd5b60008561080b57600061080f565b6000195b6001600160a01b03808c166000818152600460209081526040808320948f168084529482529182902085905581518581529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a350505050505050505050565b6040518060400160405280600381526020016244414960e81b81525081565b60006103b43384846109de565b60006001600160a01b038216158015906108d157506007546001600160a01b038381169116145b156108df57506000196103b8565b506001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001600160a01b0383161580159061092b57506001600160a01b03821615155b61097c576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420617070726f7665207769746820307830000000000000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610a2e576040805162461bcd60e51b8152602060048201526012602482015271043616e6e6f742073656e6420746f203078360741b604482015290519081900360640190fd5b600080610a3a85610b71565b9150915082811015610a85576040805162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da08199d5b99608a1b604482015290519081900360640190fd5b81610ab65760058054820190556001600160a01b0385166000908152600660205260409020805460ff191660011790555b6001600160a01b03851660009081526003602052604090208382039055610adc84610b71565b909250905081610b125760058054820190556001600160a01b0384166000908152600660205260409020805460ff191660011790555b6001600160a01b0380851660008181526003602090815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b038116600090815260036020908152604080832054600690925282205460ff16158015610ba85750600254600554105b15610bda5760009150600554600254039050678ac7230489e80000811115610bd55750678ac7230489e800005b610bdf565b600191505b91509156fea2646970667358221220a0bf757f4cef41f5a863ecc297bf4782a80946e9ed200868db621f7effc4ecfc64736f6c63430006010033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e747261637429",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD8F CODESIZE SUB DUP1 PUSH2 0xD8F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x42 PUSH2 0xD4D DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x42 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xE DUP4 MSTORE PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB1461DDC0C1D5DED79A1DB0F74DAE949050A7C0B28728C724B24958C27A328B DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SSTORE POP POP POP PUSH2 0xC1A DUP1 PUSH2 0x133 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x8FCBAF0C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34F JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x299 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x245 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x169 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x511 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x53A JUMP JUMPDEST PUSH2 0x102 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x574 JUMP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3EA JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x49C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x49A JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x36B9B39739B2B73232B910109E9037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x56B DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0xC0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP5 ADD DUP6 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH2 0x122 DUP1 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH2 0x142 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x686 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4461692F696E76616C69642D616464726573732D3 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP5 SWAP1 MSTORE PUSH1 0xFF DUP8 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDA5B9D985B1A590B5C195C9B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0x74E JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x794 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDC195C9B5A5D0B595E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD SWAP1 SSTORE DUP8 EQ PUSH2 0x7FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4461692F696E76616C69642D6E6F6E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x80B JUMPI PUSH1 0x0 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x0 NOT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP16 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x444149 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8D1 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x8DF JUMPI POP PUSH1 0x0 NOT PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x92B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x97C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F7665207769746820307830000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E6E6F742073656E6420746F2030783 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3A DUP6 PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xA85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD08195B9BDD59DA08199D5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xAB6 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE PUSH2 0xADC DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xB12 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 DUP9 ADD SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD LT JUMPDEST ISZERO PUSH2 0xBDA JUMPI PUSH1 0x0 SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD SUB SWAP1 POP PUSH8 0x8AC7230489E80000 DUP2 GT ISZERO PUSH2 0xBD5 JUMPI POP PUSH8 0x8AC7230489E80000 JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xBF PUSH22 0x7F4CEF41F5A863ECC297BF4782A80946E9ED200868DB PUSH3 0x1F7EFF 0xC4 0xEC 0xFC PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C616464726573 PUSH20 0x20766572696679696E67436F6E74726163742900 ",
            "sourceMap": "59:10010:19:-:0;;;1353:397;8:9:-1;5:2;;;30:1;27;20:12;5:2;1353:397:19;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1353:397:19;;;;;;;1423:16;:34;;-1:-1:-1;;;;;;1423:34:19;-1:-1:-1;;;;;1423:34:19;;;;;1467:12;:21;;;1353:397;1551:79;;;;;;;;;;;;;;;;;1660:4;;;;;;;;-1:-1:-1;;;1660:4:19;;;;;1696:7;;;;;;;;;;-1:-1:-1;;;1696:7:19;;;;1527:215;;;;;;;;;1644:22;1527:215;;;;1680:25;1527:215;;;;1727:4;1527:215;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1527:215:19;;;;;;;1517:226;;;;;-1:-1:-1;1498:245:19;-1:-1:-1;;;59:10010:19;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80633644e515116100975780638fcbaf0c116100665780638fcbaf0c146102bf57806395d89b411461031b578063a9059cbb14610323578063dd62ed3e1461034f576100f5565b80633644e5151461026357806354fd4d501461026b57806370a08231146102735780637ecebe0014610299576100f5565b806323b872dd116100d357806323b872dd146101d15780632b9917461461020757806330adf81f1461023d578063313ce56714610245576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b61010261037d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103a7565b604080519115158252519081900360200190f35b6101bf6103be565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b038135811691602081013590911690604001356103c4565b6101a36004803603606081101561021d57600080fd5b506001600160a01b038135811691602081013590911690604001356104b1565b6101bf610511565b61024d610535565b6040805160ff9092168252519081900360200190f35b6101bf61053a565b610102610540565b6101bf6004803603602081101561028957600080fd5b50356001600160a01b031661055d565b6101bf600480360360208110156102af57600080fd5b50356001600160a01b0316610574565b61031960048036036101008110156102d657600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e00135610586565b005b61010261087e565b6101a36004803603604081101561033957600080fd5b506001600160a01b03813516906020013561089d565b6101bf6004803603604081101561036557600080fd5b506001600160a01b03813581169160200135166108aa565b6040518060400160405280600e81526020016d2230b49029ba30b13632b1b7b4b760911b81525081565b60006103b433848461090b565b5060015b92915050565b60025490565b6000336001600160a01b038516148015906103ea57506007546001600160a01b03163314155b1561049c576001600160a01b0384166000908152600460209081526040808320338452909152902054600019811461049a5782811015610471576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600460209081526040808320338452909152902083820390555b505b6104a78484846109de565b5060019392505050565b6000336001600160a01b03851614610506576040805162461bcd60e51b815260206004820152601360248201527236b9b39739b2b73232b910109e9037bbb732b960691b604482015290519081900360640190fd5b6104a784848461090b565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b601290565b60005481565b604051806040016040528060018152602001603160f81b81525081565b600080600061056b84610b71565b95945050505050565b60016020526000908152604090205481565b600054604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020808301919091526001600160a01b03808d16838501819052908c166060840152608083018b905260a083018a905288151560c0808501919091528451808503909101815260e08401855280519083012061190160f01b61010085015261010284019590955261012280840195909552835180840390950185526101429092019092528251929091019190912090610686576040805162461bcd60e51b815260206004820152601560248201527404461692f696e76616c69642d616464726573732d3605c1b604482015290519081900360640190fd5b6040805160008152602080820180845284905260ff8716828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa1580156106dd573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610741576040805162461bcd60e51b815260206004820152601260248201527111185a4bda5b9d985b1a590b5c195c9b5a5d60721b604482015290519081900360640190fd5b85158061074e5750854211155b610794576040805162461bcd60e51b815260206004820152601260248201527111185a4bdc195c9b5a5d0b595e1c1a5c995960721b604482015290519081900360640190fd5b6001600160a01b03891660009081526001602081905260409091208054918201905587146107fd576040805162461bcd60e51b81526020600482015260116024820152704461692f696e76616c69642d6e6f6e636560781b604482015290519081900360640190fd5b60008561080b57600061080f565b6000195b6001600160a01b03808c166000818152600460209081526040808320948f168084529482529182902085905581518581529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a350505050505050505050565b6040518060400160405280600381526020016244414960e81b81525081565b60006103b43384846109de565b60006001600160a01b038216158015906108d157506007546001600160a01b038381169116145b156108df57506000196103b8565b506001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001600160a01b0383161580159061092b57506001600160a01b03821615155b61097c576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420617070726f7665207769746820307830000000000000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610a2e576040805162461bcd60e51b8152602060048201526012602482015271043616e6e6f742073656e6420746f203078360741b604482015290519081900360640190fd5b600080610a3a85610b71565b9150915082811015610a85576040805162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da08199d5b99608a1b604482015290519081900360640190fd5b81610ab65760058054820190556001600160a01b0385166000908152600660205260409020805460ff191660011790555b6001600160a01b03851660009081526003602052604090208382039055610adc84610b71565b909250905081610b125760058054820190556001600160a01b0384166000908152600660205260409020805460ff191660011790555b6001600160a01b0380851660008181526003602090815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b038116600090815260036020908152604080832054600690925282205460ff16158015610ba85750600254600554105b15610bda5760009150600554600254039050678ac7230489e80000811115610bd55750678ac7230489e800005b610bdf565b600191505b91509156fea2646970667358221220a0bf757f4cef41f5a863ecc297bf4782a80946e9ed200868db621f7effc4ecfc64736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x8FCBAF0C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34F JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x299 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x245 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x169 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x511 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x53A JUMP JUMPDEST PUSH2 0x102 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x574 JUMP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3EA JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x49C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x49A JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x36B9B39739B2B73232B910109E9037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x56B DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0xC0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP5 ADD DUP6 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH2 0x122 DUP1 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH2 0x142 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x686 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4461692F696E76616C69642D616464726573732D3 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP5 SWAP1 MSTORE PUSH1 0xFF DUP8 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDA5B9D985B1A590B5C195C9B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0x74E JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x794 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDC195C9B5A5D0B595E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD SWAP1 SSTORE DUP8 EQ PUSH2 0x7FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4461692F696E76616C69642D6E6F6E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x80B JUMPI PUSH1 0x0 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x0 NOT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP16 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x444149 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8D1 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x8DF JUMPI POP PUSH1 0x0 NOT PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x92B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x97C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F7665207769746820307830000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E6E6F742073656E6420746F2030783 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3A DUP6 PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xA85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD08195B9BDD59DA08199D5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xAB6 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE PUSH2 0xADC DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xB12 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 DUP9 ADD SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD LT JUMPDEST ISZERO PUSH2 0xBDA JUMPI PUSH1 0x0 SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD SUB SWAP1 POP PUSH8 0x8AC7230489E80000 DUP2 GT ISZERO PUSH2 0xBD5 JUMPI POP PUSH8 0x8AC7230489E80000 JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xBF PUSH22 0x7F4CEF41F5A863ECC297BF4782A80946E9ED200868DB PUSH3 0x1F7EFF 0xC4 0xEC 0xFC PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "59:10010:19:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59:10010:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;523:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;523:51:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5741:178;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5741:178:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1875:89;;;:::i;:::-;;;;;;;;;;;;;;;;4229:672;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4229:672:19;;;;;;;;;;;;;;;;;:::i;6211:286::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6211:286:19;;;;;;;;;;;;;;;;;:::i;361:108::-;;;:::i;3476:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;166:45;;;:::i;626:38::-;;;:::i;2605:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2605:150:19;-1:-1:-1;;;;;2605:150:19;;:::i;475:42::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;475:42:19;-1:-1:-1;;;;;475:42:19;;:::i;9074:993::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;9074:993:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;580:40;;;:::i;3775:167::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3775:167:19;;;;;;;;:::i;3033:334::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3033:334:19;;;;;;;;;;:::i;523:51::-;;;;;;;;;;;;;;-1:-1:-1;;;523:51:19;;;;:::o;5741:178::-;5823:12;5851:40;5863:10;5875:7;5884:6;5851:11;:40::i;:::-;-1:-1:-1;5908:4:19;5741:178;;;;;:::o;1875:89::-;1945:12;;1875:89;:::o;4229:672::-;4325:12;4357:10;-1:-1:-1;;;;;4357:18:19;;;;;;:52;;-1:-1:-1;4393:16:19;;-1:-1:-1;;;;;4393:16:19;4379:10;:30;;4357:52;4353:484;;;-1:-1:-1;;;;;4452:17:19;;4425:24;4452:17;;;:11;:17;;;;;;;;4470:10;4452:29;;;;;;;;-1:-1:-1;;4499:32:19;;4495:332;;4702:6;4682:16;:26;;4674:63;;;;;-1:-1:-1;;;4674:63:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4755:17:19;;;;;;:11;:17;;;;;;;;4773:10;4755:29;;;;;;;4787:25;;;4755:57;;4495:332;4353:484;;4846:27;4856:4;4862:2;4866:6;4846:9;:27::i;:::-;-1:-1:-1;4890:4:19;4229:672;;;;;:::o;6211:286::-;6311:12;6360:10;-1:-1:-1;;;;;6360:19:19;;;6339:85;;;;;-1:-1:-1;;;6339:85:19;;;;;;;;;;;;-1:-1:-1;;;6339:85:19;;;;;;;;;;;;;;;6434:35;6446:5;6453:7;6462:6;6434:11;:35::i;361:108::-;403:66;361:108;:::o;3476:81::-;3547:2;3476:81;:::o;166:45::-;;;;:::o;626:38::-;;;;;;;;;;;;;;-1:-1:-1;;;626:38:19;;;;:::o;2605:150::-;2660:7;2680:6;2688:15;2707:17;2718:5;2707:10;:17::i;:::-;2679:45;2605:150;-1:-1:-1;;;;;2605:150:19:o;475:42::-;;;;;;;;;;;;;:::o;9074:993::-;9242:14;9343:16;9387:253;;;403:66;9387:253;;;;;;;;-1:-1:-1;;;;;9387:253:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9387:253:19;;;;;9377:264;;;;;;-1:-1:-1;;;9281:370:19;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9281:370:19;;;;;;;9271:381;;;;;;;;;;;9663:54;;;;;-1:-1:-1;;;9663:54:19;;;;;;;;;;;;-1:-1:-1;;;9663:54:19;;;;;;;;;;;;;;;9745:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9745:26:19;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9745:26:19;;;;;;;;-1:-1:-1;;;;;9735:36:19;:6;-1:-1:-1;;;;;9735:36:19;;9727:67;;;;;-1:-1:-1;;;9727:67:19;;;;;;;;;;;;-1:-1:-1;;;9727:67:19;;;;;;;;;;;;;;;9812:11;;;:28;;;9834:6;9827:3;:13;;9812:28;9804:59;;;;;-1:-1:-1;;;9804:59:19;;;;;;;;;;;;-1:-1:-1;;;9804:59:19;;;;;;;;;;;;;;;-1:-1:-1;;;;;9890:14:19;;;;;;:6;:14;;;;;;;;:16;;;;;;;9881:25;;9873:55;;;;;-1:-1:-1;;;9873:55:19;;;;;;;;;;;;-1:-1:-1;;;9873:55:19;;;;;;;;;;;;;;;9938:8;9949:7;:22;;9970:1;9949:22;;;-1:-1:-1;;9949:22:19;-1:-1:-1;;;;;9981:19:19;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:34;;;10030:30;;;;;;;9938:33;;-1:-1:-1;9981:28:19;;:19;;10030:30;;;;;;;;;9074:993;;;;;;;;;;:::o;580:40::-;;;;;;;;;;;;;;-1:-1:-1;;;580:40:19;;;;:::o;3775:167::-;3853:12;3881:33;3891:10;3903:2;3907:6;3881:9;:33::i;3033:334::-;3129:17;-1:-1:-1;;;;;3165:21:19;;;;;;:52;;-1:-1:-1;3201:16:19;;-1:-1:-1;;;;;3190:27:19;;;3201:16;;3190:27;3165:52;3162:155;;;-1:-1:-1;;;3233:73:19;;3162:155;-1:-1:-1;;;;;;3333:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3033:334::o;6504:314::-;-1:-1:-1;;;;;6625:19:19;;;;;;:44;;-1:-1:-1;;;;;;6648:21:19;;;;6625:44;6604:114;;;;;-1:-1:-1;;;6604:114:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6728:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;6779:32;;;;;;;;;;;;;;;;;6504:314;;;:::o;6824:781::-;-1:-1:-1;;;;;6912:16:19;;6904:47;;;;;-1:-1:-1;;;6904:47:19;;;;;;;;;;;;-1:-1:-1;;;6904:47:19;;;;;;;;;;;;;;;6962:12;6976:22;7002:16;7013:4;7002:10;:16::i;:::-;6961:57;;;;7054:6;7036:14;:24;;7028:52;;;;;-1:-1:-1;;;7028:52:19;;;;;;;;;;;;-1:-1:-1;;;7028:52:19;;;;;;;;;;;;;;;7095:7;7090:154;;7118:14;:32;;;;;;-1:-1:-1;;;;;7164:14:19;;7118;7164;;;:8;:14;;;;;:21;;-1:-1:-1;;7164:21:19;-1:-1:-1;7164:21:19;;;7090:154;-1:-1:-1;;;;;7253:15:19;;;;;;:9;:15;;;;;7271:23;;;7253:41;;7333:14;7344:2;7333:10;:14::i;:::-;7305:42;;-1:-1:-1;7305:42:19;-1:-1:-1;7305:42:19;7357:152;;7385:14;:32;;;;;;-1:-1:-1;;;;;7431:12:19;;7385:14;7431:12;;;:8;:12;;;;;:19;;-1:-1:-1;;7431:19:19;-1:-1:-1;7431:19:19;;;7357:152;-1:-1:-1;;;;;7518:13:19;;;;;;;:9;:13;;;;;;;;;7534:23;;;7518:39;;7572:26;;;;;;;7518:13;;7572:26;;;;;;;;;;;;;6824:781;;;;;:::o;2005:446::-;-1:-1:-1;;;;;2114:16:19;;2063:12;2114:16;;;:9;:16;;;;;;;;;2145:8;:15;;;;;;;;2144:16;:49;;;;;2181:12;;2164:14;;:29;2144:49;2140:305;;;2219:5;2209:15;;2263:14;;2248:12;;:29;2238:39;;2305:20;2295:7;:30;2291:99;;;-1:-1:-1;2355:20:19;2291:99;2140:305;;;2430:4;2420:14;;2140:305;2005:446;;;:::o"
          },
          "methodIdentifiers": {
            "DOMAIN_SEPARATOR()": "3644e515",
            "PERMIT_TYPEHASH()": "30adf81f",
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "approveFor(address,address,uint256)": "2b991746",
            "balanceOf(address)": "70a08231",
            "decimals()": "313ce567",
            "name()": "06fdde03",
            "nonces(address)": "7ecebe00",
            "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "version()": "54fd4d50"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"metaTxProcessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"address whose token is allowed.\",\"spender\":\"address allowed to transfer.\"},\"returns\":{\"remaining\":\"the amount of token `spender` is allowed to transfer on behalf of `owner`.\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"the number of tokens allowed.\",\"spender\":\"address to be given rights to transfer.\"},\"returns\":{\"success\":\"true if success.\"}},\"approveFor(address,address,uint256)\":{\"params\":{\"amount\":\"the number of tokens allowed.\",\"owner\":\"address whose token is allowed.\",\"spender\":\"address to be given rights to transfer.\"},\"returns\":{\"success\":\"true if success.\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address to query the balance of.\"},\"returns\":{\"_0\":\"The amount owned by `owner`.\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"the number of tokens transfered.\",\"to\":\"the recipient address of the tokens transfered.\"},\"returns\":{\"success\":\"true if success.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"the number of tokens transfered.\",\"from\":\"whose token it is transferring from.\",\"to\":\"the recipient address of the tokens transfered.\"},\"returns\":{\"success\":\"true if success.\"}}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"gets allowance of `spender` for `owner`'s tokens.\"},\"approve(address,uint256)\":{\"notice\":\"approve `spender` to transfer `amount` tokens.\"},\"approveFor(address,address,uint256)\":{\"notice\":\"approve `spender` to transfer `amount` tokens from `owner`.\"},\"balanceOf(address)\":{\"notice\":\"Gets the balance of `owner`.\"},\"decimals()\":{\"notice\":\"returns the number of decimals for that token.\"},\"totalSupply()\":{\"notice\":\"Gets the total number of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `from` to `to`.\"}}}},\"settings\":{\"compilationTarget\":{\"src/Test/PAW.sol\":\"PAW\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Test/PAW.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../Interfaces/ERC20.sol\\\";\\n\\ncontract PAW /*is ERC20*/{ // interface seems to require overrides :(\\n\\n     // --- EIP712 niceties ---\\n    bytes32 public /*immutable*/ DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\\n    mapping (address => uint256) public nonces;\\n    string  public constant name     = \\\"Dai Stablecoin\\\";\\n    string  public constant symbol   = \\\"DAI\\\";\\n    string  public constant version  = \\\"1\\\";\\n\\n    ///////////////// EVENTS FOR ERC20 ////////////////\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    ///////////////////////////////////////////////////\\n\\n    uint256 internal /*immutable*/ _totalSupply;\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => uint256)) internal _allowances;\\n\\n    uint256 internal _supplyClaimed;\\n    mapping(address => bool) internal _claimed; // TODO optimize it by storing it in the same slot as _balances\\n    address internal /*immutable*/ _metaTxProcessor;\\n\\n    constructor(uint256 supply, address metaTxProcessor) public {\\n        _metaTxProcessor = metaTxProcessor;\\n        _totalSupply = supply;\\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\\n            keccak256(\\\"EIP712Domain(string name,string version,address verifyingContract)\\\"),\\n            keccak256(bytes(name)),\\n            keccak256(bytes(version)),\\n            address(this)\\n        ));\\n    }\\n\\n    /// @notice Gets the total number of tokens in existence.\\n    /// @return the total number of tokens in existence.\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    // function hasClaimed() TODO\\n\\n    function _balanceOf(address owner) internal view returns (bool claimed, uint256 balance) {\\n        balance = _balances[owner];\\n        if (!_claimed[owner] && _supplyClaimed < _totalSupply) {\\n            claimed = false;\\n            balance = _totalSupply - _supplyClaimed;\\n            if (balance > 10000000000000000000) {\\n                balance = 10000000000000000000;\\n            }\\n        } else {\\n            claimed = true;\\n        }\\n    }\\n\\n    /// @notice Gets the balance of `owner`.\\n    /// @param owner The address to query the balance of.\\n    /// @return The amount owned by `owner`.\\n    function balanceOf(address owner) public view returns (uint256) {\\n        (bool _, uint256 balance) = _balanceOf(owner);\\n        return balance;\\n    }\\n\\n    /// @notice gets allowance of `spender` for `owner`'s tokens.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender address allowed to transfer.\\n    /// @return remaining the amount of token `spender` is allowed to transfer on behalf of `owner`.\\n    function allowance(address owner, address spender)\\n        public\\n        view\\n        returns (uint256 remaining)\\n    {\\n        if(spender != address(0) && spender == _metaTxProcessor) {\\n            return 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n        }\\n        return _allowances[owner][spender];\\n    }\\n\\n    /// @notice returns the number of decimals for that token.\\n    /// @return the number of decimals.\\n    function decimals() public view returns (uint8) {\\n        return uint8(18);\\n    }\\n\\n    /// @notice Transfer `amount` tokens to `to`.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return success true if success.\\n    function transfer(address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n\\n    /// @notice Transfer `amount` tokens from `from` to `to`.\\n    /// @param from whose token it is transferring from.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return success true if success.\\n    function transferFrom(address from, address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        if (msg.sender != from && msg.sender != _metaTxProcessor) {\\n            uint256 currentAllowance = _allowances[from][msg.sender];\\n            if (currentAllowance != (2**256) - 1) {\\n                // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n                require(currentAllowance >= amount, \\\"Not enough funds allowed\\\");\\n                _allowances[from][msg.sender] = currentAllowance - amount;\\n            }\\n        }\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    // /// @notice burn `amount` tokens.\\n    // /// @param amount the number of tokens to burn.\\n    // /// @return true if success.\\n    // function burn(uint256 amount) external returns (bool) {\\n    //     _burn(msg.sender, amount);\\n    //     return true;\\n    // }\\n\\n    // /// @notice burn `amount` tokens from `owner`.\\n    // /// @param owner address whose token is to burn.\\n    // /// @param amount the number of token to burn.\\n    // /// @return true if success.\\n    // function burnFor(address owner, uint256 amount) external returns (bool) {\\n    //     _burn(owner, amount);\\n    //     return true;\\n    // }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens.\\n    /// @param spender address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return success true if success.\\n    function approve(address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _approveFor(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens from `owner`.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender  address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return success true if success.\\n    function approveFor(address owner, address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        require(\\n            msg.sender == owner,\\n            \\\"msg.sender != owner\\\"\\n        );\\n        _approveFor(owner, spender, amount);\\n        return true;\\n    }\\n\\n\\n    function _approveFor(address owner, address spender, uint256 amount)\\n        internal\\n    {\\n        require(\\n            owner != address(0) && spender != address(0),\\n            \\\"Cannot approve with 0x0\\\"\\n        );\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _transfer(address from, address to, uint256 amount) internal {\\n        require(to != address(0), \\\"Cannot send to 0x0\\\");\\n        (bool claimed, uint256 currentBalance) = _balanceOf(from);\\n        require(currentBalance >= amount, \\\"not enough fund\\\");\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[from] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[from] = currentBalance - amount;\\n\\n        (claimed, currentBalance) = _balanceOf(to);\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[to] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[to] = currentBalance + amount;\\n        emit Transfer(from, to, amount);\\n    }\\n\\n    // function _mint(address to, uint256 amount) internal {\\n    //     require(to != address(0), \\\"Cannot mint to 0x0\\\");\\n    //     require(amount > 0, \\\"cannot mint 0 tokens\\\");\\n    //     uint256 currentTotalSupply = _totalSupply;\\n    //     uint256 newTotalSupply = currentTotalSupply + amount;\\n    //     require(newTotalSupply > currentTotalSupply, \\\"overflow\\\");\\n    //     _totalSupply = newTotalSupply;\\n    //     _balances[to] += amount;\\n    //     emit Transfer(address(0), to, amount);\\n    // }\\n\\n    // function _burn(address from, uint256 amount) internal {\\n    //     require(amount > 0, \\\"cannot burn 0 tokens\\\");\\n    //     if (msg.sender != from) {\\n    //         uint256 currentAllowance = _allowances[from][msg.sender];\\n    //         require(\\n    //             currentAllowance >= amount,\\n    //             \\\"Not enough funds allowed\\\"\\n    //         );\\n    //         if (currentAllowance != (2**256) - 1) {\\n    //             // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n    //             _allowances[from][msg.sender] = currentAllowance - amount;\\n    //         }\\n    //     }\\n\\n    //     uint256 currentBalance = balanceOf(from);\\n    //     require(currentBalance >= amount, \\\"Not enough funds\\\");\\n    //     _balances[from] = currentBalance - amount;\\n    //     _totalSupply -= amount;\\n    //     emit Transfer(from, address(0), amount);\\n    // }\\n\\n    // --- Approve by signature ---\\n    function permit(address holder, address spender, uint256 nonce, uint256 expiry,\\n                    bool allowed, uint8 v, bytes32 r, bytes32 s) external\\n    {\\n        bytes32 digest =\\n            keccak256(abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(abi.encode(PERMIT_TYPEHASH,\\n                                     holder,\\n                                     spender,\\n                                     nonce,\\n                                     expiry,\\n                                     allowed))\\n        ));\\n\\n        require(holder != address(0), \\\"Dai/invalid-address-0\\\");\\n        require(holder == ecrecover(digest, v, r, s), \\\"Dai/invalid-permit\\\");\\n        require(expiry == 0 || now <= expiry, \\\"Dai/permit-expired\\\");\\n        require(nonce == nonces[holder]++, \\\"Dai/invalid-nonce\\\");\\n        uint wad = allowed ? uint(-1) : 0;\\n        _allowances[holder][spender] = wad;\\n        emit Approval(holder, spender, wad);\\n    }\\n}\\n\",\"keccak256\":\"0xec82c958ca88eff94163197e4cce71064026ba70160dce25bae5b20b4163ba94\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "allowance(address,address)": {
              "notice": "gets allowance of `spender` for `owner`'s tokens."
            },
            "approve(address,uint256)": {
              "notice": "approve `spender` to transfer `amount` tokens."
            },
            "approveFor(address,address,uint256)": {
              "notice": "approve `spender` to transfer `amount` tokens from `owner`."
            },
            "balanceOf(address)": {
              "notice": "Gets the balance of `owner`."
            },
            "decimals()": {
              "notice": "returns the number of decimals for that token."
            },
            "totalSupply()": {
              "notice": "Gets the total number of tokens in existence."
            },
            "transfer(address,uint256)": {
              "notice": "Transfer `amount` tokens to `to`."
            },
            "transferFrom(address,address,uint256)": {
              "notice": "Transfer `amount` tokens from `from` to `to`."
            }
          }
        }
      },
      "args": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "0x172690708ea4Ca089088398d1118685CE798560a"
      ],
      "address": "0x5565e1F4b5707920437e2c427d56d8022a247C93",
      "transactionHash": "0xd70f2f4401b080a22aab1d7df612a3fc264968bebca8cbc2f6e1235450fca599"
    },
    "MTXNumberSale": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "contract Numbers",
                "name": "numbers",
                "type": "address"
              },
              {
                "internalType": "contract ERC20",
                "name": "erc20Token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "price",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "metaTxProcessor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "purchase",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506040516102e83803806102e88339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151600080546001600160a01b039283166001600160a01b031991821617909155600180549483169482169490941790935560028054919092169216919091179055600355610250806100986000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dde5a65d14610030575b600080fd5b61005e6004803603604081101561004657600080fd5b506001600160a01b0381358116916020013516610060565b005b610069826101e7565b6100ab576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b600254600354604080516323b872dd60e01b81523360048201523060248201526044810192909252516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561010857600080fd5b505af115801561011c573d6000803e3d6000fd5b505050506040513d602081101561013257600080fd5b505161017d576040805162461bcd60e51b8152602060048201526015602482015274115490cc8c17d514905394d1915497d19052531151605a1b604482015290519081900360640190fd5b600154604080516335313c2160e11b81526001600160a01b03848116600483015291519190921691636a62784291602480830192600092919082900301818387803b1580156101cb57600080fd5b505af11580156101df573d6000803e3d6000fd5b505050505050565b6000336001600160a01b03831614806102035750610203610209565b92915050565b6000546001600160a01b031633149056fea2646970667358221220dcdfbd9f6bba877ed869321ffa473d5e2f827ba26dea4ada24f08fe004544f7264736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2E8 CODESIZE SUB DUP1 PUSH2 0x2E8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP5 DUP4 AND SWAP5 DUP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 SSTORE PUSH2 0x250 DUP1 PUSH2 0x98 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDDE5A65D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69 DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0xAB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x17D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6A627842 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x203 JUMPI POP PUSH2 0x203 PUSH2 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xDF 0xBD SWAP16 PUSH12 0xBA877ED869321FFA473D5E2F DUP3 PUSH28 0xA26DEA4ADA24F08FE004544F7264736F6C6343000601003300000000 ",
            "sourceMap": "126:1201:17:-:0;;;316:230;8:9:-1;5:2;;;30:1;27;20:12;5:2;316:230:17;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;316:230:17;;;;;;;;;;;;;;;160:16:0;:34;;-1:-1:-1;;;;;160:34:0;;;-1:-1:-1;;;;;;160:34:0;;;;;;;;463:18:17;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;491:11:::1;:24:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;525:6:::1;:14:::0;126:1201;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dde5a65d14610030575b600080fd5b61005e6004803603604081101561004657600080fd5b506001600160a01b0381358116916020013516610060565b005b610069826101e7565b6100ab576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b600254600354604080516323b872dd60e01b81523360048201523060248201526044810192909252516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561010857600080fd5b505af115801561011c573d6000803e3d6000fd5b505050506040513d602081101561013257600080fd5b505161017d576040805162461bcd60e51b8152602060048201526015602482015274115490cc8c17d514905394d1915497d19052531151605a1b604482015290519081900360640190fd5b600154604080516335313c2160e11b81526001600160a01b03848116600483015291519190921691636a62784291602480830192600092919082900301818387803b1580156101cb57600080fd5b505af11580156101df573d6000803e3d6000fd5b505050505050565b6000336001600160a01b03831614806102035750610203610209565b92915050565b6000546001600160a01b031633149056fea2646970667358221220dcdfbd9f6bba877ed869321ffa473d5e2f827ba26dea4ada24f08fe004544f7264736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDDE5A65D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69 DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0xAB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x17D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6A627842 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x203 JUMPI POP PUSH2 0x203 PUSH2 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xDF 0xBD SWAP16 PUSH12 0xBA877ED869321FFA473D5E2F DUP3 PUSH28 0xA26DEA4ADA24F08FE004544F7264736F6C6343000601003300000000 ",
            "sourceMap": "126:1201:17:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;126:1201:17;;;;;;;;;;;;;;;;;;;552:773;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;552:773:17;;;;;;;;;;:::i;:::-;;;878:19;892:4;878:13;:19::i;:::-;870:46;;;;;-1:-1:-1;;;870:46:17;;;;;;;;;;;;-1:-1:-1;;;870:46:17;;;;;;;;;;;;;;;1171:11;;1223:6;;1171:59;;;-1:-1:-1;;;1171:59:17;;1196:10;1171:59;;;;1216:4;1171:59;;;;;;;;;;;;-1:-1:-1;;;;;1171:11:17;;;;:24;;:59;;;;;;;;;;;;;;;:11;;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;1171:59:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1171:59:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1171:59:17;1163:93;;;;;-1:-1:-1;;;1163:93:17;;;;;;;;;;;;-1:-1:-1;;;1163:93:17;;;;;;;;;;;;;;;1301:8;;:17;;;-1:-1:-1;;;1301:17:17;;-1:-1:-1;;;;;1301:17:17;;;;;;;;;:8;;;;;:13;;:17;;;;;:8;;:17;;;;;;;:8;;:17;;;5:2:-1;;;;30:1;27;20:12;5:2;1301:17:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1301:17:17;;;;552:773;;:::o;304:121:0:-;363:4;386:10;-1:-1:-1;;;;;386:18:0;;;;:32;;;408:10;:8;:10::i;:::-;379:39;304:121;-1:-1:-1;;304:121:0:o;431:102::-;473:4;510:16;-1:-1:-1;;;;;510:16:0;496:10;:30;;431:102::o"
          },
          "methodIdentifiers": {
            "purchase(address,address)": "dde5a65d"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Numbers\",\"name\":\"numbers\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"metaTxProcessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/Test/NumberSale.sol\":\"NumberSale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/EIP1776MetaTxReceiverBase.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\ncontract EIP1776MetaTxReceiverBase {\\n\\n    address private _metaTxProcessor;\\n    constructor(address metaTxProcessor) internal {\\n        _metaTxProcessor = metaTxProcessor;\\n    }\\n\\n    ///@dev the from need to be equal to the first parameter of the function using that modifier\\n    function isValidSender(address from) internal view returns(bool) {\\n        return msg.sender == from || isMetaTx();\\n    }\\n\\n    function isMetaTx() internal view returns(bool) {\\n        return msg.sender == _metaTxProcessor;\\n    }\\n}\\n\",\"keccak256\":\"0x4d36cc539b5ec0fc2dec57a981af90afc8212e2c7bb2a8273e6fb508b0f92d32\"},\"src/Interfaces/ERC165.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC165\\n * @dev https://eips.ethereum.org/EIPS/eip-165\\n */\\ninterface ERC165 {\\n    /**\\n   * @notice Query if a contract implements interface `interfaceId`\\n   * @param interfaceId The interface identifier, as specified in ERC-165\\n   * @dev Interface identification is specified in ERC-165. This function\\n   * uses less than 30,000 gas.\\n   */\\n    function supportsInterface(bytes4 interfaceId)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xc0faa36cba688ce34574fdab3aaae02fc8255999ceec19998d4c22065a1754f8\"},\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Interfaces/ERC721.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nimport \\\"./ERC165.sol\\\";\\n\\ninterface ERC721 /*is ERC165*/ { // Interfaces still cannot inherit :(\\n    event Transfer(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 indexed _tokenId\\n    );\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _approved,\\n        uint256 indexed _tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed _owner,\\n        address indexed _operator,\\n        bool _approved\\n    );\\n\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n    \\n    function approve(address to, uint256 tokenId) external;\\n    function getApproved(uint256 tokenId)\\n        external\\n        view\\n        returns (address operator);\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 tokenId)\\n        external;\\n    function safeTransferFrom(address from, address to, uint256 tokenId)\\n        external;\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6796e307cbd33d1d26c0861a2c8c775570db0482cbbd1b66541b2a1af6a9623e\"},\"src/Interfaces/ERC721Enumerable.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n///  Note: the ERC-165 identifier for this interface is 0x780e9d63.\\ninterface ERC721Enumerable /* is ERC721 */ {\\n    /// @notice Count NFTs tracked by this contract\\n    /// @return A count of valid NFTs tracked by this contract, where each one of\\n    ///  them has an assigned and queryable owner not equal to the zero address\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Enumerate valid NFTs\\n    /// @dev Throws if `_index` >= `totalSupply()`.\\n    /// @param _index A counter less than `totalSupply()`\\n    /// @return The token identifier for the `_index`th NFT,\\n    ///  (sort order not specified)\\n    function tokenByIndex(uint256 _index) external view returns (uint256);\\n\\n    /// @notice Enumerate NFTs assigned to an owner\\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\\n    ///  `_owner` is the zero address, representing invalid NFTs.\\n    /// @param _owner An address where we are interested in NFTs owned by them\\n    /// @param _index A counter less than `balanceOf(_owner)`\\n    /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\\n    ///   (sort order not specified)\\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\\n}\",\"keccak256\":\"0xdd15c10b403e5bb1d1f86c403ee9d589d51a1d07193def74c71eece7696a3f71\"},\"src/Interfaces/ERC721TokenReceiver.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x1e7dcf369cd4048ef656ea016905f9ab78956d4ab88ddd9fc941e72128bb0c72\"},\"src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0xeac7dc828dbde8ad86c624d39dca24f7f66c3986958d8a71cd69a6aa9b5ed679\"},\"src/Test/NumberSale.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../EIP1776MetaTxReceiverBase.sol\\\";\\nimport \\\"./Numbers.sol\\\";\\nimport \\\"../Interfaces/ERC20.sol\\\";\\n\\ncontract NumberSale is EIP1776MetaTxReceiverBase {\\n\\n    Numbers internal /*immutable*/ _numbers;\\n    ERC20 internal /*immutable*/ _erc20Token;\\n    uint256 internal /*immutable*/ _price;\\n    constructor(Numbers numbers, ERC20 erc20Token, uint256 price, address metaTxProcessor) public EIP1776MetaTxReceiverBase(metaTxProcessor) {\\n        _numbers = numbers;\\n        _erc20Token = erc20Token;\\n        _price = price;\\n    }\\n\\n    function purchase(address from, address to) external {\\n\\n        // this check whether\\n        // 1) the first parameter is msg.sender, in which case the user is using a normal tx\\n        // 2) or the msg.sender is equal the MetatxProcessor (which ensure the first paramter is the address of the metatx signer)\\n        require(isValidSender(from), \\\"NOT_AUTHORIZED\\\");\\n\\n\\n        // Here we transfer from the sender\\n        // this works because the meta tx processor will be owing the ERC20 token temporarly\\n        // This allow the user to never need to approve ERC20 token before hand when using metatx\\n        require(_erc20Token.transferFrom(msg.sender, address(this), _price), \\\"ERC20_TRANSFER_FAILED\\\");\\n\\n        // if all is good we mint\\n        _numbers.mint(to);\\n    }\\n}\\n\",\"keccak256\":\"0x4d8abc5dc915d072e787730ec4e484d50482e515927970586513c6f63ba4f0c0\"},\"src/Test/Numbers.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../Libraries/AddressUtils.sol\\\";\\nimport \\\"../Interfaces/ERC721TokenReceiver.sol\\\";\\nimport \\\"../Interfaces/ERC721.sol\\\";\\nimport \\\"../Interfaces/ERC721Enumerable.sol\\\";\\n\\nimport \\\"../EIP1776MetaTxReceiverBase.sol\\\";\\n\\ncontract Numbers is /*ERC721, ERC721Enumerable,*/ EIP1776MetaTxReceiverBase { // interface seems to require overrides :(\\n\\n    //////////////////////////// ERC721 Events /////////////\\n    event Transfer(\\n        address indexed from,\\n        address indexed to,\\n        uint256 indexed tokenId\\n    );\\n    event Approval(\\n        address indexed owner,\\n        address indexed approved,\\n        uint256 indexed tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n    /////////////////////////////////////////////////////////\\n\\n\\n    using AddressUtils for address;\\n\\n    bytes4 internal constant _ERC721_RECEIVED = 0x150b7a02;\\n\\n    bytes4 internal constant ERC165ID = 0x01ffc9a7;\\n\\n    mapping(uint256 => uint256) _ownerAndIndex; // max 2**96 items, store both owner and item index\\n    mapping(address => uint256[]) _itemsPerOwner;\\n    mapping (address => mapping(address => bool)) public _operatorsForAll;\\n    mapping (uint256 => address) public _operators;\\n\\n    uint256 internal _nextId = 1;\\n\\n    constructor(address metaTxProcessor) public EIP1776MetaTxReceiverBase(metaTxProcessor) {}\\n\\n    function isValidApproveOperator(address from) internal returns (bool) {\\n        return isValidSender(from) || _operatorsForAll[from][msg.sender];\\n    }\\n\\n    function mint(address to) external {\\n        // TODO only specified minter can do\\n        uint256 id = _nextId++;\\n        uint256 index = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + index * 2**160;\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _transferFrom(address from, address to, uint256 id, bool safe, bytes memory data) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == from, \\\"NOT_OWNER\\\");\\n        require(to != address(0), \\\"ZERO_ADDRESS\\\");\\n        bool isMeta = isMetaTx();\\n        if (msg.sender != from && !isMeta) {\\n            require(\\n                _operatorsForAll[from][msg.sender] ||\\n                (operatorEnabled && _operators[id] == msg.sender),\\n                \\\"NOT_AUTHORIZED\\\"\\n            );\\n        }\\n\\n        uint256 lastItemId = _itemsPerOwner[from][_itemsPerOwner[from].length-1]; // TODO for silidity: should pop return the item ?\\n        _itemsPerOwner[from].pop();\\n        if (id != lastItemId) {\\n            _itemsPerOwner[from][index] = lastItemId;\\n            _ownerAndIndex[lastItemId] = uint256(from) + index * 2**160;\\n        }\\n\\n        uint256 newIndex = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + newIndex * 2**160;\\n        emit Transfer(from, to, id);\\n        if (safe && to.isContract()) {\\n            require(\\n                _checkOnERC721Received(isMeta ? from : msg.sender, from, to, id, data),\\n                \\\"ERC721_TRANSFER_FAILED\\\"\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice Return the number of Land owned by an address\\n     * @param owner The address to look for\\n     * @return The number of Land token owned by the address\\n     */\\n    function balanceOf(address owner) external view returns (uint256) {\\n        require(owner != address(0), \\\"owner is zero address\\\");\\n        return _itemsPerOwner[owner].length;\\n    }\\n\\n\\n    function _ownerOf(uint256 id) internal view returns (address tokenOwner) {\\n        tokenOwner = address(_ownerAndIndex[id]);\\n        require(tokenOwner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _ownerAndOperatorEnabledOf(uint256 id) internal view returns (address owner, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    function _ownerIndexAndOperatorEnabledOf(uint256 id) internal view returns (address owner, uint256 index, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        index = (data & 0xEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) / 2**160;\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    /**\\n     * @notice Return the owner of a Land\\n     * @param id The id of the Land\\n     * @return owner The address of the owner\\n     */\\n    function ownerOf(uint256 id) external view returns (address owner) {\\n        owner = _ownerOf(id);\\n        require(owner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _approveFor(address sender, address operator, uint256 id) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == sender, \\\"NOT_OWNER\\\");\\n        if(operator == address(0)) {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160; // no need to resset the operator, it will be overriden next time\\n        } else {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160 + 2**255;\\n            _operators[id] = operator;\\n        }\\n        emit Approval(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approveFor(\\n        address sender,\\n        address operator,\\n        uint256 id\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(isValidApproveOperator(sender), \\\"NOT_AUTHORIZED\\\");\\n        _approveFor(sender, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approve(address operator, uint256 id) external {\\n        address owner = _ownerOf(id);\\n        // NO META TX here as the first parameter is not the originator but the operator that is meant to be approved\\n        require(\\n            owner == msg.sender || // TODO remove duplicatre check\\n            _operatorsForAll[owner][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n        _approveFor(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Get the approved operator for a specific token\\n     * @param id The id of the token\\n     * @return The address of the operator\\n     */\\n    function getApproved(uint256 id) external view returns (address) {\\n        (address owner, bool operatorEnabled) = _ownerAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        if (operatorEnabled) {\\n            return _operators[id];\\n        } else {\\n            return address(0);\\n        }\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n    */\\n    function transferFrom(address from, address to, uint256 id) external {\\n        _transferFrom(from, to, id, false, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     * @param data Additional data\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, bytes memory data) public {\\n        _transferFrom(from, to, id, true, data);\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The send of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id) external {\\n        safeTransferFrom(from, to, id, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Check if the contract supports an interface\\n     * 0x01ffc9a7 is ERC-165\\n     * 0x80ac58cd is ERC-721\\n     * 0x780e9d63 is ERC-721 Enumerable Extension\\n     * @param id The id of the interface\\n     * @return True if the interface is supported\\n     */\\n    function supportsInterface(bytes4 id) external pure returns (bool) {\\n        return id == 0x01ffc9a7 || id == 0x80ac58cd || id == 0x780e9d63;\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAllFor(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(\\n            isValidSender(sender),\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        _setApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAll(address operator, bool approved) external {\\n\\n        // NOT META TX ...\\n        _setApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n\\n    function _setApprovalForAll(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) internal {\\n        _operatorsForAll[sender][operator] = approved;\\n        emit ApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Check if the sender approved the operator\\n     * @param owner The address of the owner\\n     * @param operator The address of the operator\\n     * @return isOperator The status of the approval\\n     */\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool isOperator)\\n    {\\n        return _operatorsForAll[owner][operator];\\n    }\\n\\n    function _checkOnERC721Received(address operator, address from, address to, uint256 tokenId, bytes memory _data)\\n        internal returns (bool)\\n    {\\n        bytes4 retval = ERC721TokenReceiver(to).onERC721Received(operator, from, tokenId, _data);\\n        return (retval == _ERC721_RECEIVED);\\n    }\\n\\n    /////////////// erc721 ENUMERABLE //////////////\\n    function totalSupply() external view returns (uint256) {\\n        return _nextId - 1;\\n    }\\n    function tokenByIndex(uint256 index) external view returns (uint256) {\\n        revert(\\\"NOT SUPPORTED\\\");\\n    }\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256) {\\n        return _itemsPerOwner[owner][index];\\n    }\\n}\\n\",\"keccak256\":\"0xbb39c793b52c65fbf25ee8368bdb63a01786857e1c8ac15506731053eec8e3b3\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      },
      "args": [
        "0x8C64017cDD6B318f29610bB92AC9973eD1B85F44",
        "0x5565e1F4b5707920437e2c427d56d8022a247C93",
        "1000000000000000000",
        "0x172690708ea4Ca089088398d1118685CE798560a"
      ],
      "address": "0x87ba3A5C52bC761AEA755603070d665Ab3375A09",
      "transactionHash": "0x065bef30a847467a8906d0111cd5c902cc6ea52f52e223b2d4710c040de75940"
    },
    "NumberSale": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "contract Numbers",
                "name": "numbers",
                "type": "address"
              },
              {
                "internalType": "contract ERC20",
                "name": "erc20Token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "price",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "metaTxProcessor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "purchase",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506040516102e83803806102e88339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151600080546001600160a01b039283166001600160a01b031991821617909155600180549483169482169490941790935560028054919092169216919091179055600355610250806100986000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dde5a65d14610030575b600080fd5b61005e6004803603604081101561004657600080fd5b506001600160a01b0381358116916020013516610060565b005b610069826101e7565b6100ab576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b600254600354604080516323b872dd60e01b81523360048201523060248201526044810192909252516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561010857600080fd5b505af115801561011c573d6000803e3d6000fd5b505050506040513d602081101561013257600080fd5b505161017d576040805162461bcd60e51b8152602060048201526015602482015274115490cc8c17d514905394d1915497d19052531151605a1b604482015290519081900360640190fd5b600154604080516335313c2160e11b81526001600160a01b03848116600483015291519190921691636a62784291602480830192600092919082900301818387803b1580156101cb57600080fd5b505af11580156101df573d6000803e3d6000fd5b505050505050565b6000336001600160a01b03831614806102035750610203610209565b92915050565b6000546001600160a01b031633149056fea2646970667358221220dcdfbd9f6bba877ed869321ffa473d5e2f827ba26dea4ada24f08fe004544f7264736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2E8 CODESIZE SUB DUP1 PUSH2 0x2E8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP5 DUP4 AND SWAP5 DUP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 SSTORE PUSH2 0x250 DUP1 PUSH2 0x98 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDDE5A65D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69 DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0xAB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x17D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6A627842 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x203 JUMPI POP PUSH2 0x203 PUSH2 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xDF 0xBD SWAP16 PUSH12 0xBA877ED869321FFA473D5E2F DUP3 PUSH28 0xA26DEA4ADA24F08FE004544F7264736F6C6343000601003300000000 ",
            "sourceMap": "126:1201:17:-:0;;;316:230;8:9:-1;5:2;;;30:1;27;20:12;5:2;316:230:17;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;316:230:17;;;;;;;;;;;;;;;160:16:0;:34;;-1:-1:-1;;;;;160:34:0;;;-1:-1:-1;;;;;;160:34:0;;;;;;;;463:18:17;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;491:11:::1;:24:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;525:6:::1;:14:::0;126:1201;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dde5a65d14610030575b600080fd5b61005e6004803603604081101561004657600080fd5b506001600160a01b0381358116916020013516610060565b005b610069826101e7565b6100ab576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b600254600354604080516323b872dd60e01b81523360048201523060248201526044810192909252516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561010857600080fd5b505af115801561011c573d6000803e3d6000fd5b505050506040513d602081101561013257600080fd5b505161017d576040805162461bcd60e51b8152602060048201526015602482015274115490cc8c17d514905394d1915497d19052531151605a1b604482015290519081900360640190fd5b600154604080516335313c2160e11b81526001600160a01b03848116600483015291519190921691636a62784291602480830192600092919082900301818387803b1580156101cb57600080fd5b505af11580156101df573d6000803e3d6000fd5b505050505050565b6000336001600160a01b03831614806102035750610203610209565b92915050565b6000546001600160a01b031633149056fea2646970667358221220dcdfbd9f6bba877ed869321ffa473d5e2f827ba26dea4ada24f08fe004544f7264736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDDE5A65D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69 DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0xAB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x17D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6A627842 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x203 JUMPI POP PUSH2 0x203 PUSH2 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xDF 0xBD SWAP16 PUSH12 0xBA877ED869321FFA473D5E2F DUP3 PUSH28 0xA26DEA4ADA24F08FE004544F7264736F6C6343000601003300000000 ",
            "sourceMap": "126:1201:17:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;126:1201:17;;;;;;;;;;;;;;;;;;;552:773;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;552:773:17;;;;;;;;;;:::i;:::-;;;878:19;892:4;878:13;:19::i;:::-;870:46;;;;;-1:-1:-1;;;870:46:17;;;;;;;;;;;;-1:-1:-1;;;870:46:17;;;;;;;;;;;;;;;1171:11;;1223:6;;1171:59;;;-1:-1:-1;;;1171:59:17;;1196:10;1171:59;;;;1216:4;1171:59;;;;;;;;;;;;-1:-1:-1;;;;;1171:11:17;;;;:24;;:59;;;;;;;;;;;;;;;:11;;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;1171:59:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1171:59:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1171:59:17;1163:93;;;;;-1:-1:-1;;;1163:93:17;;;;;;;;;;;;-1:-1:-1;;;1163:93:17;;;;;;;;;;;;;;;1301:8;;:17;;;-1:-1:-1;;;1301:17:17;;-1:-1:-1;;;;;1301:17:17;;;;;;;;;:8;;;;;:13;;:17;;;;;:8;;:17;;;;;;;:8;;:17;;;5:2:-1;;;;30:1;27;20:12;5:2;1301:17:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1301:17:17;;;;552:773;;:::o;304:121:0:-;363:4;386:10;-1:-1:-1;;;;;386:18:0;;;;:32;;;408:10;:8;:10::i;:::-;379:39;304:121;-1:-1:-1;;304:121:0:o;431:102::-;473:4;510:16;-1:-1:-1;;;;;510:16:0;496:10;:30;;431:102::o"
          },
          "methodIdentifiers": {
            "purchase(address,address)": "dde5a65d"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Numbers\",\"name\":\"numbers\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"metaTxProcessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/Test/NumberSale.sol\":\"NumberSale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/EIP1776MetaTxReceiverBase.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\ncontract EIP1776MetaTxReceiverBase {\\n\\n    address private _metaTxProcessor;\\n    constructor(address metaTxProcessor) internal {\\n        _metaTxProcessor = metaTxProcessor;\\n    }\\n\\n    ///@dev the from need to be equal to the first parameter of the function using that modifier\\n    function isValidSender(address from) internal view returns(bool) {\\n        return msg.sender == from || isMetaTx();\\n    }\\n\\n    function isMetaTx() internal view returns(bool) {\\n        return msg.sender == _metaTxProcessor;\\n    }\\n}\\n\",\"keccak256\":\"0x4d36cc539b5ec0fc2dec57a981af90afc8212e2c7bb2a8273e6fb508b0f92d32\"},\"src/Interfaces/ERC165.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC165\\n * @dev https://eips.ethereum.org/EIPS/eip-165\\n */\\ninterface ERC165 {\\n    /**\\n   * @notice Query if a contract implements interface `interfaceId`\\n   * @param interfaceId The interface identifier, as specified in ERC-165\\n   * @dev Interface identification is specified in ERC-165. This function\\n   * uses less than 30,000 gas.\\n   */\\n    function supportsInterface(bytes4 interfaceId)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xc0faa36cba688ce34574fdab3aaae02fc8255999ceec19998d4c22065a1754f8\"},\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Interfaces/ERC721.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nimport \\\"./ERC165.sol\\\";\\n\\ninterface ERC721 /*is ERC165*/ { // Interfaces still cannot inherit :(\\n    event Transfer(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 indexed _tokenId\\n    );\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _approved,\\n        uint256 indexed _tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed _owner,\\n        address indexed _operator,\\n        bool _approved\\n    );\\n\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n    \\n    function approve(address to, uint256 tokenId) external;\\n    function getApproved(uint256 tokenId)\\n        external\\n        view\\n        returns (address operator);\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 tokenId)\\n        external;\\n    function safeTransferFrom(address from, address to, uint256 tokenId)\\n        external;\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6796e307cbd33d1d26c0861a2c8c775570db0482cbbd1b66541b2a1af6a9623e\"},\"src/Interfaces/ERC721Enumerable.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n///  Note: the ERC-165 identifier for this interface is 0x780e9d63.\\ninterface ERC721Enumerable /* is ERC721 */ {\\n    /// @notice Count NFTs tracked by this contract\\n    /// @return A count of valid NFTs tracked by this contract, where each one of\\n    ///  them has an assigned and queryable owner not equal to the zero address\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Enumerate valid NFTs\\n    /// @dev Throws if `_index` >= `totalSupply()`.\\n    /// @param _index A counter less than `totalSupply()`\\n    /// @return The token identifier for the `_index`th NFT,\\n    ///  (sort order not specified)\\n    function tokenByIndex(uint256 _index) external view returns (uint256);\\n\\n    /// @notice Enumerate NFTs assigned to an owner\\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\\n    ///  `_owner` is the zero address, representing invalid NFTs.\\n    /// @param _owner An address where we are interested in NFTs owned by them\\n    /// @param _index A counter less than `balanceOf(_owner)`\\n    /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\\n    ///   (sort order not specified)\\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\\n}\",\"keccak256\":\"0xdd15c10b403e5bb1d1f86c403ee9d589d51a1d07193def74c71eece7696a3f71\"},\"src/Interfaces/ERC721TokenReceiver.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x1e7dcf369cd4048ef656ea016905f9ab78956d4ab88ddd9fc941e72128bb0c72\"},\"src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0xeac7dc828dbde8ad86c624d39dca24f7f66c3986958d8a71cd69a6aa9b5ed679\"},\"src/Test/NumberSale.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../EIP1776MetaTxReceiverBase.sol\\\";\\nimport \\\"./Numbers.sol\\\";\\nimport \\\"../Interfaces/ERC20.sol\\\";\\n\\ncontract NumberSale is EIP1776MetaTxReceiverBase {\\n\\n    Numbers internal /*immutable*/ _numbers;\\n    ERC20 internal /*immutable*/ _erc20Token;\\n    uint256 internal /*immutable*/ _price;\\n    constructor(Numbers numbers, ERC20 erc20Token, uint256 price, address metaTxProcessor) public EIP1776MetaTxReceiverBase(metaTxProcessor) {\\n        _numbers = numbers;\\n        _erc20Token = erc20Token;\\n        _price = price;\\n    }\\n\\n    function purchase(address from, address to) external {\\n\\n        // this check whether\\n        // 1) the first parameter is msg.sender, in which case the user is using a normal tx\\n        // 2) or the msg.sender is equal the MetatxProcessor (which ensure the first paramter is the address of the metatx signer)\\n        require(isValidSender(from), \\\"NOT_AUTHORIZED\\\");\\n\\n\\n        // Here we transfer from the sender\\n        // this works because the meta tx processor will be owing the ERC20 token temporarly\\n        // This allow the user to never need to approve ERC20 token before hand when using metatx\\n        require(_erc20Token.transferFrom(msg.sender, address(this), _price), \\\"ERC20_TRANSFER_FAILED\\\");\\n\\n        // if all is good we mint\\n        _numbers.mint(to);\\n    }\\n}\\n\",\"keccak256\":\"0x4d8abc5dc915d072e787730ec4e484d50482e515927970586513c6f63ba4f0c0\"},\"src/Test/Numbers.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../Libraries/AddressUtils.sol\\\";\\nimport \\\"../Interfaces/ERC721TokenReceiver.sol\\\";\\nimport \\\"../Interfaces/ERC721.sol\\\";\\nimport \\\"../Interfaces/ERC721Enumerable.sol\\\";\\n\\nimport \\\"../EIP1776MetaTxReceiverBase.sol\\\";\\n\\ncontract Numbers is /*ERC721, ERC721Enumerable,*/ EIP1776MetaTxReceiverBase { // interface seems to require overrides :(\\n\\n    //////////////////////////// ERC721 Events /////////////\\n    event Transfer(\\n        address indexed from,\\n        address indexed to,\\n        uint256 indexed tokenId\\n    );\\n    event Approval(\\n        address indexed owner,\\n        address indexed approved,\\n        uint256 indexed tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n    /////////////////////////////////////////////////////////\\n\\n\\n    using AddressUtils for address;\\n\\n    bytes4 internal constant _ERC721_RECEIVED = 0x150b7a02;\\n\\n    bytes4 internal constant ERC165ID = 0x01ffc9a7;\\n\\n    mapping(uint256 => uint256) _ownerAndIndex; // max 2**96 items, store both owner and item index\\n    mapping(address => uint256[]) _itemsPerOwner;\\n    mapping (address => mapping(address => bool)) public _operatorsForAll;\\n    mapping (uint256 => address) public _operators;\\n\\n    uint256 internal _nextId = 1;\\n\\n    constructor(address metaTxProcessor) public EIP1776MetaTxReceiverBase(metaTxProcessor) {}\\n\\n    function isValidApproveOperator(address from) internal returns (bool) {\\n        return isValidSender(from) || _operatorsForAll[from][msg.sender];\\n    }\\n\\n    function mint(address to) external {\\n        // TODO only specified minter can do\\n        uint256 id = _nextId++;\\n        uint256 index = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + index * 2**160;\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _transferFrom(address from, address to, uint256 id, bool safe, bytes memory data) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == from, \\\"NOT_OWNER\\\");\\n        require(to != address(0), \\\"ZERO_ADDRESS\\\");\\n        bool isMeta = isMetaTx();\\n        if (msg.sender != from && !isMeta) {\\n            require(\\n                _operatorsForAll[from][msg.sender] ||\\n                (operatorEnabled && _operators[id] == msg.sender),\\n                \\\"NOT_AUTHORIZED\\\"\\n            );\\n        }\\n\\n        uint256 lastItemId = _itemsPerOwner[from][_itemsPerOwner[from].length-1]; // TODO for silidity: should pop return the item ?\\n        _itemsPerOwner[from].pop();\\n        if (id != lastItemId) {\\n            _itemsPerOwner[from][index] = lastItemId;\\n            _ownerAndIndex[lastItemId] = uint256(from) + index * 2**160;\\n        }\\n\\n        uint256 newIndex = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + newIndex * 2**160;\\n        emit Transfer(from, to, id);\\n        if (safe && to.isContract()) {\\n            require(\\n                _checkOnERC721Received(isMeta ? from : msg.sender, from, to, id, data),\\n                \\\"ERC721_TRANSFER_FAILED\\\"\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice Return the number of Land owned by an address\\n     * @param owner The address to look for\\n     * @return The number of Land token owned by the address\\n     */\\n    function balanceOf(address owner) external view returns (uint256) {\\n        require(owner != address(0), \\\"owner is zero address\\\");\\n        return _itemsPerOwner[owner].length;\\n    }\\n\\n\\n    function _ownerOf(uint256 id) internal view returns (address tokenOwner) {\\n        tokenOwner = address(_ownerAndIndex[id]);\\n        require(tokenOwner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _ownerAndOperatorEnabledOf(uint256 id) internal view returns (address owner, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    function _ownerIndexAndOperatorEnabledOf(uint256 id) internal view returns (address owner, uint256 index, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        index = (data & 0xEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) / 2**160;\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    /**\\n     * @notice Return the owner of a Land\\n     * @param id The id of the Land\\n     * @return owner The address of the owner\\n     */\\n    function ownerOf(uint256 id) external view returns (address owner) {\\n        owner = _ownerOf(id);\\n        require(owner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _approveFor(address sender, address operator, uint256 id) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == sender, \\\"NOT_OWNER\\\");\\n        if(operator == address(0)) {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160; // no need to resset the operator, it will be overriden next time\\n        } else {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160 + 2**255;\\n            _operators[id] = operator;\\n        }\\n        emit Approval(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approveFor(\\n        address sender,\\n        address operator,\\n        uint256 id\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(isValidApproveOperator(sender), \\\"NOT_AUTHORIZED\\\");\\n        _approveFor(sender, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approve(address operator, uint256 id) external {\\n        address owner = _ownerOf(id);\\n        // NO META TX here as the first parameter is not the originator but the operator that is meant to be approved\\n        require(\\n            owner == msg.sender || // TODO remove duplicatre check\\n            _operatorsForAll[owner][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n        _approveFor(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Get the approved operator for a specific token\\n     * @param id The id of the token\\n     * @return The address of the operator\\n     */\\n    function getApproved(uint256 id) external view returns (address) {\\n        (address owner, bool operatorEnabled) = _ownerAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        if (operatorEnabled) {\\n            return _operators[id];\\n        } else {\\n            return address(0);\\n        }\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n    */\\n    function transferFrom(address from, address to, uint256 id) external {\\n        _transferFrom(from, to, id, false, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     * @param data Additional data\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, bytes memory data) public {\\n        _transferFrom(from, to, id, true, data);\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The send of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id) external {\\n        safeTransferFrom(from, to, id, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Check if the contract supports an interface\\n     * 0x01ffc9a7 is ERC-165\\n     * 0x80ac58cd is ERC-721\\n     * 0x780e9d63 is ERC-721 Enumerable Extension\\n     * @param id The id of the interface\\n     * @return True if the interface is supported\\n     */\\n    function supportsInterface(bytes4 id) external pure returns (bool) {\\n        return id == 0x01ffc9a7 || id == 0x80ac58cd || id == 0x780e9d63;\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAllFor(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(\\n            isValidSender(sender),\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        _setApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAll(address operator, bool approved) external {\\n\\n        // NOT META TX ...\\n        _setApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n\\n    function _setApprovalForAll(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) internal {\\n        _operatorsForAll[sender][operator] = approved;\\n        emit ApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Check if the sender approved the operator\\n     * @param owner The address of the owner\\n     * @param operator The address of the operator\\n     * @return isOperator The status of the approval\\n     */\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool isOperator)\\n    {\\n        return _operatorsForAll[owner][operator];\\n    }\\n\\n    function _checkOnERC721Received(address operator, address from, address to, uint256 tokenId, bytes memory _data)\\n        internal returns (bool)\\n    {\\n        bytes4 retval = ERC721TokenReceiver(to).onERC721Received(operator, from, tokenId, _data);\\n        return (retval == _ERC721_RECEIVED);\\n    }\\n\\n    /////////////// erc721 ENUMERABLE //////////////\\n    function totalSupply() external view returns (uint256) {\\n        return _nextId - 1;\\n    }\\n    function tokenByIndex(uint256 index) external view returns (uint256) {\\n        revert(\\\"NOT SUPPORTED\\\");\\n    }\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256) {\\n        return _itemsPerOwner[owner][index];\\n    }\\n}\\n\",\"keccak256\":\"0xbb39c793b52c65fbf25ee8368bdb63a01786857e1c8ac15506731053eec8e3b3\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      },
      "args": [
        "0x8C64017cDD6B318f29610bB92AC9973eD1B85F44",
        "0xCc4E49EC86a6A7E6c90c98920Db0DA91EB72586f",
        "1000000000000000000",
        "0x172690708ea4Ca089088398d1118685CE798560a"
      ],
      "address": "0xDAD0b0edE8E130Bdf683d70B9D385a08AB9CAB04",
      "transactionHash": "0x5b6b2b24d795f84cc06e0b542fa7638f1f551a535afdca2156ca37d6e8ededf1"
    },
    "Numbers": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "metaTxProcessor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "approved",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "name": "_operators",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "_operatorsForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "approveFor",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "getApproved",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "isOperator",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "ownerOf",
            "outputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAllFor",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "id",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              }
            ],
            "name": "tokenByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6080604052600160055534801561001557600080fd5b506040516112c43803806112c48339818101604052602081101561003857600080fd5b5051600080546001600160a01b039092166001600160a01b031990921691909117905561125a8061006a6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb46514610359578063b88d4fde14610387578063b9b710e91461044d578063e985e9c51461046a578063eeb5a5d11461049857610116565b80636352211e146102c25780636a627842146102df57806370a08231146103055780639d786bbc1461032b57610116565b806323b872dd116100e957806323b872dd146101d75780632b9917461461020d5780632f745c591461024357806342842e0e1461026f5780634f6ccce7146102a557610116565b806301ffc9a71461011b578063081812fc14610156578063095ea7b31461018f57806318160ddd146101bd575b600080fd5b6101426004803603602081101561013157600080fd5b50356001600160e01b0319166104d0565b604080519115158252519081900360200190f35b6101736004803603602081101561016c57600080fd5b5035610524565b604080516001600160a01b039092168252519081900360200190f35b6101bb600480360360408110156101a557600080fd5b506001600160a01b0381351690602001356105b4565b005b6101c561064d565b60408051918252519081900360200190f35b6101bb600480360360608110156101ed57600080fd5b506001600160a01b03813581169160208101359091169060400135610657565b6101bb6004803603606081101561022357600080fd5b506001600160a01b03813581169160208101359091169060400135610674565b6101c56004803603604081101561025957600080fd5b506001600160a01b038135169060200135610714565b6101bb6004803603606081101561028557600080fd5b506001600160a01b0381358116916020810135909116906040013561074b565b6101c5600480360360208110156102bb57600080fd5b5035610766565b610173600480360360208110156102d857600080fd5b50356107a5565b6101bb600480360360208110156102f557600080fd5b50356001600160a01b0316610804565b6101c56004803603602081101561031b57600080fd5b50356001600160a01b0316610884565b6101426004803603604081101561034157600080fd5b506001600160a01b03813581169160200135166108f5565b6101bb6004803603604081101561036f57600080fd5b506001600160a01b0381351690602001351515610915565b6101bb6004803603608081101561039d57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d857600080fd5b8201836020820111156103ea57600080fd5b8035906020019184600183028401116401000000008311171561040c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610924945050505050565b6101736004803603602081101561046357600080fd5b5035610938565b6101426004803603604081101561048057600080fd5b506001600160a01b0381358116916020013516610953565b6101bb600480360360608110156104ae57600080fd5b506001600160a01b038135811691602081013590911690604001351515610981565b60006301ffc9a760e01b6001600160e01b03198316148061050157506380ac58cd60e01b6001600160e01b03198316145b8061051c575063780e9d6360e01b6001600160e01b03198316145b90505b919050565b600080600061053284610a21565b90925090506001600160a01b038216610583576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b80156105a9575050506000818152600460205260409020546001600160a01b031661051f565b60009250505061051f565b60006105bf82610a41565b90506001600160a01b0381163314806105fb57506001600160a01b038116600090815260036020908152604080832033845290915290205460ff165b61063d576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648818484610aa2565b505050565b6005546000190190565b610648838383600060405180602001604052806000815250610c21565b6001600160a01b0383166106be576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6106c783610fb1565b610709576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648838383610aa2565b6001600160a01b038216600090815260026020526040812080548390811061073857fe5b9060005260206000200154905092915050565b61064883838360405180602001604052806000815250610924565b6040805162461bcd60e51b815260206004820152600d60248201526c1393d50814d5541413d4951151609a1b6044820152905160009181900360640190fd5b60006107b082610a41565b90506001600160a01b03811661051f576040805162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015290519081900360640190fd5b6005805460018082019092556001600160a01b038316600081815260026020908152604080832080548088018255908452828420810186905585845295909152808220600160a01b86028401905551929392849291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b60006001600160a01b0382166108d9576040805162461bcd60e51b81526020600482015260156024820152746f776e6572206973207a65726f206164647265737360581b604482015290519081900360640190fd5b506001600160a01b031660009081526002602052604090205490565b600360209081526000928352604080842090915290825290205460ff1681565b610920338383610fec565b5050565b610932848484600185610c21565b50505050565b6004602052600090815260409020546001600160a01b031681565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6001600160a01b0383166109cb576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6109d48361105a565b610a16576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648838383610fec565b60009081526001602081905260409091205491600160ff1b830490911490565b6000818152600160205260409020546001600160a01b03811661051f576040805162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015290519081900360640190fd5b6000806000610ab084611076565b919450925090506001600160a01b038316610b03576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b856001600160a01b0316836001600160a01b031614610b55576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6001600160a01b038516610b8a5760008481526001602052604090206001600160a01b038416600160a01b8402019055610bd8565b6000848152600160209081526040808320600160a01b86026001600160a01b0388811691909101600160ff1b01909155600490925290912080546001600160a01b0319169187169190911790555b83856001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000806000610c2f86611076565b919450925090506001600160a01b038316610c82576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b876001600160a01b0316836001600160a01b031614610cd4576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6001600160a01b038716610d1e576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6000610d286110a5565b9050336001600160a01b038a1614801590610d41575080155b15610dd8576001600160a01b038916600090815260036020908152604080832033845290915290205460ff1680610d965750818015610d9657506000878152600460205260409020546001600160a01b031633145b610dd8576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b6001600160a01b038916600090815260026020526040812080546000198101908110610e0057fe5b90600052602060002001549050600260008b6001600160a01b03166001600160a01b03168152602001908152602001600020805480610e3b57fe5b60019003818190600052602060002001600090559055808814610eb1576001600160a01b038a166000908152600260205260409020805482919086908110610e7f57fe5b60009182526020808320909101929092558281526001909152604090206001600160a01b038b16600160a01b86020190555b6001600160a01b03808a16600081815260026020908152604080832080546001808201835591855283852081018f90558e85529252808320600160a01b8302850190555190938c9392908f16917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a4878015610f3c5750610f3c8a6001600160a01b03166110b6565b15610fa457610f5a83610f4f5733610f51565b8b5b8c8c8c8b6110f2565b610fa4576040805162461bcd60e51b8152602060048201526016602482015275115490cdcc8c57d514905394d1915497d1905253115160521b604482015290519081900360640190fd5b5050505050505050505050565b6000610fbc8261105a565b8061051c5750506001600160a01b0316600090815260036020908152604080832033845290915290205460ff1690565b6001600160a01b03838116600081815260036020908152604080832094871680845294825291829020805460ff1916861515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b6000336001600160a01b038316148061051c575061051c6110a5565b60009081526001602081905260409091205491600160a01b6001600f60f41b0384160491600160ff1b84041490565b6000546001600160a01b0316331490565b60007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470823f80158015906110ea5750818114155b949350505050565b600080846001600160a01b031663150b7a02888887876040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561118a578181015183820152602001611172565b50505050905090810190601f1680156111b75780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156111d957600080fd5b505af11580156111ed573d6000803e3d6000fd5b505050506040513d602081101561120357600080fd5b50516001600160e01b031916630a85bd0160e11b149150509594505050505056fea26469706673582212200d9097794ffe210a75691804f8728ea8f0fc1e14c43cdb78ec2fb637aa4c4fca64736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x12C4 CODESIZE SUB DUP1 PUSH2 0x12C4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x125A DUP1 PUSH2 0x6A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xB9B710E9 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xEEB5A5D1 EQ PUSH2 0x498 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x9D786BBC EQ PUSH2 0x32B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x2A5 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x657 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x674 JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x714 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x74B JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x766 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x804 JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x884 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8F5 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x915 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x924 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x938 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x953 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x981 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x501 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x51C JUMPI POP PUSH4 0x780E9D63 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x532 DUP5 PUSH2 0xA21 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x583 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5A9 JUMPI POP POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x51F JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x51F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP3 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ DUP1 PUSH2 0x5FB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x63D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP2 DUP5 DUP5 PUSH2 0xAA2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6C7 DUP4 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x709 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x738 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1393D50814D5541413D4951151 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7B0 DUP3 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x51F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP9 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP2 ADD DUP7 SWAP1 SSTORE DUP6 DUP5 MSTORE SWAP6 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL DUP5 ADD SWAP1 SSTORE MLOAD SWAP3 SWAP4 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6F776E6572206973207A65726F2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x920 CALLER DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x932 DUP5 DUP5 DUP5 PUSH1 0x1 DUP6 PUSH2 0xC21 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x9D4 DUP4 PUSH2 0x105A JUMP JUMPDEST PUSH2 0xA16 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 PUSH1 0x1 PUSH1 0xFF SHL DUP4 DIV SWAP1 SWAP2 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x51F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xAB0 DUP5 PUSH2 0x1076 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB03 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2727AA2FA7ABA722A9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xB8A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0xA0 SHL DUP5 MUL ADD SWAP1 SSTORE PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 PUSH1 0xFF SHL ADD SWAP1 SWAP2 SSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xC2F DUP7 PUSH2 0x1076 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2727AA2FA7ABA722A9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0xD1E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD28 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xD41 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xD96 JUMPI POP DUP2 DUP1 ISZERO PUSH2 0xD96 JUMPI POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xDD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xE00 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xE3B JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP1 DUP9 EQ PUSH2 0xEB1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xE7F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 DUP2 ADD DUP16 SWAP1 SSTORE DUP15 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP4 MUL DUP6 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP4 DUP13 SWAP4 SWAP3 SWAP1 DUP16 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG4 DUP8 DUP1 ISZERO PUSH2 0xF3C JUMPI POP PUSH2 0xF3C DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10B6 JUMP JUMPDEST ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xF5A DUP4 PUSH2 0xF4F JUMPI CALLER PUSH2 0xF51 JUMP JUMPDEST DUP12 JUMPDEST DUP13 DUP13 DUP13 DUP12 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0xFA4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CDCC8C57D514905394D1915497D19052531151 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBC DUP3 PUSH2 0x105A JUMP JUMPDEST DUP1 PUSH2 0x51C JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x51C JUMPI POP PUSH2 0x51C PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0xF PUSH1 0xF4 SHL SUB DUP5 AND DIV SWAP2 PUSH1 0x1 PUSH1 0xFF SHL DUP5 DIV EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP3 EXTCODEHASH DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x10EA JUMPI POP DUP2 DUP2 EQ ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x150B7A02 DUP9 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x118A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1172 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11B7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP1 SWAP8 PUSH26 0x4FFE210A75691804F8728EA8F0FC1E14C43CDB78EC2FB637AA4C 0x4F 0xCA PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "237:10699:18:-:0;;;1305:1;1278:28;;1313:89;8:9:-1;5:2;;;30:1;27;20:12;5:2;1313:89:18;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1313:89:18;160:16:0;:34;;-1:-1:-1;;;;;160:34:0;;;-1:-1:-1;;;;;;160:34:0;;;;;;;;;237:10699:18;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb46514610359578063b88d4fde14610387578063b9b710e91461044d578063e985e9c51461046a578063eeb5a5d11461049857610116565b80636352211e146102c25780636a627842146102df57806370a08231146103055780639d786bbc1461032b57610116565b806323b872dd116100e957806323b872dd146101d75780632b9917461461020d5780632f745c591461024357806342842e0e1461026f5780634f6ccce7146102a557610116565b806301ffc9a71461011b578063081812fc14610156578063095ea7b31461018f57806318160ddd146101bd575b600080fd5b6101426004803603602081101561013157600080fd5b50356001600160e01b0319166104d0565b604080519115158252519081900360200190f35b6101736004803603602081101561016c57600080fd5b5035610524565b604080516001600160a01b039092168252519081900360200190f35b6101bb600480360360408110156101a557600080fd5b506001600160a01b0381351690602001356105b4565b005b6101c561064d565b60408051918252519081900360200190f35b6101bb600480360360608110156101ed57600080fd5b506001600160a01b03813581169160208101359091169060400135610657565b6101bb6004803603606081101561022357600080fd5b506001600160a01b03813581169160208101359091169060400135610674565b6101c56004803603604081101561025957600080fd5b506001600160a01b038135169060200135610714565b6101bb6004803603606081101561028557600080fd5b506001600160a01b0381358116916020810135909116906040013561074b565b6101c5600480360360208110156102bb57600080fd5b5035610766565b610173600480360360208110156102d857600080fd5b50356107a5565b6101bb600480360360208110156102f557600080fd5b50356001600160a01b0316610804565b6101c56004803603602081101561031b57600080fd5b50356001600160a01b0316610884565b6101426004803603604081101561034157600080fd5b506001600160a01b03813581169160200135166108f5565b6101bb6004803603604081101561036f57600080fd5b506001600160a01b0381351690602001351515610915565b6101bb6004803603608081101561039d57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d857600080fd5b8201836020820111156103ea57600080fd5b8035906020019184600183028401116401000000008311171561040c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610924945050505050565b6101736004803603602081101561046357600080fd5b5035610938565b6101426004803603604081101561048057600080fd5b506001600160a01b0381358116916020013516610953565b6101bb600480360360608110156104ae57600080fd5b506001600160a01b038135811691602081013590911690604001351515610981565b60006301ffc9a760e01b6001600160e01b03198316148061050157506380ac58cd60e01b6001600160e01b03198316145b8061051c575063780e9d6360e01b6001600160e01b03198316145b90505b919050565b600080600061053284610a21565b90925090506001600160a01b038216610583576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b80156105a9575050506000818152600460205260409020546001600160a01b031661051f565b60009250505061051f565b60006105bf82610a41565b90506001600160a01b0381163314806105fb57506001600160a01b038116600090815260036020908152604080832033845290915290205460ff165b61063d576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648818484610aa2565b505050565b6005546000190190565b610648838383600060405180602001604052806000815250610c21565b6001600160a01b0383166106be576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6106c783610fb1565b610709576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648838383610aa2565b6001600160a01b038216600090815260026020526040812080548390811061073857fe5b9060005260206000200154905092915050565b61064883838360405180602001604052806000815250610924565b6040805162461bcd60e51b815260206004820152600d60248201526c1393d50814d5541413d4951151609a1b6044820152905160009181900360640190fd5b60006107b082610a41565b90506001600160a01b03811661051f576040805162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015290519081900360640190fd5b6005805460018082019092556001600160a01b038316600081815260026020908152604080832080548088018255908452828420810186905585845295909152808220600160a01b86028401905551929392849291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b60006001600160a01b0382166108d9576040805162461bcd60e51b81526020600482015260156024820152746f776e6572206973207a65726f206164647265737360581b604482015290519081900360640190fd5b506001600160a01b031660009081526002602052604090205490565b600360209081526000928352604080842090915290825290205460ff1681565b610920338383610fec565b5050565b610932848484600185610c21565b50505050565b6004602052600090815260409020546001600160a01b031681565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6001600160a01b0383166109cb576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6109d48361105a565b610a16576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648838383610fec565b60009081526001602081905260409091205491600160ff1b830490911490565b6000818152600160205260409020546001600160a01b03811661051f576040805162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015290519081900360640190fd5b6000806000610ab084611076565b919450925090506001600160a01b038316610b03576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b856001600160a01b0316836001600160a01b031614610b55576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6001600160a01b038516610b8a5760008481526001602052604090206001600160a01b038416600160a01b8402019055610bd8565b6000848152600160209081526040808320600160a01b86026001600160a01b0388811691909101600160ff1b01909155600490925290912080546001600160a01b0319169187169190911790555b83856001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000806000610c2f86611076565b919450925090506001600160a01b038316610c82576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b876001600160a01b0316836001600160a01b031614610cd4576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6001600160a01b038716610d1e576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6000610d286110a5565b9050336001600160a01b038a1614801590610d41575080155b15610dd8576001600160a01b038916600090815260036020908152604080832033845290915290205460ff1680610d965750818015610d9657506000878152600460205260409020546001600160a01b031633145b610dd8576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b6001600160a01b038916600090815260026020526040812080546000198101908110610e0057fe5b90600052602060002001549050600260008b6001600160a01b03166001600160a01b03168152602001908152602001600020805480610e3b57fe5b60019003818190600052602060002001600090559055808814610eb1576001600160a01b038a166000908152600260205260409020805482919086908110610e7f57fe5b60009182526020808320909101929092558281526001909152604090206001600160a01b038b16600160a01b86020190555b6001600160a01b03808a16600081815260026020908152604080832080546001808201835591855283852081018f90558e85529252808320600160a01b8302850190555190938c9392908f16917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a4878015610f3c5750610f3c8a6001600160a01b03166110b6565b15610fa457610f5a83610f4f5733610f51565b8b5b8c8c8c8b6110f2565b610fa4576040805162461bcd60e51b8152602060048201526016602482015275115490cdcc8c57d514905394d1915497d1905253115160521b604482015290519081900360640190fd5b5050505050505050505050565b6000610fbc8261105a565b8061051c5750506001600160a01b0316600090815260036020908152604080832033845290915290205460ff1690565b6001600160a01b03838116600081815260036020908152604080832094871680845294825291829020805460ff1916861515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b6000336001600160a01b038316148061051c575061051c6110a5565b60009081526001602081905260409091205491600160a01b6001600f60f41b0384160491600160ff1b84041490565b6000546001600160a01b0316331490565b60007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470823f80158015906110ea5750818114155b949350505050565b600080846001600160a01b031663150b7a02888887876040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561118a578181015183820152602001611172565b50505050905090810190601f1680156111b75780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156111d957600080fd5b505af11580156111ed573d6000803e3d6000fd5b505050506040513d602081101561120357600080fd5b50516001600160e01b031916630a85bd0160e11b149150509594505050505056fea26469706673582212200d9097794ffe210a75691804f8728ea8f0fc1e14c43cdb78ec2fb637aa4c4fca64736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xB9B710E9 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xEEB5A5D1 EQ PUSH2 0x498 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x9D786BBC EQ PUSH2 0x32B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x2A5 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x657 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x674 JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x714 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x74B JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x766 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x804 JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x884 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8F5 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x915 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x924 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x938 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x953 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x981 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x501 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x51C JUMPI POP PUSH4 0x780E9D63 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x532 DUP5 PUSH2 0xA21 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x583 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5A9 JUMPI POP POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x51F JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x51F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP3 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ DUP1 PUSH2 0x5FB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x63D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP2 DUP5 DUP5 PUSH2 0xAA2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6C7 DUP4 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x709 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x738 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1393D50814D5541413D4951151 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7B0 DUP3 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x51F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP9 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP2 ADD DUP7 SWAP1 SSTORE DUP6 DUP5 MSTORE SWAP6 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL DUP5 ADD SWAP1 SSTORE MLOAD SWAP3 SWAP4 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6F776E6572206973207A65726F2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x920 CALLER DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x932 DUP5 DUP5 DUP5 PUSH1 0x1 DUP6 PUSH2 0xC21 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x9D4 DUP4 PUSH2 0x105A JUMP JUMPDEST PUSH2 0xA16 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 PUSH1 0x1 PUSH1 0xFF SHL DUP4 DIV SWAP1 SWAP2 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x51F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xAB0 DUP5 PUSH2 0x1076 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB03 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2727AA2FA7ABA722A9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xB8A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0xA0 SHL DUP5 MUL ADD SWAP1 SSTORE PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 PUSH1 0xFF SHL ADD SWAP1 SWAP2 SSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xC2F DUP7 PUSH2 0x1076 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2727AA2FA7ABA722A9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0xD1E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD28 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xD41 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xD96 JUMPI POP DUP2 DUP1 ISZERO PUSH2 0xD96 JUMPI POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xDD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xE00 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xE3B JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP1 DUP9 EQ PUSH2 0xEB1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xE7F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 DUP2 ADD DUP16 SWAP1 SSTORE DUP15 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP4 MUL DUP6 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP4 DUP13 SWAP4 SWAP3 SWAP1 DUP16 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG4 DUP8 DUP1 ISZERO PUSH2 0xF3C JUMPI POP PUSH2 0xF3C DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10B6 JUMP JUMPDEST ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xF5A DUP4 PUSH2 0xF4F JUMPI CALLER PUSH2 0xF51 JUMP JUMPDEST DUP12 JUMPDEST DUP13 DUP13 DUP13 DUP12 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0xFA4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CDCC8C57D514905394D1915497D19052531151 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBC DUP3 PUSH2 0x105A JUMP JUMPDEST DUP1 PUSH2 0x51C JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x51C JUMPI POP PUSH2 0x51C PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0xF PUSH1 0xF4 SHL SUB DUP5 AND DIV SWAP2 PUSH1 0x1 PUSH1 0xFF SHL DUP5 DIV EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP3 EXTCODEHASH DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x10EA JUMPI POP DUP2 DUP2 EQ ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x150B7A02 DUP9 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x118A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1172 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11B7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP1 SWAP8 PUSH26 0x4FFE210A75691804F8728EA8F0FC1E14C43CDB78EC2FB637AA4C 0x4F 0xCA PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "237:10699:18:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:10699:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8423:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8423:147:18;-1:-1:-1;;;;;;8423:147:18;;:::i;:::-;;;;;;;;;;;;;;;;;;6705:332;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6705:332:18;;:::i;:::-;;;;-1:-1:-1;;;;;6705:332:18;;;;;;;;;;;;;;6107:434;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6107:434:18;;;;;;;;:::i;:::-;;10582:90;;;:::i;:::-;;;;;;;;;;;;;;;;7234:124;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7234:124:18;;;;;;;;;;;;;;;;;:::i;5641:277::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5641:277:18;;;;;;;;;;;;;;;;;:::i;10791:143::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;10791:143:18;;;;;;;;:::i;8019:124::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8019:124:18;;;;;;;;;;;;;;;;;:::i;10677:109::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10677:109:18;;:::i;4587:166::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4587:166:18;;:::i;1565:309::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1565:309:18;-1:-1:-1;;;;;1565:309:18;;:::i;3450:181::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3450:181:18;-1:-1:-1;;;;;3450:181:18;;:::i;1150:69::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1150:69:18;;;;;;;;;;:::i;9400:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9400:164:18;;;;;;;;;;:::i;7634:146::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7634:146:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7634:146:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7634:146:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7634:146:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7634:146:18;;-1:-1:-1;7634:146:18;;-1:-1:-1;;;;;7634:146:18:i;1225:46::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1225:46:18;;:::i;10034:184::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;10034:184:18;;;;;;;;;;:::i;8847:329::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8847:329:18;;;;;;;;;;;;;;;;;;;:::i;8423:147::-;8484:4;-1:-1:-1;;;;;;;;;8507:16:18;;;;:36;;-1:-1:-1;;;;;;;;;;8527:16:18;;;8507:36;:56;;;-1:-1:-1;;;;;;;;;;8547:16:18;;;8507:56;8500:63;;8423:147;;;;:::o;6705:332::-;6761:7;6781:13;6796:20;6820:30;6847:2;6820:26;:30::i;:::-;6780:70;;-1:-1:-1;6780:70:18;-1:-1:-1;;;;;;6868:19:18;;6860:46;;;;;-1:-1:-1;;;6860:46:18;;;;;;;;;;;;-1:-1:-1;;;6860:46:18;;;;;;;;;;;;;;;6920:15;6916:115;;;-1:-1:-1;;;6958:14:18;;;;:10;:14;;;;;;-1:-1:-1;;;;;6958:14:18;6951:21;;6916:115;7018:1;7003:17;;;;;;6107:434;6173:13;6189:12;6198:2;6189:8;:12::i;:::-;6173:28;-1:-1:-1;;;;;;6350:19:18;;6359:10;6350:19;;:102;;-1:-1:-1;;;;;;6417:23:18;;;;;;:16;:23;;;;;;;;6441:10;6417:35;;;;;;;;;;6350:102;6329:163;;;;;-1:-1:-1;;;6329:163:18;;;;;;;;;;;;-1:-1:-1;;;6329:163:18;;;;;;;;;;;;;;;6502:32;6514:5;6521:8;6531:2;6502:11;:32::i;:::-;6107:434;;;:::o;10582:90::-;10654:7;;-1:-1:-1;;10654:11:18;10582:90;:::o;7234:124::-;7313:38;7327:4;7333:2;7337;7341:5;7313:38;;;;;;;;;;;;:13;:38::i;5641:277::-;-1:-1:-1;;;;;5764:20:18;;5756:45;;;;;-1:-1:-1;;;5756:45:18;;;;;;;;;;;;-1:-1:-1;;;5756:45:18;;;;;;;;;;;;;;;5819:30;5842:6;5819:22;:30::i;:::-;5811:57;;;;;-1:-1:-1;;;5811:57:18;;;;;;;;;;;;-1:-1:-1;;;5811:57:18;;;;;;;;;;;;;;;5878:33;5890:6;5898:8;5908:2;5878:11;:33::i;10791:143::-;-1:-1:-1;;;;;10899:21:18;;10873:7;10899:21;;;:14;:21;;;;;:28;;10921:5;;10899:28;;;;;;;;;;;;;;10892:35;;10791:143;;;;:::o;8019:124::-;8102:34;8119:4;8125:2;8129;8102:34;;;;;;;;;;;;:16;:34::i;10677:109::-;10756:23;;;-1:-1:-1;;;10756:23:18;;;;;;;;;;;;-1:-1:-1;;;10756:23:18;;;;;;10737:7;;10756:23;;;;;;;4587:166;4639:13;4672:12;4681:2;4672:8;:12::i;:::-;4664:20;-1:-1:-1;;;;;;4702:19:18;;4694:52;;;;;-1:-1:-1;;;4694:52:18;;;;;;;;;;;;-1:-1:-1;;;4694:52:18;;;;;;;;;;;;;;1565:309;1668:7;:9;;;;;;;;;-1:-1:-1;;;;;1703:18:18;;1655:10;1703:18;;;:14;:18;;;;;;;;:25;;23:18:-1;;;45:23;;1738:27:18;;;;;;;;;;;1775:18;;;;;;;;;;-1:-1:-1;;;1810:14:18;;1796:28;;1775:49;;1839:28;1668:9;;1703:25;1668:9;;1703:18;1655:10;1839:28;;1655:10;;1839:28;1565:309;;;:::o;3450:181::-;3507:7;-1:-1:-1;;;;;3534:19:18;;3526:53;;;;;-1:-1:-1;;;3526:53:18;;;;;;;;;;;;-1:-1:-1;;;3526:53:18;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3596:21:18;;;;;:14;:21;;;;;:28;;3450:181::o;1150:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9400:164::-;9507:50;9526:10;9538:8;9548;9507:18;:50::i;:::-;9400:164;;:::o;7634:146::-;7734:39;7748:4;7754:2;7758;7762:4;7768;7734:13;:39::i;:::-;7634:146;;;;:::o;1225:46::-;;;;;;;;;;;;-1:-1:-1;;;;;1225:46:18;;:::o;10034:184::-;-1:-1:-1;;;;;10178:23:18;;;10140:15;10178:23;;;:16;:23;;;;;;;;:33;;;;;;;;;;;;;;;10034:184::o;8847:329::-;-1:-1:-1;;;;;8983:20:18;;8975:45;;;;;-1:-1:-1;;;8975:45:18;;;;;;;;;;;;-1:-1:-1;;;8975:45:18;;;;;;;;;;;;;;;9051:21;9065:6;9051:13;:21::i;:::-;9030:82;;;;;-1:-1:-1;;;9030:82:18;;;;;;;;;;;;-1:-1:-1;;;9030:82:18;;;;;;;;;;;;;;;9123:46;9142:6;9150:8;9160;9123:18;:46::i;3841:237::-;3912:13;3974:18;;;:14;:18;;;;;;;;;;-1:-1:-1;;;4052:13:18;;4051:20;;;;3841:237::o;3638:197::-;3691:18;3742;;;:14;:18;;;;;;-1:-1:-1;;;;;3779:24:18;;3771:57;;;;;-1:-1:-1;;;3771:57:18;;;;;;;;;;;;-1:-1:-1;;;3771:57:18;;;;;;;;;;;;;;4759:640;4846:13;4861;4876:20;4900:35;4932:2;4900:31;:35::i;:::-;4845:90;;-1:-1:-1;4845:90:18;-1:-1:-1;4845:90:18;-1:-1:-1;;;;;;4953:19:18;;4945:46;;;;;-1:-1:-1;;;4945:46:18;;;;;;;;;;;;-1:-1:-1;;;4945:46:18;;;;;;;;;;;;;;;5018:6;-1:-1:-1;;;;;5009:15:18;:5;-1:-1:-1;;;;;5009:15:18;;5001:37;;;;;-1:-1:-1;;;5001:37:18;;;;;;;;;;;;-1:-1:-1;;;5001:37:18;;;;;;;;;;;;;;;-1:-1:-1;;;;;5051:22:18;;5048:301;;5089:18;;;;:14;:18;;;;;-1:-1:-1;;;;;5110:14:18;;-1:-1:-1;;;5127:14:18;;5110:31;5089:52;;5048:301;;;5238:18;;;;:14;:18;;;;;;;;-1:-1:-1;;;5276:14:18;;-1:-1:-1;;;;;5259:14:18;;;:31;;;;-1:-1:-1;;;5259:40:18;5238:61;;;5313:10;:14;;;;;;:25;;-1:-1:-1;;;;;;5313:25:18;;;;;;;;;;5048:301;5389:2;5379:8;-1:-1:-1;;;;;5363:29:18;5372:5;-1:-1:-1;;;;;5363:29:18;;;;;;;;;;;4759:640;;;;;;:::o;1880:1382::-;1991:13;2006;2021:20;2045:35;2077:2;2045:31;:35::i;:::-;1990:90;;-1:-1:-1;1990:90:18;-1:-1:-1;1990:90:18;-1:-1:-1;;;;;;2098:19:18;;2090:46;;;;;-1:-1:-1;;;2090:46:18;;;;;;;;;;;;-1:-1:-1;;;2090:46:18;;;;;;;;;;;;;;;2163:4;-1:-1:-1;;;;;2154:13:18;:5;-1:-1:-1;;;;;2154:13:18;;2146:35;;;;;-1:-1:-1;;;2146:35:18;;;;;;;;;;;;-1:-1:-1;;;2146:35:18;;;;;;;;;;;;;;;-1:-1:-1;;;;;2199:16:18;;2191:41;;;;;-1:-1:-1;;;2191:41:18;;;;;;;;;;;;-1:-1:-1;;;2191:41:18;;;;;;;;;;;;;;;2242:11;2256:10;:8;:10::i;:::-;2242:24;-1:-1:-1;2280:10:18;-1:-1:-1;;;;;2280:18:18;;;;;;:29;;;2303:6;2302:7;2280:29;2276:236;;;-1:-1:-1;;;;;2350:22:18;;;;;;:16;:22;;;;;;;;2373:10;2350:34;;;;;;;;;;;:103;;;2405:15;:47;;;;-1:-1:-1;2424:14:18;;;;:10;:14;;;;;;-1:-1:-1;;;;;2424:14:18;2442:10;2424:28;2405:47;2325:176;;;;;-1:-1:-1;;;2325:176:18;;;;;;;;;;;;-1:-1:-1;;;2325:176:18;;;;;;;;;;;;;;;-1:-1:-1;;;;;2543:20:18;;2522:18;2543:20;;;:14;:20;;;;;2564:27;;-1:-1:-1;;2564:29:18;;;2543:51;;;;;;;;;;;;;;2522:72;;2655:14;:20;2670:4;-1:-1:-1;;;;;2655:20:18;-1:-1:-1;;;;;2655:20:18;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;;;;;;;2701:10;2695:2;:16;2691:160;;-1:-1:-1;;;;;2727:20:18;;;;;;:14;:20;;;;;:27;;2757:10;;2727:20;2748:5;;2727:27;;;;;;;;;;;;;;;;;:40;;;;2781:26;;;:14;:26;;;;;;-1:-1:-1;;;;;2810:13:18;;-1:-1:-1;;;2826:14:18;;2810:30;2781:59;;2691:160;-1:-1:-1;;;;;2880:18:18;;;2861:16;2880:18;;;:14;:18;;;;;;;;:25;;39:1:-1;23:18;;;45:23;;2915:27:18;;;;;;;;;;;2952:18;;;;;;;;-1:-1:-1;;;2987:17:18;;2973:31;;2952:52;;3019:22;2880:25;;2939:2;;2880:18;3019:22;;;;;;2861:16;3019:22;3055:4;:23;;;;;3063:15;:2;-1:-1:-1;;;;;3063:13:18;;:15::i;:::-;3051:205;;;3119:70;3142:6;:26;;3158:10;3142:26;;;3151:4;3142:26;3170:4;3176:2;3180;3184:4;3119:22;:70::i;:::-;3094:151;;;;;-1:-1:-1;;;3094:151:18;;;;;;;;;;;;-1:-1:-1;;;3094:151:18;;;;;;;;;;;;;;;1880:1382;;;;;;;;;;;:::o;1408:151::-;1472:4;1495:19;1509:4;1495:13;:19::i;:::-;:57;;;-1:-1:-1;;;;;;;1518:22:18;;;;;:16;:22;;;;;;;;1541:10;1518:34;;;;;;;;;;;1408:151::o;9571:235::-;-1:-1:-1;;;;;9697:24:18;;;;;;;:16;:24;;;;;;;;:34;;;;;;;;;;;;;:45;;-1:-1:-1;;9697:45:18;;;;;;;;;;9757:42;;;;;;;;;;;;;;;;;9571:235;;;:::o;304:121:0:-;363:4;386:10;-1:-1:-1;;;;;386:18:0;;;;:32;;;408:10;:8;:10::i;4084:357:18:-;4160:13;4237:18;;;:14;:18;;;;;;;;;;-1:-1:-1;;;;;;;;4305:71:18;;4304:82;;-1:-1:-1;;;4415:13:18;;4414:20;;4084:357::o;431:102:0:-;473:4;510:16;-1:-1:-1;;;;;510:16:0;496:10;:30;;431:102::o;195:451:12:-;252:4;350:66;552:17;;596:15;;;;;:42;;;627:11;615:8;:23;;596:42;588:51;195:451;-1:-1:-1;;;;195:451:12:o;10224:299:18:-;10363:4;10383:13;10419:2;-1:-1:-1;;;;;10399:40:18;;10440:8;10450:4;10456:7;10465:5;10399:72;;;;;;;;;;;;;-1:-1:-1;;;;;10399:72:18;-1:-1:-1;;;;;10399:72:18;;;;;;-1:-1:-1;;;;;10399:72:18;-1:-1:-1;;;;;10399:72:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10399:72:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10399:72:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10399:72:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10399:72:18;-1:-1:-1;;;;;;10489:26:18;-1:-1:-1;;;10489:26:18;;-1:-1:-1;;10224:299:18;;;;;;;:::o"
          },
          "methodIdentifiers": {
            "_operators(uint256)": "b9b710e9",
            "_operatorsForAll(address,address)": "9d786bbc",
            "approve(address,uint256)": "095ea7b3",
            "approveFor(address,address,uint256)": "2b991746",
            "balanceOf(address)": "70a08231",
            "getApproved(uint256)": "081812fc",
            "isApprovedForAll(address,address)": "e985e9c5",
            "mint(address)": "6a627842",
            "ownerOf(uint256)": "6352211e",
            "safeTransferFrom(address,address,uint256)": "42842e0e",
            "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
            "setApprovalForAll(address,bool)": "a22cb465",
            "setApprovalForAllFor(address,address,bool)": "eeb5a5d1",
            "supportsInterface(bytes4)": "01ffc9a7",
            "tokenByIndex(uint256)": "4f6ccce7",
            "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
            "totalSupply()": "18160ddd",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTxProcessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_operators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_operatorsForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAllFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"id\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"params\":{\"id\":\"The id of the token\",\"operator\":\"The address receiving the approval\"}},\"approveFor(address,address,uint256)\":{\"params\":{\"id\":\"The id of the token\",\"operator\":\"The address receiving the approval\",\"sender\":\"The address giving the approval\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address to look for\"},\"returns\":{\"_0\":\"The number of Land token owned by the address\"}},\"getApproved(uint256)\":{\"params\":{\"id\":\"The id of the token\"},\"returns\":{\"_0\":\"The address of the operator\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"operator\":\"The address of the operator\",\"owner\":\"The address of the owner\"},\"returns\":{\"isOperator\":\"The status of the approval\"}},\"ownerOf(uint256)\":{\"params\":{\"id\":\"The id of the Land\"},\"returns\":{\"owner\":\"The address of the owner\"}},\"safeTransferFrom(address,address,uint256)\":{\"params\":{\"from\":\"The send of the token\",\"id\":\"The id of the token\",\"to\":\"The recipient of the token\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"params\":{\"data\":\"Additional data\",\"from\":\"The sender of the token\",\"id\":\"The id of the token\",\"to\":\"The recipient of the token\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"The determination of the approval\",\"operator\":\"The address receiving the approval\"}},\"setApprovalForAllFor(address,address,bool)\":{\"params\":{\"approved\":\"The determination of the approval\",\"operator\":\"The address receiving the approval\",\"sender\":\"The address giving the approval\"}},\"supportsInterface(bytes4)\":{\"params\":{\"id\":\"The id of the interface\"},\"returns\":{\"_0\":\"True if the interface is supported\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"from\":\"The sender of the token\",\"id\":\"The id of the token\",\"to\":\"The recipient of the token\"}}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Approve an operator to spend tokens on the sender behalf\"},\"approveFor(address,address,uint256)\":{\"notice\":\"Approve an operator to spend tokens on the sender behalf\"},\"balanceOf(address)\":{\"notice\":\"Return the number of Land owned by an address\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved operator for a specific token\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Check if the sender approved the operator\"},\"ownerOf(uint256)\":{\"notice\":\"Return the owner of a Land\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfer a token between 2 addresses letting the receiver knows of the transfer\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfer a token between 2 addresses letting the receiver knows of the transfer\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Set the approval for an operator to manage all the tokens of the sender\"},\"setApprovalForAllFor(address,address,bool)\":{\"notice\":\"Set the approval for an operator to manage all the tokens of the sender\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check if the contract supports an interface 0x01ffc9a7 is ERC-165 0x80ac58cd is ERC-721 0x780e9d63 is ERC-721 Enumerable Extension\"},\"totalSupply()\":{\"notice\":\"//////////// erc721 ENUMERABLE //////////////\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer a token between 2 addresses\"}}}},\"settings\":{\"compilationTarget\":{\"src/Test/Numbers.sol\":\"Numbers\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/EIP1776MetaTxReceiverBase.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\ncontract EIP1776MetaTxReceiverBase {\\n\\n    address private _metaTxProcessor;\\n    constructor(address metaTxProcessor) internal {\\n        _metaTxProcessor = metaTxProcessor;\\n    }\\n\\n    ///@dev the from need to be equal to the first parameter of the function using that modifier\\n    function isValidSender(address from) internal view returns(bool) {\\n        return msg.sender == from || isMetaTx();\\n    }\\n\\n    function isMetaTx() internal view returns(bool) {\\n        return msg.sender == _metaTxProcessor;\\n    }\\n}\\n\",\"keccak256\":\"0x4d36cc539b5ec0fc2dec57a981af90afc8212e2c7bb2a8273e6fb508b0f92d32\"},\"src/Interfaces/ERC165.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC165\\n * @dev https://eips.ethereum.org/EIPS/eip-165\\n */\\ninterface ERC165 {\\n    /**\\n   * @notice Query if a contract implements interface `interfaceId`\\n   * @param interfaceId The interface identifier, as specified in ERC-165\\n   * @dev Interface identification is specified in ERC-165. This function\\n   * uses less than 30,000 gas.\\n   */\\n    function supportsInterface(bytes4 interfaceId)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xc0faa36cba688ce34574fdab3aaae02fc8255999ceec19998d4c22065a1754f8\"},\"src/Interfaces/ERC721.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nimport \\\"./ERC165.sol\\\";\\n\\ninterface ERC721 /*is ERC165*/ { // Interfaces still cannot inherit :(\\n    event Transfer(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 indexed _tokenId\\n    );\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _approved,\\n        uint256 indexed _tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed _owner,\\n        address indexed _operator,\\n        bool _approved\\n    );\\n\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n    \\n    function approve(address to, uint256 tokenId) external;\\n    function getApproved(uint256 tokenId)\\n        external\\n        view\\n        returns (address operator);\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 tokenId)\\n        external;\\n    function safeTransferFrom(address from, address to, uint256 tokenId)\\n        external;\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6796e307cbd33d1d26c0861a2c8c775570db0482cbbd1b66541b2a1af6a9623e\"},\"src/Interfaces/ERC721Enumerable.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n///  Note: the ERC-165 identifier for this interface is 0x780e9d63.\\ninterface ERC721Enumerable /* is ERC721 */ {\\n    /// @notice Count NFTs tracked by this contract\\n    /// @return A count of valid NFTs tracked by this contract, where each one of\\n    ///  them has an assigned and queryable owner not equal to the zero address\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Enumerate valid NFTs\\n    /// @dev Throws if `_index` >= `totalSupply()`.\\n    /// @param _index A counter less than `totalSupply()`\\n    /// @return The token identifier for the `_index`th NFT,\\n    ///  (sort order not specified)\\n    function tokenByIndex(uint256 _index) external view returns (uint256);\\n\\n    /// @notice Enumerate NFTs assigned to an owner\\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\\n    ///  `_owner` is the zero address, representing invalid NFTs.\\n    /// @param _owner An address where we are interested in NFTs owned by them\\n    /// @param _index A counter less than `balanceOf(_owner)`\\n    /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\\n    ///   (sort order not specified)\\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\\n}\",\"keccak256\":\"0xdd15c10b403e5bb1d1f86c403ee9d589d51a1d07193def74c71eece7696a3f71\"},\"src/Interfaces/ERC721TokenReceiver.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x1e7dcf369cd4048ef656ea016905f9ab78956d4ab88ddd9fc941e72128bb0c72\"},\"src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0xeac7dc828dbde8ad86c624d39dca24f7f66c3986958d8a71cd69a6aa9b5ed679\"},\"src/Test/Numbers.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../Libraries/AddressUtils.sol\\\";\\nimport \\\"../Interfaces/ERC721TokenReceiver.sol\\\";\\nimport \\\"../Interfaces/ERC721.sol\\\";\\nimport \\\"../Interfaces/ERC721Enumerable.sol\\\";\\n\\nimport \\\"../EIP1776MetaTxReceiverBase.sol\\\";\\n\\ncontract Numbers is /*ERC721, ERC721Enumerable,*/ EIP1776MetaTxReceiverBase { // interface seems to require overrides :(\\n\\n    //////////////////////////// ERC721 Events /////////////\\n    event Transfer(\\n        address indexed from,\\n        address indexed to,\\n        uint256 indexed tokenId\\n    );\\n    event Approval(\\n        address indexed owner,\\n        address indexed approved,\\n        uint256 indexed tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n    /////////////////////////////////////////////////////////\\n\\n\\n    using AddressUtils for address;\\n\\n    bytes4 internal constant _ERC721_RECEIVED = 0x150b7a02;\\n\\n    bytes4 internal constant ERC165ID = 0x01ffc9a7;\\n\\n    mapping(uint256 => uint256) _ownerAndIndex; // max 2**96 items, store both owner and item index\\n    mapping(address => uint256[]) _itemsPerOwner;\\n    mapping (address => mapping(address => bool)) public _operatorsForAll;\\n    mapping (uint256 => address) public _operators;\\n\\n    uint256 internal _nextId = 1;\\n\\n    constructor(address metaTxProcessor) public EIP1776MetaTxReceiverBase(metaTxProcessor) {}\\n\\n    function isValidApproveOperator(address from) internal returns (bool) {\\n        return isValidSender(from) || _operatorsForAll[from][msg.sender];\\n    }\\n\\n    function mint(address to) external {\\n        // TODO only specified minter can do\\n        uint256 id = _nextId++;\\n        uint256 index = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + index * 2**160;\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _transferFrom(address from, address to, uint256 id, bool safe, bytes memory data) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == from, \\\"NOT_OWNER\\\");\\n        require(to != address(0), \\\"ZERO_ADDRESS\\\");\\n        bool isMeta = isMetaTx();\\n        if (msg.sender != from && !isMeta) {\\n            require(\\n                _operatorsForAll[from][msg.sender] ||\\n                (operatorEnabled && _operators[id] == msg.sender),\\n                \\\"NOT_AUTHORIZED\\\"\\n            );\\n        }\\n\\n        uint256 lastItemId = _itemsPerOwner[from][_itemsPerOwner[from].length-1]; // TODO for silidity: should pop return the item ?\\n        _itemsPerOwner[from].pop();\\n        if (id != lastItemId) {\\n            _itemsPerOwner[from][index] = lastItemId;\\n            _ownerAndIndex[lastItemId] = uint256(from) + index * 2**160;\\n        }\\n\\n        uint256 newIndex = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + newIndex * 2**160;\\n        emit Transfer(from, to, id);\\n        if (safe && to.isContract()) {\\n            require(\\n                _checkOnERC721Received(isMeta ? from : msg.sender, from, to, id, data),\\n                \\\"ERC721_TRANSFER_FAILED\\\"\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice Return the number of Land owned by an address\\n     * @param owner The address to look for\\n     * @return The number of Land token owned by the address\\n     */\\n    function balanceOf(address owner) external view returns (uint256) {\\n        require(owner != address(0), \\\"owner is zero address\\\");\\n        return _itemsPerOwner[owner].length;\\n    }\\n\\n\\n    function _ownerOf(uint256 id) internal view returns (address tokenOwner) {\\n        tokenOwner = address(_ownerAndIndex[id]);\\n        require(tokenOwner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _ownerAndOperatorEnabledOf(uint256 id) internal view returns (address owner, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    function _ownerIndexAndOperatorEnabledOf(uint256 id) internal view returns (address owner, uint256 index, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        index = (data & 0xEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) / 2**160;\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    /**\\n     * @notice Return the owner of a Land\\n     * @param id The id of the Land\\n     * @return owner The address of the owner\\n     */\\n    function ownerOf(uint256 id) external view returns (address owner) {\\n        owner = _ownerOf(id);\\n        require(owner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _approveFor(address sender, address operator, uint256 id) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == sender, \\\"NOT_OWNER\\\");\\n        if(operator == address(0)) {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160; // no need to resset the operator, it will be overriden next time\\n        } else {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160 + 2**255;\\n            _operators[id] = operator;\\n        }\\n        emit Approval(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approveFor(\\n        address sender,\\n        address operator,\\n        uint256 id\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(isValidApproveOperator(sender), \\\"NOT_AUTHORIZED\\\");\\n        _approveFor(sender, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approve(address operator, uint256 id) external {\\n        address owner = _ownerOf(id);\\n        // NO META TX here as the first parameter is not the originator but the operator that is meant to be approved\\n        require(\\n            owner == msg.sender || // TODO remove duplicatre check\\n            _operatorsForAll[owner][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n        _approveFor(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Get the approved operator for a specific token\\n     * @param id The id of the token\\n     * @return The address of the operator\\n     */\\n    function getApproved(uint256 id) external view returns (address) {\\n        (address owner, bool operatorEnabled) = _ownerAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        if (operatorEnabled) {\\n            return _operators[id];\\n        } else {\\n            return address(0);\\n        }\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n    */\\n    function transferFrom(address from, address to, uint256 id) external {\\n        _transferFrom(from, to, id, false, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     * @param data Additional data\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, bytes memory data) public {\\n        _transferFrom(from, to, id, true, data);\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The send of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id) external {\\n        safeTransferFrom(from, to, id, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Check if the contract supports an interface\\n     * 0x01ffc9a7 is ERC-165\\n     * 0x80ac58cd is ERC-721\\n     * 0x780e9d63 is ERC-721 Enumerable Extension\\n     * @param id The id of the interface\\n     * @return True if the interface is supported\\n     */\\n    function supportsInterface(bytes4 id) external pure returns (bool) {\\n        return id == 0x01ffc9a7 || id == 0x80ac58cd || id == 0x780e9d63;\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAllFor(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(\\n            isValidSender(sender),\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        _setApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAll(address operator, bool approved) external {\\n\\n        // NOT META TX ...\\n        _setApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n\\n    function _setApprovalForAll(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) internal {\\n        _operatorsForAll[sender][operator] = approved;\\n        emit ApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Check if the sender approved the operator\\n     * @param owner The address of the owner\\n     * @param operator The address of the operator\\n     * @return isOperator The status of the approval\\n     */\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool isOperator)\\n    {\\n        return _operatorsForAll[owner][operator];\\n    }\\n\\n    function _checkOnERC721Received(address operator, address from, address to, uint256 tokenId, bytes memory _data)\\n        internal returns (bool)\\n    {\\n        bytes4 retval = ERC721TokenReceiver(to).onERC721Received(operator, from, tokenId, _data);\\n        return (retval == _ERC721_RECEIVED);\\n    }\\n\\n    /////////////// erc721 ENUMERABLE //////////////\\n    function totalSupply() external view returns (uint256) {\\n        return _nextId - 1;\\n    }\\n    function tokenByIndex(uint256 index) external view returns (uint256) {\\n        revert(\\\"NOT SUPPORTED\\\");\\n    }\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256) {\\n        return _itemsPerOwner[owner][index];\\n    }\\n}\\n\",\"keccak256\":\"0xbb39c793b52c65fbf25ee8368bdb63a01786857e1c8ac15506731053eec8e3b3\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "approve(address,uint256)": {
              "notice": "Approve an operator to spend tokens on the sender behalf"
            },
            "approveFor(address,address,uint256)": {
              "notice": "Approve an operator to spend tokens on the sender behalf"
            },
            "balanceOf(address)": {
              "notice": "Return the number of Land owned by an address"
            },
            "getApproved(uint256)": {
              "notice": "Get the approved operator for a specific token"
            },
            "isApprovedForAll(address,address)": {
              "notice": "Check if the sender approved the operator"
            },
            "ownerOf(uint256)": {
              "notice": "Return the owner of a Land"
            },
            "safeTransferFrom(address,address,uint256)": {
              "notice": "Transfer a token between 2 addresses letting the receiver knows of the transfer"
            },
            "safeTransferFrom(address,address,uint256,bytes)": {
              "notice": "Transfer a token between 2 addresses letting the receiver knows of the transfer"
            },
            "setApprovalForAll(address,bool)": {
              "notice": "Set the approval for an operator to manage all the tokens of the sender"
            },
            "setApprovalForAllFor(address,address,bool)": {
              "notice": "Set the approval for an operator to manage all the tokens of the sender"
            },
            "supportsInterface(bytes4)": {
              "notice": "Check if the contract supports an interface 0x01ffc9a7 is ERC-165 0x80ac58cd is ERC-721 0x780e9d63 is ERC-721 Enumerable Extension"
            },
            "totalSupply()": {
              "notice": "//////////// erc721 ENUMERABLE //////////////"
            },
            "transferFrom(address,address,uint256)": {
              "notice": "Transfer a token between 2 addresses"
            }
          }
        }
      },
      "args": [
        "0x172690708ea4Ca089088398d1118685CE798560a"
      ],
      "address": "0x8C64017cDD6B318f29610bB92AC9973eD1B85F44",
      "transactionHash": "0xe5b3af3c64a2f194c85d1bd36c9355982a33e39cb0f8fccbc1516c56491ba9b7"
    }
  },
  "5": {
    "DAI": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "supply",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "metaTxProcessor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "PERMIT_TYPEHASH",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approveFor",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "nonces",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "holder",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "nonce",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "expiry",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "allowed",
                "type": "bool"
              },
              {
                "internalType": "uint8",
                "name": "v",
                "type": "uint8"
              },
              {
                "internalType": "bytes32",
                "name": "r",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "s",
                "type": "bytes32"
              }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "version",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50604051610d8f380380610d8f8339818101604052604081101561003357600080fd5b508051602090910151600780546001600160a01b0319166001600160a01b0383161790556002829055604051806042610d4d8239604080519182900360420182208282018252600e83526d2230b49029ba30b13632b1b7b4b760911b6020938401528151808301835260018152603160f81b908401528151808401919091527f0b1461ddc0c1d5ded79a1db0f74dae949050a7c0b28728c724b24958c27a328b818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152306080808301919091528251808303909101815260a09091019091528051910120600055505050610c1a806101336000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633644e515116100975780638fcbaf0c116100665780638fcbaf0c146102bf57806395d89b411461031b578063a9059cbb14610323578063dd62ed3e1461034f576100f5565b80633644e5151461026357806354fd4d501461026b57806370a08231146102735780637ecebe0014610299576100f5565b806323b872dd116100d357806323b872dd146101d15780632b9917461461020757806330adf81f1461023d578063313ce56714610245576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b61010261037d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103a7565b604080519115158252519081900360200190f35b6101bf6103be565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b038135811691602081013590911690604001356103c4565b6101a36004803603606081101561021d57600080fd5b506001600160a01b038135811691602081013590911690604001356104b1565b6101bf610511565b61024d610535565b6040805160ff9092168252519081900360200190f35b6101bf61053a565b610102610540565b6101bf6004803603602081101561028957600080fd5b50356001600160a01b031661055d565b6101bf600480360360208110156102af57600080fd5b50356001600160a01b0316610574565b61031960048036036101008110156102d657600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e00135610586565b005b61010261087e565b6101a36004803603604081101561033957600080fd5b506001600160a01b03813516906020013561089d565b6101bf6004803603604081101561036557600080fd5b506001600160a01b03813581169160200135166108aa565b6040518060400160405280600e81526020016d2230b49029ba30b13632b1b7b4b760911b81525081565b60006103b433848461090b565b5060015b92915050565b60025490565b6000336001600160a01b038516148015906103ea57506007546001600160a01b03163314155b1561049c576001600160a01b0384166000908152600460209081526040808320338452909152902054600019811461049a5782811015610471576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600460209081526040808320338452909152902083820390555b505b6104a78484846109de565b5060019392505050565b6000336001600160a01b03851614610506576040805162461bcd60e51b815260206004820152601360248201527236b9b39739b2b73232b910109e9037bbb732b960691b604482015290519081900360640190fd5b6104a784848461090b565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b601290565b60005481565b604051806040016040528060018152602001603160f81b81525081565b600080600061056b84610b71565b95945050505050565b60016020526000908152604090205481565b600054604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020808301919091526001600160a01b03808d16838501819052908c166060840152608083018b905260a083018a905288151560c0808501919091528451808503909101815260e08401855280519083012061190160f01b61010085015261010284019590955261012280840195909552835180840390950185526101429092019092528251929091019190912090610686576040805162461bcd60e51b815260206004820152601560248201527404461692f696e76616c69642d616464726573732d3605c1b604482015290519081900360640190fd5b6040805160008152602080820180845284905260ff8716828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa1580156106dd573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610741576040805162461bcd60e51b815260206004820152601260248201527111185a4bda5b9d985b1a590b5c195c9b5a5d60721b604482015290519081900360640190fd5b85158061074e5750854211155b610794576040805162461bcd60e51b815260206004820152601260248201527111185a4bdc195c9b5a5d0b595e1c1a5c995960721b604482015290519081900360640190fd5b6001600160a01b03891660009081526001602081905260409091208054918201905587146107fd576040805162461bcd60e51b81526020600482015260116024820152704461692f696e76616c69642d6e6f6e636560781b604482015290519081900360640190fd5b60008561080b57600061080f565b6000195b6001600160a01b03808c166000818152600460209081526040808320948f168084529482529182902085905581518581529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a350505050505050505050565b6040518060400160405280600381526020016244414960e81b81525081565b60006103b43384846109de565b60006001600160a01b038216158015906108d157506007546001600160a01b038381169116145b156108df57506000196103b8565b506001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001600160a01b0383161580159061092b57506001600160a01b03821615155b61097c576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420617070726f7665207769746820307830000000000000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610a2e576040805162461bcd60e51b8152602060048201526012602482015271043616e6e6f742073656e6420746f203078360741b604482015290519081900360640190fd5b600080610a3a85610b71565b9150915082811015610a85576040805162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da08199d5b99608a1b604482015290519081900360640190fd5b81610ab65760058054820190556001600160a01b0385166000908152600660205260409020805460ff191660011790555b6001600160a01b03851660009081526003602052604090208382039055610adc84610b71565b909250905081610b125760058054820190556001600160a01b0384166000908152600660205260409020805460ff191660011790555b6001600160a01b0380851660008181526003602090815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b038116600090815260036020908152604080832054600690925282205460ff16158015610ba85750600254600554105b15610bda5760009150600554600254039050678ac7230489e80000811115610bd55750678ac7230489e800005b610bdf565b600191505b91509156fea2646970667358221220a0bf757f4cef41f5a863ecc297bf4782a80946e9ed200868db621f7effc4ecfc64736f6c63430006010033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e747261637429",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD8F CODESIZE SUB DUP1 PUSH2 0xD8F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x42 PUSH2 0xD4D DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x42 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xE DUP4 MSTORE PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB1461DDC0C1D5DED79A1DB0F74DAE949050A7C0B28728C724B24958C27A328B DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SSTORE POP POP POP PUSH2 0xC1A DUP1 PUSH2 0x133 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x8FCBAF0C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34F JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x299 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x245 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x169 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x511 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x53A JUMP JUMPDEST PUSH2 0x102 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x574 JUMP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3EA JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x49C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x49A JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x36B9B39739B2B73232B910109E9037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x56B DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0xC0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP5 ADD DUP6 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH2 0x122 DUP1 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH2 0x142 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x686 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4461692F696E76616C69642D616464726573732D3 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP5 SWAP1 MSTORE PUSH1 0xFF DUP8 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDA5B9D985B1A590B5C195C9B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0x74E JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x794 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDC195C9B5A5D0B595E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD SWAP1 SSTORE DUP8 EQ PUSH2 0x7FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4461692F696E76616C69642D6E6F6E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x80B JUMPI PUSH1 0x0 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x0 NOT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP16 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x444149 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8D1 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x8DF JUMPI POP PUSH1 0x0 NOT PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x92B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x97C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F7665207769746820307830000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E6E6F742073656E6420746F2030783 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3A DUP6 PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xA85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD08195B9BDD59DA08199D5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xAB6 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE PUSH2 0xADC DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xB12 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 DUP9 ADD SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD LT JUMPDEST ISZERO PUSH2 0xBDA JUMPI PUSH1 0x0 SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD SUB SWAP1 POP PUSH8 0x8AC7230489E80000 DUP2 GT ISZERO PUSH2 0xBD5 JUMPI POP PUSH8 0x8AC7230489E80000 JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xBF PUSH22 0x7F4CEF41F5A863ECC297BF4782A80946E9ED200868DB PUSH3 0x1F7EFF 0xC4 0xEC 0xFC PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C616464726573 PUSH20 0x20766572696679696E67436F6E74726163742900 ",
            "sourceMap": "59:10010:19:-:0;;;1353:397;8:9:-1;5:2;;;30:1;27;20:12;5:2;1353:397:19;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1353:397:19;;;;;;;1423:16;:34;;-1:-1:-1;;;;;;1423:34:19;-1:-1:-1;;;;;1423:34:19;;;;;1467:12;:21;;;1353:397;1551:79;;;;;;;;;;;;;;;;;1660:4;;;;;;;;-1:-1:-1;;;1660:4:19;;;;;1696:7;;;;;;;;;;-1:-1:-1;;;1696:7:19;;;;1527:215;;;;;;;;;1644:22;1527:215;;;;1680:25;1527:215;;;;1727:4;1527:215;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1527:215:19;;;;;;;1517:226;;;;;-1:-1:-1;1498:245:19;-1:-1:-1;;;59:10010:19;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80633644e515116100975780638fcbaf0c116100665780638fcbaf0c146102bf57806395d89b411461031b578063a9059cbb14610323578063dd62ed3e1461034f576100f5565b80633644e5151461026357806354fd4d501461026b57806370a08231146102735780637ecebe0014610299576100f5565b806323b872dd116100d357806323b872dd146101d15780632b9917461461020757806330adf81f1461023d578063313ce56714610245576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b61010261037d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103a7565b604080519115158252519081900360200190f35b6101bf6103be565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b038135811691602081013590911690604001356103c4565b6101a36004803603606081101561021d57600080fd5b506001600160a01b038135811691602081013590911690604001356104b1565b6101bf610511565b61024d610535565b6040805160ff9092168252519081900360200190f35b6101bf61053a565b610102610540565b6101bf6004803603602081101561028957600080fd5b50356001600160a01b031661055d565b6101bf600480360360208110156102af57600080fd5b50356001600160a01b0316610574565b61031960048036036101008110156102d657600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e00135610586565b005b61010261087e565b6101a36004803603604081101561033957600080fd5b506001600160a01b03813516906020013561089d565b6101bf6004803603604081101561036557600080fd5b506001600160a01b03813581169160200135166108aa565b6040518060400160405280600e81526020016d2230b49029ba30b13632b1b7b4b760911b81525081565b60006103b433848461090b565b5060015b92915050565b60025490565b6000336001600160a01b038516148015906103ea57506007546001600160a01b03163314155b1561049c576001600160a01b0384166000908152600460209081526040808320338452909152902054600019811461049a5782811015610471576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600460209081526040808320338452909152902083820390555b505b6104a78484846109de565b5060019392505050565b6000336001600160a01b03851614610506576040805162461bcd60e51b815260206004820152601360248201527236b9b39739b2b73232b910109e9037bbb732b960691b604482015290519081900360640190fd5b6104a784848461090b565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b601290565b60005481565b604051806040016040528060018152602001603160f81b81525081565b600080600061056b84610b71565b95945050505050565b60016020526000908152604090205481565b600054604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020808301919091526001600160a01b03808d16838501819052908c166060840152608083018b905260a083018a905288151560c0808501919091528451808503909101815260e08401855280519083012061190160f01b61010085015261010284019590955261012280840195909552835180840390950185526101429092019092528251929091019190912090610686576040805162461bcd60e51b815260206004820152601560248201527404461692f696e76616c69642d616464726573732d3605c1b604482015290519081900360640190fd5b6040805160008152602080820180845284905260ff8716828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa1580156106dd573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610741576040805162461bcd60e51b815260206004820152601260248201527111185a4bda5b9d985b1a590b5c195c9b5a5d60721b604482015290519081900360640190fd5b85158061074e5750854211155b610794576040805162461bcd60e51b815260206004820152601260248201527111185a4bdc195c9b5a5d0b595e1c1a5c995960721b604482015290519081900360640190fd5b6001600160a01b03891660009081526001602081905260409091208054918201905587146107fd576040805162461bcd60e51b81526020600482015260116024820152704461692f696e76616c69642d6e6f6e636560781b604482015290519081900360640190fd5b60008561080b57600061080f565b6000195b6001600160a01b03808c166000818152600460209081526040808320948f168084529482529182902085905581518581529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a350505050505050505050565b6040518060400160405280600381526020016244414960e81b81525081565b60006103b43384846109de565b60006001600160a01b038216158015906108d157506007546001600160a01b038381169116145b156108df57506000196103b8565b506001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001600160a01b0383161580159061092b57506001600160a01b03821615155b61097c576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420617070726f7665207769746820307830000000000000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610a2e576040805162461bcd60e51b8152602060048201526012602482015271043616e6e6f742073656e6420746f203078360741b604482015290519081900360640190fd5b600080610a3a85610b71565b9150915082811015610a85576040805162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da08199d5b99608a1b604482015290519081900360640190fd5b81610ab65760058054820190556001600160a01b0385166000908152600660205260409020805460ff191660011790555b6001600160a01b03851660009081526003602052604090208382039055610adc84610b71565b909250905081610b125760058054820190556001600160a01b0384166000908152600660205260409020805460ff191660011790555b6001600160a01b0380851660008181526003602090815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b038116600090815260036020908152604080832054600690925282205460ff16158015610ba85750600254600554105b15610bda5760009150600554600254039050678ac7230489e80000811115610bd55750678ac7230489e800005b610bdf565b600191505b91509156fea2646970667358221220a0bf757f4cef41f5a863ecc297bf4782a80946e9ed200868db621f7effc4ecfc64736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x8FCBAF0C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34F JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x299 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x245 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x169 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x511 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x53A JUMP JUMPDEST PUSH2 0x102 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x574 JUMP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3EA JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x49C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x49A JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x36B9B39739B2B73232B910109E9037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x56B DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0xC0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP5 ADD DUP6 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH2 0x122 DUP1 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH2 0x142 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x686 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4461692F696E76616C69642D616464726573732D3 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP5 SWAP1 MSTORE PUSH1 0xFF DUP8 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDA5B9D985B1A590B5C195C9B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0x74E JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x794 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDC195C9B5A5D0B595E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD SWAP1 SSTORE DUP8 EQ PUSH2 0x7FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4461692F696E76616C69642D6E6F6E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x80B JUMPI PUSH1 0x0 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x0 NOT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP16 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x444149 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8D1 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x8DF JUMPI POP PUSH1 0x0 NOT PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x92B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x97C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F7665207769746820307830000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E6E6F742073656E6420746F2030783 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3A DUP6 PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xA85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD08195B9BDD59DA08199D5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xAB6 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE PUSH2 0xADC DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xB12 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 DUP9 ADD SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD LT JUMPDEST ISZERO PUSH2 0xBDA JUMPI PUSH1 0x0 SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD SUB SWAP1 POP PUSH8 0x8AC7230489E80000 DUP2 GT ISZERO PUSH2 0xBD5 JUMPI POP PUSH8 0x8AC7230489E80000 JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xBF PUSH22 0x7F4CEF41F5A863ECC297BF4782A80946E9ED200868DB PUSH3 0x1F7EFF 0xC4 0xEC 0xFC PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "59:10010:19:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59:10010:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;523:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;523:51:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5741:178;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5741:178:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1875:89;;;:::i;:::-;;;;;;;;;;;;;;;;4229:672;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4229:672:19;;;;;;;;;;;;;;;;;:::i;6211:286::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6211:286:19;;;;;;;;;;;;;;;;;:::i;361:108::-;;;:::i;3476:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;166:45;;;:::i;626:38::-;;;:::i;2605:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2605:150:19;-1:-1:-1;;;;;2605:150:19;;:::i;475:42::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;475:42:19;-1:-1:-1;;;;;475:42:19;;:::i;9074:993::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;9074:993:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;580:40;;;:::i;3775:167::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3775:167:19;;;;;;;;:::i;3033:334::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3033:334:19;;;;;;;;;;:::i;523:51::-;;;;;;;;;;;;;;-1:-1:-1;;;523:51:19;;;;:::o;5741:178::-;5823:12;5851:40;5863:10;5875:7;5884:6;5851:11;:40::i;:::-;-1:-1:-1;5908:4:19;5741:178;;;;;:::o;1875:89::-;1945:12;;1875:89;:::o;4229:672::-;4325:12;4357:10;-1:-1:-1;;;;;4357:18:19;;;;;;:52;;-1:-1:-1;4393:16:19;;-1:-1:-1;;;;;4393:16:19;4379:10;:30;;4357:52;4353:484;;;-1:-1:-1;;;;;4452:17:19;;4425:24;4452:17;;;:11;:17;;;;;;;;4470:10;4452:29;;;;;;;;-1:-1:-1;;4499:32:19;;4495:332;;4702:6;4682:16;:26;;4674:63;;;;;-1:-1:-1;;;4674:63:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4755:17:19;;;;;;:11;:17;;;;;;;;4773:10;4755:29;;;;;;;4787:25;;;4755:57;;4495:332;4353:484;;4846:27;4856:4;4862:2;4866:6;4846:9;:27::i;:::-;-1:-1:-1;4890:4:19;4229:672;;;;;:::o;6211:286::-;6311:12;6360:10;-1:-1:-1;;;;;6360:19:19;;;6339:85;;;;;-1:-1:-1;;;6339:85:19;;;;;;;;;;;;-1:-1:-1;;;6339:85:19;;;;;;;;;;;;;;;6434:35;6446:5;6453:7;6462:6;6434:11;:35::i;361:108::-;403:66;361:108;:::o;3476:81::-;3547:2;3476:81;:::o;166:45::-;;;;:::o;626:38::-;;;;;;;;;;;;;;-1:-1:-1;;;626:38:19;;;;:::o;2605:150::-;2660:7;2680:6;2688:15;2707:17;2718:5;2707:10;:17::i;:::-;2679:45;2605:150;-1:-1:-1;;;;;2605:150:19:o;475:42::-;;;;;;;;;;;;;:::o;9074:993::-;9242:14;9343:16;9387:253;;;403:66;9387:253;;;;;;;;-1:-1:-1;;;;;9387:253:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9387:253:19;;;;;9377:264;;;;;;-1:-1:-1;;;9281:370:19;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9281:370:19;;;;;;;9271:381;;;;;;;;;;;9663:54;;;;;-1:-1:-1;;;9663:54:19;;;;;;;;;;;;-1:-1:-1;;;9663:54:19;;;;;;;;;;;;;;;9745:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9745:26:19;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9745:26:19;;;;;;;;-1:-1:-1;;;;;9735:36:19;:6;-1:-1:-1;;;;;9735:36:19;;9727:67;;;;;-1:-1:-1;;;9727:67:19;;;;;;;;;;;;-1:-1:-1;;;9727:67:19;;;;;;;;;;;;;;;9812:11;;;:28;;;9834:6;9827:3;:13;;9812:28;9804:59;;;;;-1:-1:-1;;;9804:59:19;;;;;;;;;;;;-1:-1:-1;;;9804:59:19;;;;;;;;;;;;;;;-1:-1:-1;;;;;9890:14:19;;;;;;:6;:14;;;;;;;;:16;;;;;;;9881:25;;9873:55;;;;;-1:-1:-1;;;9873:55:19;;;;;;;;;;;;-1:-1:-1;;;9873:55:19;;;;;;;;;;;;;;;9938:8;9949:7;:22;;9970:1;9949:22;;;-1:-1:-1;;9949:22:19;-1:-1:-1;;;;;9981:19:19;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:34;;;10030:30;;;;;;;9938:33;;-1:-1:-1;9981:28:19;;:19;;10030:30;;;;;;;;;9074:993;;;;;;;;;;:::o;580:40::-;;;;;;;;;;;;;;-1:-1:-1;;;580:40:19;;;;:::o;3775:167::-;3853:12;3881:33;3891:10;3903:2;3907:6;3881:9;:33::i;3033:334::-;3129:17;-1:-1:-1;;;;;3165:21:19;;;;;;:52;;-1:-1:-1;3201:16:19;;-1:-1:-1;;;;;3190:27:19;;;3201:16;;3190:27;3165:52;3162:155;;;-1:-1:-1;;;3233:73:19;;3162:155;-1:-1:-1;;;;;;3333:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3033:334::o;6504:314::-;-1:-1:-1;;;;;6625:19:19;;;;;;:44;;-1:-1:-1;;;;;;6648:21:19;;;;6625:44;6604:114;;;;;-1:-1:-1;;;6604:114:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6728:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;6779:32;;;;;;;;;;;;;;;;;6504:314;;;:::o;6824:781::-;-1:-1:-1;;;;;6912:16:19;;6904:47;;;;;-1:-1:-1;;;6904:47:19;;;;;;;;;;;;-1:-1:-1;;;6904:47:19;;;;;;;;;;;;;;;6962:12;6976:22;7002:16;7013:4;7002:10;:16::i;:::-;6961:57;;;;7054:6;7036:14;:24;;7028:52;;;;;-1:-1:-1;;;7028:52:19;;;;;;;;;;;;-1:-1:-1;;;7028:52:19;;;;;;;;;;;;;;;7095:7;7090:154;;7118:14;:32;;;;;;-1:-1:-1;;;;;7164:14:19;;7118;7164;;;:8;:14;;;;;:21;;-1:-1:-1;;7164:21:19;-1:-1:-1;7164:21:19;;;7090:154;-1:-1:-1;;;;;7253:15:19;;;;;;:9;:15;;;;;7271:23;;;7253:41;;7333:14;7344:2;7333:10;:14::i;:::-;7305:42;;-1:-1:-1;7305:42:19;-1:-1:-1;7305:42:19;7357:152;;7385:14;:32;;;;;;-1:-1:-1;;;;;7431:12:19;;7385:14;7431:12;;;:8;:12;;;;;:19;;-1:-1:-1;;7431:19:19;-1:-1:-1;7431:19:19;;;7357:152;-1:-1:-1;;;;;7518:13:19;;;;;;;:9;:13;;;;;;;;;7534:23;;;7518:39;;7572:26;;;;;;;7518:13;;7572:26;;;;;;;;;;;;;6824:781;;;;;:::o;2005:446::-;-1:-1:-1;;;;;2114:16:19;;2063:12;2114:16;;;:9;:16;;;;;;;;;2145:8;:15;;;;;;;;2144:16;:49;;;;;2181:12;;2164:14;;:29;2144:49;2140:305;;;2219:5;2209:15;;2263:14;;2248:12;;:29;2238:39;;2305:20;2295:7;:30;2291:99;;;-1:-1:-1;2355:20:19;2291:99;2140:305;;;2430:4;2420:14;;2140:305;2005:446;;;:::o"
          },
          "methodIdentifiers": {
            "DOMAIN_SEPARATOR()": "3644e515",
            "PERMIT_TYPEHASH()": "30adf81f",
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "approveFor(address,address,uint256)": "2b991746",
            "balanceOf(address)": "70a08231",
            "decimals()": "313ce567",
            "name()": "06fdde03",
            "nonces(address)": "7ecebe00",
            "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "version()": "54fd4d50"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"metaTxProcessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"address whose token is allowed.\",\"spender\":\"address allowed to transfer.\"},\"returns\":{\"remaining\":\"the amount of token `spender` is allowed to transfer on behalf of `owner`.\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"the number of tokens allowed.\",\"spender\":\"address to be given rights to transfer.\"},\"returns\":{\"success\":\"true if success.\"}},\"approveFor(address,address,uint256)\":{\"params\":{\"amount\":\"the number of tokens allowed.\",\"owner\":\"address whose token is allowed.\",\"spender\":\"address to be given rights to transfer.\"},\"returns\":{\"success\":\"true if success.\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address to query the balance of.\"},\"returns\":{\"_0\":\"The amount owned by `owner`.\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"the number of tokens transfered.\",\"to\":\"the recipient address of the tokens transfered.\"},\"returns\":{\"success\":\"true if success.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"the number of tokens transfered.\",\"from\":\"whose token it is transferring from.\",\"to\":\"the recipient address of the tokens transfered.\"},\"returns\":{\"success\":\"true if success.\"}}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"gets allowance of `spender` for `owner`'s tokens.\"},\"approve(address,uint256)\":{\"notice\":\"approve `spender` to transfer `amount` tokens.\"},\"approveFor(address,address,uint256)\":{\"notice\":\"approve `spender` to transfer `amount` tokens from `owner`.\"},\"balanceOf(address)\":{\"notice\":\"Gets the balance of `owner`.\"},\"decimals()\":{\"notice\":\"returns the number of decimals for that token.\"},\"totalSupply()\":{\"notice\":\"Gets the total number of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `from` to `to`.\"}}}},\"settings\":{\"compilationTarget\":{\"src/Test/PAW.sol\":\"PAW\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Test/PAW.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../Interfaces/ERC20.sol\\\";\\n\\ncontract PAW /*is ERC20*/{ // interface seems to require overrides :(\\n\\n     // --- EIP712 niceties ---\\n    bytes32 public /*immutable*/ DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\\n    mapping (address => uint256) public nonces;\\n    string  public constant name     = \\\"Dai Stablecoin\\\";\\n    string  public constant symbol   = \\\"DAI\\\";\\n    string  public constant version  = \\\"1\\\";\\n\\n    ///////////////// EVENTS FOR ERC20 ////////////////\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    ///////////////////////////////////////////////////\\n\\n    uint256 internal /*immutable*/ _totalSupply;\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => uint256)) internal _allowances;\\n\\n    uint256 internal _supplyClaimed;\\n    mapping(address => bool) internal _claimed; // TODO optimize it by storing it in the same slot as _balances\\n    address internal /*immutable*/ _metaTxProcessor;\\n\\n    constructor(uint256 supply, address metaTxProcessor) public {\\n        _metaTxProcessor = metaTxProcessor;\\n        _totalSupply = supply;\\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\\n            keccak256(\\\"EIP712Domain(string name,string version,address verifyingContract)\\\"),\\n            keccak256(bytes(name)),\\n            keccak256(bytes(version)),\\n            address(this)\\n        ));\\n    }\\n\\n    /// @notice Gets the total number of tokens in existence.\\n    /// @return the total number of tokens in existence.\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    // function hasClaimed() TODO\\n\\n    function _balanceOf(address owner) internal view returns (bool claimed, uint256 balance) {\\n        balance = _balances[owner];\\n        if (!_claimed[owner] && _supplyClaimed < _totalSupply) {\\n            claimed = false;\\n            balance = _totalSupply - _supplyClaimed;\\n            if (balance > 10000000000000000000) {\\n                balance = 10000000000000000000;\\n            }\\n        } else {\\n            claimed = true;\\n        }\\n    }\\n\\n    /// @notice Gets the balance of `owner`.\\n    /// @param owner The address to query the balance of.\\n    /// @return The amount owned by `owner`.\\n    function balanceOf(address owner) public view returns (uint256) {\\n        (bool _, uint256 balance) = _balanceOf(owner);\\n        return balance;\\n    }\\n\\n    /// @notice gets allowance of `spender` for `owner`'s tokens.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender address allowed to transfer.\\n    /// @return remaining the amount of token `spender` is allowed to transfer on behalf of `owner`.\\n    function allowance(address owner, address spender)\\n        public\\n        view\\n        returns (uint256 remaining)\\n    {\\n        if(spender != address(0) && spender == _metaTxProcessor) {\\n            return 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n        }\\n        return _allowances[owner][spender];\\n    }\\n\\n    /// @notice returns the number of decimals for that token.\\n    /// @return the number of decimals.\\n    function decimals() public view returns (uint8) {\\n        return uint8(18);\\n    }\\n\\n    /// @notice Transfer `amount` tokens to `to`.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return success true if success.\\n    function transfer(address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n\\n    /// @notice Transfer `amount` tokens from `from` to `to`.\\n    /// @param from whose token it is transferring from.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return success true if success.\\n    function transferFrom(address from, address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        if (msg.sender != from && msg.sender != _metaTxProcessor) {\\n            uint256 currentAllowance = _allowances[from][msg.sender];\\n            if (currentAllowance != (2**256) - 1) {\\n                // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n                require(currentAllowance >= amount, \\\"Not enough funds allowed\\\");\\n                _allowances[from][msg.sender] = currentAllowance - amount;\\n            }\\n        }\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    // /// @notice burn `amount` tokens.\\n    // /// @param amount the number of tokens to burn.\\n    // /// @return true if success.\\n    // function burn(uint256 amount) external returns (bool) {\\n    //     _burn(msg.sender, amount);\\n    //     return true;\\n    // }\\n\\n    // /// @notice burn `amount` tokens from `owner`.\\n    // /// @param owner address whose token is to burn.\\n    // /// @param amount the number of token to burn.\\n    // /// @return true if success.\\n    // function burnFor(address owner, uint256 amount) external returns (bool) {\\n    //     _burn(owner, amount);\\n    //     return true;\\n    // }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens.\\n    /// @param spender address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return success true if success.\\n    function approve(address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _approveFor(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens from `owner`.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender  address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return success true if success.\\n    function approveFor(address owner, address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        require(\\n            msg.sender == owner,\\n            \\\"msg.sender != owner\\\"\\n        );\\n        _approveFor(owner, spender, amount);\\n        return true;\\n    }\\n\\n\\n    function _approveFor(address owner, address spender, uint256 amount)\\n        internal\\n    {\\n        require(\\n            owner != address(0) && spender != address(0),\\n            \\\"Cannot approve with 0x0\\\"\\n        );\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _transfer(address from, address to, uint256 amount) internal {\\n        require(to != address(0), \\\"Cannot send to 0x0\\\");\\n        (bool claimed, uint256 currentBalance) = _balanceOf(from);\\n        require(currentBalance >= amount, \\\"not enough fund\\\");\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[from] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[from] = currentBalance - amount;\\n\\n        (claimed, currentBalance) = _balanceOf(to);\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[to] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[to] = currentBalance + amount;\\n        emit Transfer(from, to, amount);\\n    }\\n\\n    // function _mint(address to, uint256 amount) internal {\\n    //     require(to != address(0), \\\"Cannot mint to 0x0\\\");\\n    //     require(amount > 0, \\\"cannot mint 0 tokens\\\");\\n    //     uint256 currentTotalSupply = _totalSupply;\\n    //     uint256 newTotalSupply = currentTotalSupply + amount;\\n    //     require(newTotalSupply > currentTotalSupply, \\\"overflow\\\");\\n    //     _totalSupply = newTotalSupply;\\n    //     _balances[to] += amount;\\n    //     emit Transfer(address(0), to, amount);\\n    // }\\n\\n    // function _burn(address from, uint256 amount) internal {\\n    //     require(amount > 0, \\\"cannot burn 0 tokens\\\");\\n    //     if (msg.sender != from) {\\n    //         uint256 currentAllowance = _allowances[from][msg.sender];\\n    //         require(\\n    //             currentAllowance >= amount,\\n    //             \\\"Not enough funds allowed\\\"\\n    //         );\\n    //         if (currentAllowance != (2**256) - 1) {\\n    //             // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n    //             _allowances[from][msg.sender] = currentAllowance - amount;\\n    //         }\\n    //     }\\n\\n    //     uint256 currentBalance = balanceOf(from);\\n    //     require(currentBalance >= amount, \\\"Not enough funds\\\");\\n    //     _balances[from] = currentBalance - amount;\\n    //     _totalSupply -= amount;\\n    //     emit Transfer(from, address(0), amount);\\n    // }\\n\\n    // --- Approve by signature ---\\n    function permit(address holder, address spender, uint256 nonce, uint256 expiry,\\n                    bool allowed, uint8 v, bytes32 r, bytes32 s) external\\n    {\\n        bytes32 digest =\\n            keccak256(abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(abi.encode(PERMIT_TYPEHASH,\\n                                     holder,\\n                                     spender,\\n                                     nonce,\\n                                     expiry,\\n                                     allowed))\\n        ));\\n\\n        require(holder != address(0), \\\"Dai/invalid-address-0\\\");\\n        require(holder == ecrecover(digest, v, r, s), \\\"Dai/invalid-permit\\\");\\n        require(expiry == 0 || now <= expiry, \\\"Dai/permit-expired\\\");\\n        require(nonce == nonces[holder]++, \\\"Dai/invalid-nonce\\\");\\n        uint wad = allowed ? uint(-1) : 0;\\n        _allowances[holder][spender] = wad;\\n        emit Approval(holder, spender, wad);\\n    }\\n}\\n\",\"keccak256\":\"0xec82c958ca88eff94163197e4cce71064026ba70160dce25bae5b20b4163ba94\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "allowance(address,address)": {
              "notice": "gets allowance of `spender` for `owner`'s tokens."
            },
            "approve(address,uint256)": {
              "notice": "approve `spender` to transfer `amount` tokens."
            },
            "approveFor(address,address,uint256)": {
              "notice": "approve `spender` to transfer `amount` tokens from `owner`."
            },
            "balanceOf(address)": {
              "notice": "Gets the balance of `owner`."
            },
            "decimals()": {
              "notice": "returns the number of decimals for that token."
            },
            "totalSupply()": {
              "notice": "Gets the total number of tokens in existence."
            },
            "transfer(address,uint256)": {
              "notice": "Transfer `amount` tokens to `to`."
            },
            "transferFrom(address,address,uint256)": {
              "notice": "Transfer `amount` tokens from `from` to `to`."
            }
          }
        }
      },
      "args": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "0x0000000000000000000000000000000000000000"
      ],
      "address": "0x21d366ee3BbF67AB057c517380D37E54fFd9dfC0",
      "transactionHash": "0xbd37fb205be362b009a6de05df77a625b2886d4ba893aa6b0ee87cbd6caea606"
    },
    "GenericMetaTxProcessor": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "batchId",
                "type": "uint256"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "batchNonce",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "returnData",
                "type": "bytes"
              }
            ],
            "name": "MetaTx",
            "type": "event"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                  },
                  {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                  },
                  {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                  },
                  {
                    "internalType": "enum GenericMetaTxProcessor.SignatureType",
                    "name": "signatureType",
                    "type": "uint8"
                  }
                ],
                "internalType": "struct GenericMetaTxProcessor.Call",
                "name": "callData",
                "type": "tuple"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "tokenContract",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "batchId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "batchNonce",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "expiry",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "txGas",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "baseGas",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "tokenGasPrice",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "relayer",
                    "type": "address"
                  }
                ],
                "internalType": "struct GenericMetaTxProcessor.CallParams",
                "name": "callParams",
                "type": "tuple"
              },
              {
                "internalType": "address",
                "name": "tokenReceiver",
                "type": "address"
              }
            ],
            "name": "executeMetaTransaction",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              },
              {
                "internalType": "bytes",
                "name": "returnData",
                "type": "bytes"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "batchId",
                "type": "uint256"
              }
            ],
            "name": "meta_nonce",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "60806040526002805460ff1916905534801561001a57600080fd5b50604051610027906100b1565b604051809103902060405161003b90610088565b604051809103902060405161004f9061010b565b6040519081900381206100689392913090602001610118565b60408051601f19818403018152919052805160209091012060005561013c565b7f47656e65726963204d657461205472616e73616374696f6e0000000000000000815260180190565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c6164647265737320766572696679696e67436f6e74726163602082015261742960f01b604082015260420190565b603160f81b815260010190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b6114718061014b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806326d431e21461003b57806353f1defe14610065575b600080fd5b61004e610049366004610e28565b610085565b60405161005c9291906110e3565b60405180910390f35b610078610073366004610daf565b6100f9565b60405161005c91906113df565b60025460009060609060ff16156100b75760405162461bcd60e51b81526004016100ae90611353565b60405180910390fd5b6002805460ff191660011790556100ce8585610124565b6100d885856101db565b6100e38585856103ce565b6002805460ff1916905590969095509350505050565b6001600160a01b03821660009081526001602090815260408083208484529091529020545b92915050565b6101008101516001600160a01b0316158061014c57506101008101516001600160a01b031633145b6101685760405162461bcd60e51b81526004016100ae906112ae565b8060800151421061018b5760405162461bcd60e51b81526004016100ae90611265565b606081015182516001600160a01b031660009081526001602081815260408084208187015185529091529091205401146101d75760405162461bcd60e51b81526004016100ae906111d1565b5050565b60606101e783836108c8565b90506002836080015160028111156101fb57fe5b14156102b157825160608401516040516320c13b0b60e01b808252926001600160a01b0316916320c13b0b916102359186916004016111a3565b60206040518083038186803b15801561024d57600080fd5b505afa158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102859190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611378565b6103c9565b6001836080015160028111156102c357fe5b1415610379578251815160208301206060850151604051630b135d3f60e11b808252936001600160a01b031692631626ba7e926103029260040161116c565b60206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103529190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611235565b600061039082805190602001208560600151610904565b905083600001516001600160a01b0316816001600160a01b0316146103c75760405162461bcd60e51b81526004016100ae90611286565b505b505050565b60608281015184516001600160a01b031660009081526001602090815260408083208188015184529091528082209290925584519186015151909291906104f95760e08501511561044757610441866000015187602001518388602001518960a001518a60e001518b60c001518b6109bf565b506104f0565b8551602080880151908701516040516323b872dd60e01b81526001600160a01b038516936323b872dd936104829391929091906004016110a6565b602060405180830381600087803b15801561049c57600080fd5b505af11580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104d49190810190610dd9565b6104f05760405162461bcd60e51b81526004016100ae90611302565b6001925061086e565b61050b86604001518760000151610a6e565b6105275760405162461bcd60e51b81526004016100ae90611208565b6020850151600090156106df576040516370a0823160e01b81526001600160a01b038316906370a0823190610560903090600401611092565b60206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105b09190810190610f14565b875160208801516040516323b872dd60e01b81529293506001600160a01b038516926323b872dd926105e99290913091906004016110a6565b602060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061063b9190810190610dd9565b6106575760405162461bcd60e51b81526004016100ae906113a8565b6020808801519087015160405163095ea7b360e01b81526001600160a01b0385169263095ea7b39261068b926004016110ca565b602060405180830381600087803b1580156106a557600080fd5b505af11580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106dd9190810190610dd9565b505b60e08601511561071b5761071187600001518860200151848960a001518a60e001518b60c001518b8e60400151610a99565b9094509250610738565b61073287602001518760a001518960400151610ad5565b90945092505b60208601511561086c576040516370a0823160e01b81526000906001600160a01b038416906370a0823190610771903090600401611092565b60206040518083038186803b15801561078957600080fd5b505afa15801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107c19190810190610f14565b90508181111561086a57875160405163a9059cbb60e01b81526001600160a01b0385169163a9059cbb916107fc9190868603906004016110ca565b602060405180830381600087803b15801561081657600080fd5b505af115801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061084e9190810190610dd9565b61086a5760405162461bcd60e51b81526004016100ae906112d5565b505b505b8460600151856040015187600001516001600160a01b03167f7b0be7654550ec505d9f6fba967d2dbc7c84c72f39508dfb76ca7b8dc9d094a886866040516108b79291906110e3565b60405180910390a450935093915050565b60606000546108d78484610b4f565b80516020918201206040516108ed939201610f74565b604051602081830303815290604052905092915050565b6000815160411461091457600080fd5b60208201516040830151606084015160001a601b81101561093357601b015b8060ff16601b148061094857508060ff16601c145b61095157600080fd5b600186828585604051600081526020016040526040516109749493929190611185565b6020604051602081039080840390855afa158015610996573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b0384166109b657600080fd5b50505092915050565b6000805a6040516323b872dd60e01b81529091506001600160a01b038916906323b872dd906109f6908d908d908c906004016110a6565b602060405180830381600087803b158015610a1057600080fd5b505af1158015610a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a489190810190610dd9565b508415610a5e57610a5e8a898888858989610bc9565b5060019998505050505050505050565b6000604483511015610a825750600061011e565b5060248201516001600160a01b0382161492915050565b6000606060005a9050610aad8a8986610ad5565b90935091508615610ac757610ac78b8a8a8a858b8b610bc9565b509850989650505050505050565b60006060846001600160a01b03168484604051610af29190610f58565b60006040518083038160008787f1925050503d8060008114610b30576040519150601f19603f3d011682016040523d82523d6000602084013e610b35565b606091505b509092509050603f84045a11610b4757fe5b935093915050565b6060604051610b5d90610f8f565b604051809103902083600001518460200151846000015185602001518760400151604051610b8b9190610f58565b604080519182900382209089015160608a015160808b015160a08c015160c08d015160e08e01516101008f01516108ed9d9c9b9a9998602001611106565b60005a8403905085811115610bdb5750845b820184810285828281610bea57fe5b0414610c085760405162461bcd60e51b81526004016100ae90611331565b6040516323b872dd60e01b81526001600160a01b038916906323b872dd90610c38908c90879086906004016110a6565b602060405180830381600087803b158015610c5257600080fd5b505af1158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c8a9190810190610dd9565b50505050505050505050565b80356001600160a01b038116811461011e57600080fd5b600082601f830112610cbd578081fd5b813567ffffffffffffffff811115610cd3578182fd5b610ce6601f8201601f19166020016113e8565b9150808252836020828501011115610cfd57600080fd5b8060208401602084013760009082016020015292915050565b80356003811061011e57600080fd5b6000610120808385031215610d38578182fd5b610d41816113e8565b915050610d4e8383610c96565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100610da584828501610c96565b9082015292915050565b60008060408385031215610dc1578182fd5b610dcb8484610c96565b946020939093013593505050565b600060208284031215610dea578081fd5b81518015158114610df9578182fd5b9392505050565b600060208284031215610e11578081fd5b81516001600160e01b031981168114610df9578182fd5b60008060006101608486031215610e3d578081fd5b833567ffffffffffffffff80821115610e54578283fd5b81860160a08189031215610e66578384fd5b610e7060a06113e8565b9250610e7c8882610c96565b8352610e8b8860208301610c96565b6020840152604081013582811115610ea1578485fd5b610ead89828401610cad565b604085015250606081013582811115610ec4578485fd5b610ed089828401610cad565b606085015250610ee38860808301610d16565b6080840152505080935050610efb8560208601610d25565b9150610f0b856101408601610c96565b90509250925092565b600060208284031215610f25578081fd5b5051919050565b60008151808452610f4481602086016020860161140f565b601f01601f19169290920160200192915050565b60008251610f6a81846020870161140f565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b7f45524332304d6574615472616e73616374696f6e28616464726573732066726f81527f6d2c6164647265737320746f2c6164647265737320746f6b656e436f6e74726160208201527f63742c75696e7432353620616d6f756e742c627974657320646174612c75696e60408201527f7432353620626174636849642c75696e743235362062617463684e6f6e63652c60608201527f75696e74323536206578706972792c75696e743235362074784761732c75696e60808201527f7432353620626173654761732c75696e7432353620746f6b656e47617350726960a08201527263652c616464726573732072656c617965722960681b60c082015260d30190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60008315158252604060208301526110fe6040830184610f2c565b949350505050565b9c8d526001600160a01b039b8c1660208e0152998b1660408d0152978a1660608c015260808b019690965260a08a019490945260c089019290925260e0880152610100870152610120860152610140850152610160840152166101808201526101a00190565b6000838252604060208301526110fe6040830184610f2c565b93845260ff9290921660208401526040830152606082015260800190565b6000604082526111b66040830185610f2c565b82810360208401526111c88185610f2c565b95945050505050565b60208082526017908201527f62617463684e6f6e6365206f7574206f66206f72646572000000000000000000604082015260600190565b602080825260139082015272666972737420706172616d20213d2066726f6d60681b604082015260600190565b602080825260169082015275696e76616c69642031363534207369676e617475726560501b604082015260600190565b602080825260079082015266195e1c1a5c995960ca1b604082015260600190565b6020808252600e908201526d7369676e657220213d2066726f6d60901b604082015260600190565b6020808252600d908201526c3bb937b733903932b630bcb2b960991b604082015260600190565b602080825260139082015272115490cc8c17d4915195539117d19052531151606a1b604082015260600190565b602080825260159082015274115490cc8c17d514905394d1915497d19052531151605a1b604082015260600190565b6020808252600890820152676f766572666c6f7760c01b604082015260600190565b6020808252600b908201526a494e5f50524f475245535360a81b604082015260600190565b602080825260169082015275696e76616c69642031323731207369676e617475726560501b604082015260600190565b60208082526017908201527f45524332305f414c4c4f434154494f4e5f4641494c4544000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561140757600080fd5b604052919050565b60005b8381101561142a578181015183820152602001611412565b838111156103c7575050600091015256fea2646970667358221220e6d61c2c64c813c35c482f4c60c86e19df7fe0b77f980bd80c625c3e3c73f71064736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x27 SWAP1 PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x3B SWAP1 PUSH2 0x88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x4F SWAP1 PUSH2 0x10B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH2 0x68 SWAP4 SWAP3 SWAP2 ADDRESS SWAP1 PUSH1 0x20 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x0 SSTORE PUSH2 0x13C JUMP JUMPDEST PUSH32 0x47656E65726963204D657461205472616E73616374696F6E0000000000000000 DUP2 MSTORE PUSH1 0x18 ADD SWAP1 JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C6164647265737320766572696679696E67436F6E74726163 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x7429 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1471 DUP1 PUSH2 0x14B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D431E2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x53F1DEFE EQ PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xCE DUP6 DUP6 PUSH2 0x124 JUMP JUMPDEST PUSH2 0xD8 DUP6 DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0xE3 DUP6 DUP6 DUP6 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x14C JUMPI POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12AE JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD TIMESTAMP LT PUSH2 0x18B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 DUP8 ADD MLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD ADD EQ PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x11D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E7 DUP4 DUP4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1FB JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2B1 JUMPI DUP3 MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x20C13B0B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x20C13B0B SWAP2 PUSH2 0x235 SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x285 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x379 JUMPI DUP3 MLOAD DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x1626BA7E SWAP3 PUSH2 0x302 SWAP3 PUSH1 0x4 ADD PUSH2 0x116C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x352 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x904 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1286 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP2 ADD MLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 DUP9 ADD MLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP5 MLOAD SWAP2 DUP7 ADD MLOAD MLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4F9 JUMPI PUSH1 0xE0 DUP6 ADD MLOAD ISZERO PUSH2 0x447 JUMPI PUSH2 0x441 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD DUP4 DUP9 PUSH1 0x20 ADD MLOAD DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 PUSH2 0x9BF JUMP JUMPDEST POP PUSH2 0x4F0 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x482 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x4D4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x86E JUMP JUMPDEST PUSH2 0x50B DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x560 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x5B0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x5E9 SWAP3 SWAP1 SWAP2 ADDRESS SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x63B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x68B SWAP3 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x6DD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP JUMPDEST PUSH1 0xE0 DUP7 ADD MLOAD ISZERO PUSH2 0x71B JUMPI PUSH2 0x711 DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP5 DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 DUP15 PUSH1 0x40 ADD MLOAD PUSH2 0xA99 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x738 JUMP JUMPDEST PUSH2 0x732 DUP8 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0x40 ADD MLOAD PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x771 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x7C1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x86A JUMPI DUP8 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x7FC SWAP2 SWAP1 DUP7 DUP7 SUB SWAP1 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x84E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12D5 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7B0BE7654550EC505D9F6FBA967D2DBC7C84C72F39508DFB76CA7B8DC9D094A8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8B7 SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 SLOAD PUSH2 0x8D7 DUP5 DUP5 PUSH2 0xB4F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x8ED SWAP4 SWAP3 ADD PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x948 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP7 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x974 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x9F6 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xA48 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP DUP5 ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5E DUP11 DUP10 DUP9 DUP9 DUP6 DUP10 DUP10 PUSH2 0xBC9 JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 DUP4 MLOAD LT ISZERO PUSH2 0xA82 JUMPI POP PUSH1 0x0 PUSH2 0x11E JUMP JUMPDEST POP PUSH1 0x24 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 GAS SWAP1 POP PUSH2 0xAAD DUP11 DUP10 DUP7 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP7 ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC7 DUP12 DUP11 DUP11 DUP11 DUP6 DUP12 DUP12 PUSH2 0xBC9 JUMP JUMPDEST POP SWAP9 POP SWAP9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF2 SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x3F DUP5 DIV GAS GT PUSH2 0xB47 JUMPI INVALID JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0xB5D SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 SWAP1 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 DUP13 ADD MLOAD PUSH1 0xC0 DUP14 ADD MLOAD PUSH1 0xE0 DUP15 ADD MLOAD PUSH2 0x100 DUP16 ADD MLOAD PUSH2 0x8ED SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 PUSH1 0x20 ADD PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x0 GAS DUP5 SUB SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0xBDB JUMPI POP DUP5 JUMPDEST DUP3 ADD DUP5 DUP2 MUL DUP6 DUP3 DUP3 DUP2 PUSH2 0xBEA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xC38 SWAP1 DUP13 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xC8A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCBD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xCE6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD38 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD4E DUP4 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xDA5 DUP5 DUP3 DUP6 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDCB DUP5 DUP5 PUSH2 0xC96 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE11 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE3D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE54 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD PUSH1 0xA0 DUP2 DUP10 SUB SLT ISZERO PUSH2 0xE66 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xE70 PUSH1 0xA0 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 POP PUSH2 0xE7C DUP9 DUP3 PUSH2 0xC96 JUMP JUMPDEST DUP4 MSTORE PUSH2 0xE8B DUP9 PUSH1 0x20 DUP4 ADD PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEA1 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xEAD DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE POP PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEC4 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xED0 DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE POP PUSH2 0xEE3 DUP9 PUSH1 0x80 DUP4 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE POP POP DUP1 SWAP4 POP POP PUSH2 0xEFB DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0B DUP6 PUSH2 0x140 DUP7 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF25 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF44 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x140F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF6A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x140F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH32 0x45524332304D6574615472616E73616374696F6E28616464726573732066726F DUP2 MSTORE PUSH32 0x6D2C6164647265737320746F2C6164647265737320746F6B656E436F6E747261 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x63742C75696E7432353620616D6F756E742C627974657320646174612C75696E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7432353620626174636849642C75696E743235362062617463684E6F6E63652C PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x75696E74323536206578706972792C75696E743235362074784761732C75696E PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x7432353620626173654761732C75696E7432353620746F6B656E476173507269 PUSH1 0xA0 DUP3 ADD MSTORE PUSH19 0x63652C616464726573732072656C6179657229 PUSH1 0x68 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xD3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP13 DUP14 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP10 DUP12 AND PUSH1 0x40 DUP14 ADD MSTORE SWAP8 DUP11 AND PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP11 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE AND PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x11B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF2C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11C8 DUP2 DUP6 PUSH2 0xF2C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x62617463684E6F6E6365206F7574206F66206F72646572000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x666972737420706172616D20213D2066726F6D PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031363534207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x7369676E657220213D2066726F6D PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x3BB937B733903932B630BCB2B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x115490CC8C17D4915195539117D19052531151 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x494E5F50524F4752455353 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031323731207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305F414C4C4F434154494F4E5F4641494C4544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1412 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xD6 SHR 0x2C PUSH5 0xC813C35C48 0x2F 0x4C PUSH1 0xC8 PUSH15 0x19DF7FE0B77F980BD80C625C3E3C73 0xF7 LT PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "394:9709:1:-:0;;;1686:17;;;-1:-1:-1;;1686:17:1;;;1760:271;5:2:-1;;;;30:1;27;20:12;5:2;1760:271:1;785:93;;;;;;;;;;;;;;1900:37;;;;;;;;;;;;;;1955:14;;;;;;;;;;;;;;;1833:181;;;;1995:4;;1833:181;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;1833:181:1;;;1810:214;;49:4:-1;1810:214:1;;;;1791:16;:233;394:9709;;1443:372:-1;542:26;522:47;;506:2;588:12;;1623:192;1822:372;911:34;891:55;;980:34;975:2;966:12;;959:56;-1:-1;;;1044:2;1035:12;;1028:26;875:2;1073:12;;2002:192;2201:372;-1:-1;;;1375:24;;1360:1;1418:11;;2381:192;2580:547;196:37;;;2947:2;2932:18;;196:37;;;;3030:2;3015:18;;196:37;-1:-1;;;;;3527:54;3113:2;3098:18;;76:37;2782:3;2767:19;;2753:374;;394:9709:1;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806326d431e21461003b57806353f1defe14610065575b600080fd5b61004e610049366004610e28565b610085565b60405161005c9291906110e3565b60405180910390f35b610078610073366004610daf565b6100f9565b60405161005c91906113df565b60025460009060609060ff16156100b75760405162461bcd60e51b81526004016100ae90611353565b60405180910390fd5b6002805460ff191660011790556100ce8585610124565b6100d885856101db565b6100e38585856103ce565b6002805460ff1916905590969095509350505050565b6001600160a01b03821660009081526001602090815260408083208484529091529020545b92915050565b6101008101516001600160a01b0316158061014c57506101008101516001600160a01b031633145b6101685760405162461bcd60e51b81526004016100ae906112ae565b8060800151421061018b5760405162461bcd60e51b81526004016100ae90611265565b606081015182516001600160a01b031660009081526001602081815260408084208187015185529091529091205401146101d75760405162461bcd60e51b81526004016100ae906111d1565b5050565b60606101e783836108c8565b90506002836080015160028111156101fb57fe5b14156102b157825160608401516040516320c13b0b60e01b808252926001600160a01b0316916320c13b0b916102359186916004016111a3565b60206040518083038186803b15801561024d57600080fd5b505afa158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102859190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611378565b6103c9565b6001836080015160028111156102c357fe5b1415610379578251815160208301206060850151604051630b135d3f60e11b808252936001600160a01b031692631626ba7e926103029260040161116c565b60206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103529190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611235565b600061039082805190602001208560600151610904565b905083600001516001600160a01b0316816001600160a01b0316146103c75760405162461bcd60e51b81526004016100ae90611286565b505b505050565b60608281015184516001600160a01b031660009081526001602090815260408083208188015184529091528082209290925584519186015151909291906104f95760e08501511561044757610441866000015187602001518388602001518960a001518a60e001518b60c001518b6109bf565b506104f0565b8551602080880151908701516040516323b872dd60e01b81526001600160a01b038516936323b872dd936104829391929091906004016110a6565b602060405180830381600087803b15801561049c57600080fd5b505af11580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104d49190810190610dd9565b6104f05760405162461bcd60e51b81526004016100ae90611302565b6001925061086e565b61050b86604001518760000151610a6e565b6105275760405162461bcd60e51b81526004016100ae90611208565b6020850151600090156106df576040516370a0823160e01b81526001600160a01b038316906370a0823190610560903090600401611092565b60206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105b09190810190610f14565b875160208801516040516323b872dd60e01b81529293506001600160a01b038516926323b872dd926105e99290913091906004016110a6565b602060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061063b9190810190610dd9565b6106575760405162461bcd60e51b81526004016100ae906113a8565b6020808801519087015160405163095ea7b360e01b81526001600160a01b0385169263095ea7b39261068b926004016110ca565b602060405180830381600087803b1580156106a557600080fd5b505af11580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106dd9190810190610dd9565b505b60e08601511561071b5761071187600001518860200151848960a001518a60e001518b60c001518b8e60400151610a99565b9094509250610738565b61073287602001518760a001518960400151610ad5565b90945092505b60208601511561086c576040516370a0823160e01b81526000906001600160a01b038416906370a0823190610771903090600401611092565b60206040518083038186803b15801561078957600080fd5b505afa15801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107c19190810190610f14565b90508181111561086a57875160405163a9059cbb60e01b81526001600160a01b0385169163a9059cbb916107fc9190868603906004016110ca565b602060405180830381600087803b15801561081657600080fd5b505af115801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061084e9190810190610dd9565b61086a5760405162461bcd60e51b81526004016100ae906112d5565b505b505b8460600151856040015187600001516001600160a01b03167f7b0be7654550ec505d9f6fba967d2dbc7c84c72f39508dfb76ca7b8dc9d094a886866040516108b79291906110e3565b60405180910390a450935093915050565b60606000546108d78484610b4f565b80516020918201206040516108ed939201610f74565b604051602081830303815290604052905092915050565b6000815160411461091457600080fd5b60208201516040830151606084015160001a601b81101561093357601b015b8060ff16601b148061094857508060ff16601c145b61095157600080fd5b600186828585604051600081526020016040526040516109749493929190611185565b6020604051602081039080840390855afa158015610996573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b0384166109b657600080fd5b50505092915050565b6000805a6040516323b872dd60e01b81529091506001600160a01b038916906323b872dd906109f6908d908d908c906004016110a6565b602060405180830381600087803b158015610a1057600080fd5b505af1158015610a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a489190810190610dd9565b508415610a5e57610a5e8a898888858989610bc9565b5060019998505050505050505050565b6000604483511015610a825750600061011e565b5060248201516001600160a01b0382161492915050565b6000606060005a9050610aad8a8986610ad5565b90935091508615610ac757610ac78b8a8a8a858b8b610bc9565b509850989650505050505050565b60006060846001600160a01b03168484604051610af29190610f58565b60006040518083038160008787f1925050503d8060008114610b30576040519150601f19603f3d011682016040523d82523d6000602084013e610b35565b606091505b509092509050603f84045a11610b4757fe5b935093915050565b6060604051610b5d90610f8f565b604051809103902083600001518460200151846000015185602001518760400151604051610b8b9190610f58565b604080519182900382209089015160608a015160808b015160a08c015160c08d015160e08e01516101008f01516108ed9d9c9b9a9998602001611106565b60005a8403905085811115610bdb5750845b820184810285828281610bea57fe5b0414610c085760405162461bcd60e51b81526004016100ae90611331565b6040516323b872dd60e01b81526001600160a01b038916906323b872dd90610c38908c90879086906004016110a6565b602060405180830381600087803b158015610c5257600080fd5b505af1158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c8a9190810190610dd9565b50505050505050505050565b80356001600160a01b038116811461011e57600080fd5b600082601f830112610cbd578081fd5b813567ffffffffffffffff811115610cd3578182fd5b610ce6601f8201601f19166020016113e8565b9150808252836020828501011115610cfd57600080fd5b8060208401602084013760009082016020015292915050565b80356003811061011e57600080fd5b6000610120808385031215610d38578182fd5b610d41816113e8565b915050610d4e8383610c96565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100610da584828501610c96565b9082015292915050565b60008060408385031215610dc1578182fd5b610dcb8484610c96565b946020939093013593505050565b600060208284031215610dea578081fd5b81518015158114610df9578182fd5b9392505050565b600060208284031215610e11578081fd5b81516001600160e01b031981168114610df9578182fd5b60008060006101608486031215610e3d578081fd5b833567ffffffffffffffff80821115610e54578283fd5b81860160a08189031215610e66578384fd5b610e7060a06113e8565b9250610e7c8882610c96565b8352610e8b8860208301610c96565b6020840152604081013582811115610ea1578485fd5b610ead89828401610cad565b604085015250606081013582811115610ec4578485fd5b610ed089828401610cad565b606085015250610ee38860808301610d16565b6080840152505080935050610efb8560208601610d25565b9150610f0b856101408601610c96565b90509250925092565b600060208284031215610f25578081fd5b5051919050565b60008151808452610f4481602086016020860161140f565b601f01601f19169290920160200192915050565b60008251610f6a81846020870161140f565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b7f45524332304d6574615472616e73616374696f6e28616464726573732066726f81527f6d2c6164647265737320746f2c6164647265737320746f6b656e436f6e74726160208201527f63742c75696e7432353620616d6f756e742c627974657320646174612c75696e60408201527f7432353620626174636849642c75696e743235362062617463684e6f6e63652c60608201527f75696e74323536206578706972792c75696e743235362074784761732c75696e60808201527f7432353620626173654761732c75696e7432353620746f6b656e47617350726960a08201527263652c616464726573732072656c617965722960681b60c082015260d30190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60008315158252604060208301526110fe6040830184610f2c565b949350505050565b9c8d526001600160a01b039b8c1660208e0152998b1660408d0152978a1660608c015260808b019690965260a08a019490945260c089019290925260e0880152610100870152610120860152610140850152610160840152166101808201526101a00190565b6000838252604060208301526110fe6040830184610f2c565b93845260ff9290921660208401526040830152606082015260800190565b6000604082526111b66040830185610f2c565b82810360208401526111c88185610f2c565b95945050505050565b60208082526017908201527f62617463684e6f6e6365206f7574206f66206f72646572000000000000000000604082015260600190565b602080825260139082015272666972737420706172616d20213d2066726f6d60681b604082015260600190565b602080825260169082015275696e76616c69642031363534207369676e617475726560501b604082015260600190565b602080825260079082015266195e1c1a5c995960ca1b604082015260600190565b6020808252600e908201526d7369676e657220213d2066726f6d60901b604082015260600190565b6020808252600d908201526c3bb937b733903932b630bcb2b960991b604082015260600190565b602080825260139082015272115490cc8c17d4915195539117d19052531151606a1b604082015260600190565b602080825260159082015274115490cc8c17d514905394d1915497d19052531151605a1b604082015260600190565b6020808252600890820152676f766572666c6f7760c01b604082015260600190565b6020808252600b908201526a494e5f50524f475245535360a81b604082015260600190565b602080825260169082015275696e76616c69642031323731207369676e617475726560501b604082015260600190565b60208082526017908201527f45524332305f414c4c4f434154494f4e5f4641494c4544000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561140757600080fd5b604052919050565b60005b8381101561142a578181015183820152602001611412565b838111156103c7575050600091015256fea2646970667358221220e6d61c2c64c813c35c482f4c60c86e19df7fe0b77f980bd80c625c3e3c73f71064736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D431E2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x53F1DEFE EQ PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xCE DUP6 DUP6 PUSH2 0x124 JUMP JUMPDEST PUSH2 0xD8 DUP6 DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0xE3 DUP6 DUP6 DUP6 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x14C JUMPI POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12AE JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD TIMESTAMP LT PUSH2 0x18B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 DUP8 ADD MLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD ADD EQ PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x11D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E7 DUP4 DUP4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1FB JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2B1 JUMPI DUP3 MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x20C13B0B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x20C13B0B SWAP2 PUSH2 0x235 SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x285 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x379 JUMPI DUP3 MLOAD DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x1626BA7E SWAP3 PUSH2 0x302 SWAP3 PUSH1 0x4 ADD PUSH2 0x116C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x352 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x904 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1286 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP2 ADD MLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 DUP9 ADD MLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP5 MLOAD SWAP2 DUP7 ADD MLOAD MLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4F9 JUMPI PUSH1 0xE0 DUP6 ADD MLOAD ISZERO PUSH2 0x447 JUMPI PUSH2 0x441 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD DUP4 DUP9 PUSH1 0x20 ADD MLOAD DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 PUSH2 0x9BF JUMP JUMPDEST POP PUSH2 0x4F0 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x482 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x4D4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x86E JUMP JUMPDEST PUSH2 0x50B DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x560 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x5B0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x5E9 SWAP3 SWAP1 SWAP2 ADDRESS SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x63B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x68B SWAP3 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x6DD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP JUMPDEST PUSH1 0xE0 DUP7 ADD MLOAD ISZERO PUSH2 0x71B JUMPI PUSH2 0x711 DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP5 DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 DUP15 PUSH1 0x40 ADD MLOAD PUSH2 0xA99 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x738 JUMP JUMPDEST PUSH2 0x732 DUP8 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0x40 ADD MLOAD PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x771 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x7C1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x86A JUMPI DUP8 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x7FC SWAP2 SWAP1 DUP7 DUP7 SUB SWAP1 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x84E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12D5 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7B0BE7654550EC505D9F6FBA967D2DBC7C84C72F39508DFB76CA7B8DC9D094A8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8B7 SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 SLOAD PUSH2 0x8D7 DUP5 DUP5 PUSH2 0xB4F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x8ED SWAP4 SWAP3 ADD PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x948 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP7 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x974 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x9F6 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xA48 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP DUP5 ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5E DUP11 DUP10 DUP9 DUP9 DUP6 DUP10 DUP10 PUSH2 0xBC9 JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 DUP4 MLOAD LT ISZERO PUSH2 0xA82 JUMPI POP PUSH1 0x0 PUSH2 0x11E JUMP JUMPDEST POP PUSH1 0x24 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 GAS SWAP1 POP PUSH2 0xAAD DUP11 DUP10 DUP7 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP7 ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC7 DUP12 DUP11 DUP11 DUP11 DUP6 DUP12 DUP12 PUSH2 0xBC9 JUMP JUMPDEST POP SWAP9 POP SWAP9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF2 SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x3F DUP5 DIV GAS GT PUSH2 0xB47 JUMPI INVALID JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0xB5D SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 SWAP1 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 DUP13 ADD MLOAD PUSH1 0xC0 DUP14 ADD MLOAD PUSH1 0xE0 DUP15 ADD MLOAD PUSH2 0x100 DUP16 ADD MLOAD PUSH2 0x8ED SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 PUSH1 0x20 ADD PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x0 GAS DUP5 SUB SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0xBDB JUMPI POP DUP5 JUMPDEST DUP3 ADD DUP5 DUP2 MUL DUP6 DUP3 DUP3 DUP2 PUSH2 0xBEA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xC38 SWAP1 DUP13 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xC8A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCBD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xCE6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD38 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD4E DUP4 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xDA5 DUP5 DUP3 DUP6 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDCB DUP5 DUP5 PUSH2 0xC96 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE11 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE3D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE54 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD PUSH1 0xA0 DUP2 DUP10 SUB SLT ISZERO PUSH2 0xE66 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xE70 PUSH1 0xA0 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 POP PUSH2 0xE7C DUP9 DUP3 PUSH2 0xC96 JUMP JUMPDEST DUP4 MSTORE PUSH2 0xE8B DUP9 PUSH1 0x20 DUP4 ADD PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEA1 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xEAD DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE POP PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEC4 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xED0 DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE POP PUSH2 0xEE3 DUP9 PUSH1 0x80 DUP4 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE POP POP DUP1 SWAP4 POP POP PUSH2 0xEFB DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0B DUP6 PUSH2 0x140 DUP7 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF25 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF44 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x140F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF6A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x140F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH32 0x45524332304D6574615472616E73616374696F6E28616464726573732066726F DUP2 MSTORE PUSH32 0x6D2C6164647265737320746F2C6164647265737320746F6B656E436F6E747261 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x63742C75696E7432353620616D6F756E742C627974657320646174612C75696E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7432353620626174636849642C75696E743235362062617463684E6F6E63652C PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x75696E74323536206578706972792C75696E743235362074784761732C75696E PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x7432353620626173654761732C75696E7432353620746F6B656E476173507269 PUSH1 0xA0 DUP3 ADD MSTORE PUSH19 0x63652C616464726573732072656C6179657229 PUSH1 0x68 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xD3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP13 DUP14 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP10 DUP12 AND PUSH1 0x40 DUP14 ADD MSTORE SWAP8 DUP11 AND PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP11 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE AND PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x11B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF2C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11C8 DUP2 DUP6 PUSH2 0xF2C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x62617463684E6F6E6365206F7574206F66206F72646572000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x666972737420706172616D20213D2066726F6D PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031363534207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x7369676E657220213D2066726F6D PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x3BB937B733903932B630BCB2B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x115490CC8C17D4915195539117D19052531151 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x494E5F50524F4752455353 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031323731207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305F414C4C4F434154494F4E5F4641494C4544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1412 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xD6 SHR 0x2C PUSH5 0xC813C35C48 0x2F 0x4C PUSH1 0xC8 PUSH15 0x19DF7FE0B77F980BD80C625C3E3C73 0xF7 LT PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "394:9709:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:9709:1;;;;;;;;;;;;;;;;;;;;;;;;2453:480;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;9973:128;;;;;;;;;:::i;:::-;;;;;;;;2453:480;2664:4;;2606:12;;2620:23;;2664:4;;2663:5;2655:29;;;;-1:-1:-1;;;2655:29:1;;;;;;;;;;;;;;;;;2694:4;:11;;-1:-1:-1;;2694:11:1;2701:4;2694:11;;;2715:47;2741:8;2751:10;2715:25;:47::i;:::-;2772:42;2793:8;2803:10;2772:20;:42::i;:::-;2848:56;2868:8;2878:10;2890:13;2848:19;:56::i;:::-;2914:4;:12;;-1:-1:-1;;2914:12:1;;;2824:80;;;;-1:-1:-1;2453:480:1;-1:-1:-1;;;;2453:480:1:o;9973:128::-;-1:-1:-1;;;;;10072:13:1;;10046:7;10072:13;;;:7;:13;;;;;;;;:22;;;;;;;;;9973:128;;;;;:::o;3014:450::-;3168:18;;;;-1:-1:-1;;;;;3168:32:1;;;:68;;-1:-1:-1;3204:18:1;;;;-1:-1:-1;;;;;3204:32:1;3226:10;3204:32;3168:68;3147:128;;;;-1:-1:-1;;;3147:128:1;;;;;;;;;3311:10;:17;;;3293:15;:35;3285:55;;;;-1:-1:-1;;;3285:55:1;;;;;;;;;3408:21;;;;3366:13;;-1:-1:-1;;;;;3358:22:1;;;;;:7;:22;;;;;;;;3381:18;;;;3358:42;;;;;;;;;:46;:71;3350:107;;;;-1:-1:-1;;;3350:107:1;;;;;;;;;3014:450;;:::o;4388:895::-;4516:23;4542:36;4557:8;4567:10;4542:14;:36::i;:::-;4516:62;-1:-1:-1;4618:21:1;4592:8;:22;;;:47;;;;;;;;;4588:689;;;4688:13;;4732:18;;;;4680:71;;-1:-1:-1;;;4680:71:1;;;4755:18;-1:-1:-1;;;;;4680:39:1;;103:10:3;;4680:71:1;;4720:10;;4680:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4680:71:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4680:71:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4680:71:1;;;;;;;;;-1:-1:-1;;;;;;4680:93:1;;4655:174;;;;-1:-1:-1;;;4655:174:1;;;;;;;;;4588:689;;;4875:21;4849:8;:22;;;:47;;;;;;;;;4846:431;;;4944:13;;4976:21;;;;;;4999:18;;;;4936:82;;-1:-1:-1;;;4936:82:1;;;5022:18;-1:-1:-1;;;;;4936:39:1;;103:10:6;;4936:82:1;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4936:82:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4936:82:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4936:82:1;;;;;;;;;-1:-1:-1;;;;;;4936:104:1;;4911:185;;;;-1:-1:-1;;;4911:185:1;;;;;;;;4846:431;5127:14;5144:58;5170:10;5160:21;;;;;;5183:8;:18;;;5144:15;:58::i;:::-;5127:75;;5234:8;:13;;;-1:-1:-1;;;;;5224:23:1;:6;-1:-1:-1;;;;;5224:23:1;;5216:50;;;;-1:-1:-1;;;5216:50:1;;;;;;;;;4846:431;;4388:895;;;:::o;7432:2535::-;7598:23;7678:21;;;;7641:13;;-1:-1:-1;;;;;7633:22:1;7584:12;7633:22;;;:7;:22;;;;;;;;7656:18;;;;7633:42;;;;;;;;:66;;;;7738:24;;7778:13;;;;:20;7584:12;;7598:23;7738:24;7774:2086;;7822:24;;;;:28;7819:555;;7870:343;7916:8;:13;;;7951:8;:11;;;7984:13;8019:10;:17;;;8058:10;:16;;;8096:10;:24;;;8142:10;:18;;;8182:13;7870:24;:343::i;:::-;;7819:555;;;8287:13;;8302:11;;;;;8315:17;;;;8260:73;;-1:-1:-1;;;8260:73:1;;-1:-1:-1;;;;;8260:26:1;;;;;:73;;8287:13;;8302:11;;8315:17;8260:73;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8260:73:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8260:73:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8260:73:1;;;;;;;;;8252:107;;;;-1:-1:-1;;;8252:107:1;;;;;;;;;8397:4;8387:14;;7774:2086;;;8457:65;8493:8;:13;;;8508:8;:13;;;8457:35;:65::i;:::-;8432:143;;;;-1:-1:-1;;;8432:143:1;;;;;;;;;8629:17;;;;8589:23;;8629:21;8626:315;;8688:38;;-1:-1:-1;;;8688:38:1;;-1:-1:-1;;;;;8688:23:1;;;;;:38;;8720:4;;8688:38;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8688:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8688:38:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8688:38:1;;;;;;;;;8779:13;;8809:17;;;;8752:75;;-1:-1:-1;;;8752:75:1;;8670:56;;-1:-1:-1;;;;;;8752:26:1;;;;;:75;;8779:13;;8802:4;;8809:17;8752:75;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8752:75:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8752:75:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8752:75:1;;;;;;;;;8744:111;;;;-1:-1:-1;;;8744:111:1;;;;;;;;;8895:11;;;;;8908:17;;;;8873:53;;-1:-1:-1;;;8873:53:1;;-1:-1:-1;;;;;8873:21:1;;;;;:53;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8873:53:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8873:53:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8873:53:1;;;;;;;;;;8626:315;8957:24;;;;:28;8954:574;;9029:352;9088:8;:13;;;9123:8;:11;;;9156:13;9191:10;:16;;;9229:10;:24;;;9275:10;:18;;;9315:13;9350:8;:13;;;9029:37;:352::i;:::-;9005:376;;-1:-1:-1;9005:376:1;-1:-1:-1;8954:574:1;;;9444:69;9468:8;:11;;;9481:10;:16;;;9499:8;:13;;;9444:23;:69::i;:::-;9420:93;;-1:-1:-1;9420:93:1;-1:-1:-1;8954:574:1;9544:17;;;;:21;9541:309;;9606:38;;-1:-1:-1;;;9606:38:1;;9585:18;;-1:-1:-1;;;;;9606:23:1;;;;;:38;;9638:4;;9606:38;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9606:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9606:38:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9606:38:1;;;;;;;;;9585:59;;9679:15;9666:10;:28;9662:174;;;9749:13;;9726:67;;-1:-1:-1;;;9726:67:1;;-1:-1:-1;;;;;9726:22:1;;;;;:67;;9749:13;9764:28;;;;9726:67;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9726:67:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9726:67:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9726:67:1;;;;;;;;;9718:99;;;;-1:-1:-1;;;9718:99:1;;;;;;;;;9541:309;;7774:2086;;9917:10;:21;;;9897:10;:18;;;9882:8;:13;;;-1:-1:-1;;;;;9875:85:1;;9940:7;9949:10;9875:85;;;;;;;;;;;;;;;;7432:2535;;;;;;;:::o;3470:298::-;3591:12;3676:16;;3716:34;3729:8;3739:10;3716:12;:34::i;:::-;3706:45;;;;;;;3622:139;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3622:139:1;;;3615:146;;3470:298;;;;:::o;47:637:15:-;143:17;184:3;:10;198:2;184:16;176:25;;;;;;310:2;301:12;;295:19;347:2;338:12;;332:19;392:2;383:12;;377:19;212:9;369:28;516:2;512:6;;508:44;;;539:2;534:7;508:44;569:1;:7;;574:2;569:7;:18;;;;580:1;:7;;585:2;580:7;569:18;561:27;;;;;;611:24;621:4;627:1;630;633;611:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;611:24:15;;-1:-1:-1;;611:24:15;;;-1:-1:-1;;;;;;;653:23:15;;645:32;;;;;;47:637;;;;;;;:::o;6265:552:1:-;6537:4;6553:18;6574:9;6593:44;;-1:-1:-1;;;6593:44:1;;6553:30;;-1:-1:-1;;;;;;6593:26:1;;;;;:44;;6620:4;;6626:2;;6630:6;;6593:44;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6593:44:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6593:44:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6593:44:1;;;;;;;;;-1:-1:-1;6651:17:1;;6647:143;;6684:95;6692:4;6698:13;6713:8;6723:13;6738:10;6750:13;6765;6684:7;:95::i;:::-;-1:-1:-1;6806:4:1;;6265:552;-1:-1:-1;;;;;;;;;6265:552:1:o;1504:348:13:-;1623:4;1662:7;1647:4;:11;:23;1643:66;;;-1:-1:-1;1693:5:13;1686:12;;1643:66;-1:-1:-1;1789:2:13;1779:13;;1773:20;-1:-1:-1;;;;;1828:17:13;;1819:26;1504:348;;;;:::o;6823:603:1:-;7111:12;7125:23;7160:18;7181:9;7160:30;;7224:43;7248:2;7252:8;7262:4;7224:23;:43::i;:::-;7200:67;;-1:-1:-1;7200:67:1;-1:-1:-1;7281:17:1;;7277:143;;7314:95;7322:4;7328:13;7343:8;7353:13;7368:10;7380:13;7395;7314:7;:95::i;:::-;6823:603;;;;;;;;;;;;:::o;5906:353::-;6036:12;6050:23;6109:2;-1:-1:-1;;;;;6109:7:1;6121:8;6131:4;6109:27;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1;6085:51:1;;-1:-1:-1;6085:51:1;-1:-1:-1;6176:2:1;6165:8;:13;6153:9;:25;6146:33;;;;5906:353;;;;;;:::o;3774:608::-;3892:12;964:238;;;;;;;;;;;;;;3990:8;:13;;;4017:8;:11;;;4042:10;:24;;;4080:10;:17;;;4121:8;:13;;;4111:24;;;;;;;;;;;;;;;;;4149:18;;;;4181:21;;;;4216:17;;;;4247:16;;;;4277:18;;;;4309:24;;;;4347:18;;;;3923:452;;;;;;;;;;;5289:611;5529:17;5562:9;5549:10;:22;5529:42;;5596:8;5584:9;:20;5581:70;;;-1:-1:-1;5632:8:1;5581:70;5660:26;;5721:25;;;5733:13;5660:26;5721:25;5660:26;5764;;;;;:43;5756:64;;;;-1:-1:-1;;;5756:64:1;;;;;;;;;5830:63;;-1:-1:-1;;;5830:63:1;;-1:-1:-1;;;;;5830:26:1;;;;;:63;;5857:4;;5863:13;;5878:14;;5830:63;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5830:63:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5830:63:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5830:63:1;;;;;;;;;;5289:611;;;;;;;;;:::o;5:130:-1:-;72:20;;-1:-1;;;;;26280:54;;27189:35;;27179:2;;27238:1;;27228:12;417:432;;514:3;507:4;499:6;495:17;491:27;481:2;;-1:-1;;522:12;481:2;569:6;556:20;24711:18;24703:6;24700:30;24697:2;;;-1:-1;;24733:12;24697:2;591:60;24806:9;24787:17;;-1:-1;;24783:33;24874:4;24864:15;591:60;;;582:69;;671:6;664:5;657:21;775:3;24874:4;766:6;699;757:16;;754:25;751:2;;;792:1;;782:12;751:2;26595:6;24874:4;699:6;695:17;24874:4;733:5;729:16;26572:30;26651:1;26633:16;;;24874:4;26633:16;26626:27;733:5;474:375;-1:-1;;474:375;857:162;940:20;;27579:1;27569:12;;27559:2;;27595:1;;27585:12;1073:1526;;1189:6;;1177:9;1172:3;1168:19;1164:32;1161:2;;;-1:-1;;1199:12;1161:2;1227:22;1189:6;1227:22;;;1218:31;;;1340:49;1385:3;1361:22;1340:49;;;1322:16;1315:75;1453:2;1511:9;1507:22;3827:20;1453:2;1472:5;1468:16;1461:75;1600:2;1658:9;1654:22;3827:20;1600:2;1619:5;1615:16;1608:75;1750:2;1808:9;1804:22;3827:20;1750:2;1769:5;1765:16;1758:75;1896:3;1955:9;1951:22;3827:20;1896:3;1916:5;1912:16;1905:75;2042:3;2101:9;2097:22;3827:20;2042:3;2062:5;2058:16;2051:75;2190:3;2249:9;2245:22;3827:20;2190:3;2210:5;2206:16;2199:75;2344:3;2403:9;2399:22;3827:20;2344:3;2364:5;2360:16;2353:75;2492:3;2528:49;2573:3;2492;2553:9;2549:22;2528:49;;;2508:18;;;2501:77;2512:5;1155:1444;-1:-1;;1155:1444;4038:366;;;4159:2;4147:9;4138:7;4134:23;4130:32;4127:2;;;-1:-1;;4165:12;4127:2;4227:53;4272:7;4248:22;4227:53;;;4217:63;4317:2;4356:22;;;;3827:20;;-1:-1;;;4121:283;4411:257;;4523:2;4511:9;4502:7;4498:23;4494:32;4491:2;;;-1:-1;;4529:12;4491:2;223:6;217:13;27335:5;25962:13;25955:21;27313:5;27310:32;27300:2;;-1:-1;;27346:12;27300:2;4581:71;4485:183;-1:-1;;;4485:183;4675:261;;4789:2;4777:9;4768:7;4764:23;4760:32;4757:2;;;-1:-1;;4795:12;4757:2;354:13;;-1:-1;;;;;;26128:78;;27430:34;;27420:2;;-1:-1;;27468:12;4943:675;;;;5129:3;5117:9;5108:7;5104:23;5100:33;5097:2;;;-1:-1;;5136:12;5097:2;5194:17;5181:31;5232:18;;5224:6;5221:30;5218:2;;;-1:-1;;5254:12;5218:2;5341:6;5330:9;5326:22;2757:4;2745:9;2740:3;2736:19;2732:30;2729:2;;;-1:-1;;2765:12;2729:2;2793:20;2757:4;2793:20;;;2784:29;;2895:49;2940:3;2916:22;2895:49;;;2877:16;2870:75;3037:49;3082:3;3004:2;3062:9;3058:22;3037:49;;;3004:2;3023:5;3019:16;3012:75;3176:2;3165:9;3161:18;3148:32;5232:18;3192:6;3189:30;3186:2;;;-1:-1;;3222:12;3186:2;3267:54;3317:3;3308:6;3297:9;3293:22;3267:54;;;3176:2;3253:5;3249:16;3242:80;;3416:2;3405:9;3401:18;3388:32;5232:18;3432:6;3429:30;3426:2;;;-1:-1;;3462:12;3426:2;3507:54;3557:3;3548:6;3537:9;3533:22;3507:54;;;3416:2;3493:5;3489:16;3482:80;;3666:65;3727:3;3632;3707:9;3703:22;3666:65;;;3632:3;3652:5;3648:16;3641:91;;;5274:84;;;;5413:80;5485:7;3004:2;5465:9;5461:22;5413:80;;;5403:90;;5549:53;5594:7;5530:3;5574:9;5570:22;5549:53;;;5539:63;;5091:527;;;;;;5625:263;;5740:2;5728:9;5719:7;5715:23;5711:32;5708:2;;;-1:-1;;5746:12;5708:2;-1:-1;3975:13;;5702:186;-1:-1;5702:186;6405:343;;6547:5;24979:12;25263:6;25258:3;25251:19;6640:52;6685:6;25300:4;25295:3;25291:14;25300:4;6666:5;6662:16;6640:52;;;24806:9;27093:14;-1:-1;;27089:28;6704:39;;;;25300:4;6704:39;;6495:253;-1:-1;;6495:253;13147:254;;6915:5;24979:12;7026:52;7071:6;7066:3;7059:4;7052:5;7048:16;7026:52;;;7090:16;;;;;13268:133;-1:-1;;13268:133;13677:650;-1:-1;;;8423:87;;8408:1;8529:11;;6197:37;;;;14179:12;;;6197:37;14290:12;;;13913:414;14334:372;10799:34;10779:55;;10868:34;10863:2;10854:12;;10847:56;10937:34;10932:2;10923:12;;10916:56;11006:34;11001:2;10992:12;;10985:56;11076:34;11070:3;11061:13;;11054:57;11146:34;11140:3;11131:13;;11124:57;-1:-1;;;11210:3;11201:13;;11194:44;10762:3;11257:13;;14514:192;14713:213;-1:-1;;;;;26280:54;;;;5966:37;;14831:2;14816:18;;14802:124;14933:435;-1:-1;;;;;26280:54;;;5966:37;;26280:54;;;;15271:2;15256:18;;5966:37;15354:2;15339:18;;6197:37;;;;15107:2;15092:18;;15078:290;15375:324;-1:-1;;;;;26280:54;;;;5966:37;;15685:2;15670:18;;6197:37;15521:2;15506:18;;15492:207;15706:396;;6107:5;25962:13;25955:21;6087:3;6080:34;15864:2;15976;15965:9;15961:18;15954:48;16016:76;15864:2;15853:9;15849:18;16078:6;16016:76;;;16008:84;15835:267;-1:-1;;;;15835:267;16109:1561;6197:37;;;-1:-1;;;;;26280:54;;;16731:2;16716:18;;5966:37;26280:54;;;16814:2;16799:18;;5966:37;26280:54;;;16897:2;16882:18;;5966:37;16980:3;16965:19;;6197:37;;;;26291:42;17049:19;;6197:37;;;;17148:3;17133:19;;6197:37;;;;17232:3;17217:19;;6197:37;17316:3;17301:19;;6197:37;17400:3;17385:19;;6197:37;17485:3;17470:19;;6197:37;17570:3;17555:19;;6197:37;26280:54;17655:3;17640:19;;5966:37;16566:3;16551:19;;16537:1133;17677:400;;6227:5;6204:3;6197:37;17837:2;17955;17944:9;17940:18;17933:48;17995:72;17837:2;17826:9;17822:18;18053:6;17995:72;;18084:539;6197:37;;;26496:4;26485:16;;;;18443:2;18428:18;;13100:35;18526:2;18511:18;;6197:37;18609:2;18594:18;;6197:37;18282:3;18267:19;;18253:370;18630:484;;18808:2;18829:17;18822:47;18883:76;18808:2;18797:9;18793:18;18945:6;18883:76;;;19007:9;19001:4;18997:20;18992:2;18981:9;18977:18;18970:48;19032:72;19099:4;19090:6;19032:72;;;19024:80;18779:335;-1:-1;;;;;18779:335;19121:407;19312:2;19326:47;;;8040:2;19297:18;;;25251:19;8076:25;25291:14;;;8056:46;8121:12;;;19283:245;19535:407;19726:2;19740:47;;;8779:2;19711:18;;;25251:19;-1:-1;;;25291:14;;;8795:42;8856:12;;;19697:245;19949:407;20140:2;20154:47;;;9107:2;20125:18;;;25251:19;-1:-1;;;25291:14;;;9123:45;9187:12;;;20111:245;20363:407;20554:2;20568:47;;;9438:1;20539:18;;;25251:19;-1:-1;;;25291:14;;;9453:30;9502:12;;;20525:245;20777:407;20968:2;20982:47;;;9753:2;20953:18;;;25251:19;-1:-1;;;25291:14;;;9769:37;9825:12;;;20939:245;21191:407;21382:2;21396:47;;;10076:2;21367:18;;;25251:19;-1:-1;;;25291:14;;;10092:36;10147:12;;;21353:245;21605:407;21796:2;21810:47;;;10398:2;21781:18;;;25251:19;-1:-1;;;25291:14;;;10414:42;10475:12;;;21767:245;22019:407;22210:2;22224:47;;;11509:2;22195:18;;;25251:19;-1:-1;;;25291:14;;;11525:44;11588:12;;;22181:245;22433:407;22624:2;22638:47;;;11839:1;22609:18;;;25251:19;-1:-1;;;25291:14;;;11854:31;11904:12;;;22595:245;22847:407;23038:2;23052:47;;;12155:2;23023:18;;;25251:19;-1:-1;;;25291:14;;;12171:34;12224:12;;;23009:245;23261:407;23452:2;23466:47;;;12475:2;23437:18;;;25251:19;-1:-1;;;25291:14;;;12491:45;12555:12;;;23423:245;23675:407;23866:2;23880:47;;;12806:2;23851:18;;;25251:19;12842:25;25291:14;;;12822:46;12887:12;;;23837:245;24089:213;6197:37;;;24207:2;24192:18;;24178:124;24309:256;24371:2;24365:9;24397:17;;;24472:18;24457:34;;24493:22;;;24454:62;24451:2;;;24529:1;;24519:12;24451:2;24371;24538:22;24349:216;;-1:-1;24349:216;26668:268;26733:1;26740:101;26754:6;26751:1;26748:13;26740:101;;;26821:11;;;26815:18;26802:11;;;26795:39;26776:2;26769:10;26740:101;;;26856:6;26853:1;26850:13;26847:2;;;-1:-1;;26733:1;26903:16;;26896:27;26717:219"
          },
          "methodIdentifiers": {
            "executeMetaTransaction((address,address,bytes,bytes,uint8),(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),address)": "26d431e2",
            "meta_nonce(address,uint256)": "53f1defe"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"MetaTx\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"enum GenericMetaTxProcessor.SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"}],\"internalType\":\"struct GenericMetaTxProcessor.Call\",\"name\":\"callData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batchNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"internalType\":\"struct GenericMetaTxProcessor.CallParams\",\"name\":\"callParams\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"name\":\"meta_nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/GenericMetaTxProcessor.sol\":\"GenericMetaTxProcessor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/GenericMetaTxProcessor.sol\":{\"content\":\"pragma solidity 0.6.1;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./Libraries/BytesUtil.sol\\\";\\nimport \\\"./Libraries/AddressUtils.sol\\\";\\nimport \\\"./Libraries/SigUtil.sol\\\";\\nimport \\\"./Libraries/SafeMath.sol\\\";\\nimport \\\"./Interfaces/ERC1271.sol\\\";\\nimport \\\"./Interfaces/ERC1271Constants.sol\\\";\\nimport \\\"./Interfaces/ERC1654.sol\\\";\\nimport \\\"./Interfaces/ERC1654Constants.sol\\\";\\nimport \\\"./Interfaces/ERC20.sol\\\";\\n\\ncontract GenericMetaTxProcessor is ERC1271Constants, ERC1654Constants {\\n\\n    // ////////////// LIBRARIES /////////////////\\n    using SafeMath for uint256;\\n    using AddressUtils for address;\\n    // //////////////////////////////////////////\\n\\n\\n    // /////////////// CONSTANTS ////////////////\\n    enum SignatureType { DIRECT, EIP1654, EIP1271 }\\n\\n    bytes32 constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,address verifyingContract)\\\"\\n    );\\n    bytes32 DOMAIN_SEPARATOR;\\n\\n    bytes32 constant ERC20METATRANSACTION_TYPEHASH = keccak256(\\n        \\\"ERC20MetaTransaction(address from,address to,address tokenContract,uint256 amount,bytes data,uint256 batchId,uint256 batchNonce,uint256 expiry,uint256 txGas,uint256 baseGas,uint256 tokenGasPrice,address relayer)\\\"\\n    );\\n    // //////////////////////////////////////////\\n\\n    // //////////////// EVENTS //////////////////\\n    event MetaTx(\\n        address indexed from,\\n        uint256 indexed batchId,\\n        uint256 indexed batchNonce,\\n        bool success,\\n        bytes returnData\\n    ); // TODO specify event as part of ERC-1776 ?\\n    // //////////////////////////////////////////\\n\\n    // //////////////// STATE ///////////////////\\n    mapping(address => mapping(uint256 => uint256)) batches;\\n    bool lock = false;\\n    // //////////////////////////////////////////\\n\\n    constructor() public {\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(\\\"Generic Meta Transaction\\\"),\\n                keccak256(\\\"1\\\"),\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    struct Call {\\n        address from;\\n        address to;\\n        bytes data;\\n        bytes signature;\\n        SignatureType signatureType;\\n    }\\n\\n    struct CallParams {\\n        address tokenContract;\\n        uint256 amount;\\n        uint256 batchId;\\n        uint256 batchNonce;\\n        uint256 expiry;\\n        uint256 txGas;\\n        uint256 baseGas;\\n        uint256 tokenGasPrice;\\n        address relayer;\\n    }\\n\\n    function executeMetaTransaction(\\n        Call memory callData,\\n        CallParams memory callParams,\\n        address tokenReceiver\\n    ) public returns (bool success, bytes memory returnData) {\\n        require(!lock, \\\"IN_PROGRESS\\\");\\n        lock = true;\\n        _ensureParametersValidity(callData, callParams);\\n        _ensureCorrectSigner(callData, callParams);\\n        (success, returnData) = _performERC20MetaTx(callData, callParams, tokenReceiver);\\n        lock = false;\\n    }\\n\\n    // ////////////////////////////// INTERNALS /////////////////////////\\n\\n    function _ensureParametersValidity(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal view {\\n        require(\\n            callParams.relayer == address(0) || callParams.relayer == msg.sender,\\n            \\\"wrong relayer\\\"\\n        );\\n        require(block.timestamp < callParams.expiry, \\\"expired\\\");\\n        require(batches[callData.from][callParams.batchId] + 1 == callParams.batchNonce, \\\"batchNonce out of order\\\");\\n    }\\n\\n    function _encodeMessage(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal view returns (bytes memory) {\\n        return abi.encodePacked(\\n            \\\"\\\\x19\\\\x01\\\",\\n            DOMAIN_SEPARATOR,\\n            keccak256(messageBytes(callData, callParams))\\n        );\\n    }\\n\\n    function messageBytes(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal pure returns(bytes memory) {\\n        return abi.encode(\\n            ERC20METATRANSACTION_TYPEHASH,\\n            callData.from,\\n            callData.to,\\n            callParams.tokenContract,\\n            callParams.amount,\\n            keccak256(callData.data),\\n            callParams.batchId,\\n            callParams.batchNonce,\\n            callParams.expiry,\\n            callParams.txGas,\\n            callParams.baseGas,\\n            callParams.tokenGasPrice,\\n            callParams.relayer\\n        );\\n    }\\n\\n    function _ensureCorrectSigner(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal view {\\n        bytes memory dataToHash = _encodeMessage(callData, callParams);\\n        if (callData.signatureType == SignatureType.EIP1271) {\\n            require(\\n                ERC1271(callData.from).isValidSignature(dataToHash, callData.signature) == ERC1271_MAGICVALUE,\\n                \\\"invalid 1271 signature\\\"\\n            );\\n        } else if(callData.signatureType == SignatureType.EIP1654){\\n            require(\\n                ERC1654(callData.from).isValidSignature(keccak256(dataToHash), callData.signature) == ERC1654_MAGICVALUE,\\n                \\\"invalid 1654 signature\\\"\\n            );\\n        } else {\\n            address signer = SigUtil.recover(keccak256(dataToHash), callData.signature);\\n            require(signer == callData.from, \\\"signer != from\\\");\\n        }\\n    }\\n\\n    function _charge(\\n        address from,\\n        ERC20 tokenContract,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 initialGas,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) internal {\\n        uint256 gasCharge = initialGas - gasleft();\\n        if(gasCharge > gasLimit) {\\n            gasCharge = gasLimit;\\n        }\\n        gasCharge += baseGasCharge;\\n        uint256 tokensToCharge = gasCharge * tokenGasPrice;\\n        require(tokensToCharge / gasCharge == tokenGasPrice, \\\"overflow\\\");\\n        tokenContract.transferFrom(from, tokenReceiver, tokensToCharge);\\n    }\\n\\n    function _executeWithSpecificGas(\\n        address to,\\n        uint256 gasLimit,\\n        bytes memory data\\n    ) internal returns (bool success, bytes memory returnData) {\\n        (success, returnData) = to.call.gas(gasLimit)(data);\\n        assert(gasleft() > gasLimit / 63); // not enough gas provided, assert to throw all gas // TODO use EIP-1930\\n    }\\n\\n    function _transferAndChargeForGas(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 amount,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) internal returns (bool) {\\n        uint256 initialGas = gasleft();\\n        tokenContract.transferFrom(from, to, amount);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, tokenContract, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n        return true;\\n    }\\n\\n    function _executeWithSpecificGasAndChargeForIt(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver,\\n        bytes memory data\\n    ) internal returns (bool success, bytes memory returnData) {\\n        uint256 initialGas = gasleft();\\n        (success, returnData) = _executeWithSpecificGas(to, gasLimit, data);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, tokenContract, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n    }\\n\\n    function _performERC20MetaTx(\\n        Call memory callData,\\n        CallParams memory callParams,\\n        address tokenReceiver\\n    ) internal returns (bool success, bytes memory returnData) {\\n        batches[callData.from][callParams.batchId] = callParams.batchNonce;\\n\\n        ERC20 tokenContract = ERC20(callParams.tokenContract);\\n\\n        if (callData.data.length == 0) {\\n            if(callParams.tokenGasPrice > 0) {\\n                _transferAndChargeForGas(\\n                    callData.from,\\n                    callData.to,\\n                    tokenContract,\\n                    callParams.amount,\\n                    callParams.txGas,\\n                    callParams.tokenGasPrice,\\n                    callParams.baseGas,\\n                    tokenReceiver\\n                );\\n            } else {\\n                require(tokenContract.transferFrom(callData.from, callData.to, callParams.amount), \\\"ERC20_TRANSFER_FAILED\\\");\\n            }\\n            success = true;\\n        } else {\\n            require(\\n                BytesUtil.doFirstParamEqualsAddress(callData.data, callData.from),\\n                \\\"first param != from\\\"\\n            );\\n            uint256 previousBalance;\\n            if(callParams.amount > 0) {\\n                previousBalance = tokenContract.balanceOf(address(this));\\n                require(tokenContract.transferFrom(callData.from, address(this), callParams.amount), \\\"ERC20_ALLOCATION_FAILED\\\");\\n                tokenContract.approve(callData.to, callParams.amount);\\n            }\\n            if(callParams.tokenGasPrice > 0) {\\n                (success, returnData) = _executeWithSpecificGasAndChargeForIt(\\n                    callData.from,\\n                    callData.to,\\n                    tokenContract,\\n                    callParams.txGas,\\n                    callParams.tokenGasPrice,\\n                    callParams.baseGas,\\n                    tokenReceiver,\\n                    callData.data\\n                );\\n            } else {\\n                (success, returnData) = _executeWithSpecificGas(callData.to, callParams.txGas, callData.data);\\n            }\\n            if(callParams.amount > 0) {\\n                uint256 newBalance = tokenContract.balanceOf(address(this));\\n                if (newBalance > previousBalance) {\\n                    require(tokenContract.transfer(callData.from, newBalance - previousBalance), \\\"ERC20_REFUND_FAILED\\\");\\n                }\\n            }\\n        }\\n\\n        emit MetaTx(callData.from, callParams.batchId, callParams.batchNonce, success, returnData);\\n    }\\n\\n    function meta_nonce(address from, uint256 batchId) external view returns(uint256) {\\n        return batches[from][batchId];\\n    }\\n}\\n\",\"keccak256\":\"0x978e4629751fe117530f25323bce657eedd285a99dc444422e270322388baeef\"},\"src/Interfaces/ERC1271.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC1271 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided data\\n    * @param data Arbitrary length data signed on the behalf of address(this)\\n    * @param signature Signature byte array associated with _data\\n    *\\n    * MUST return the bytes4 magic value 0x20c13b0b when function passes.\\n    * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\\n    * MUST allow external calls\\n    */\\n    function isValidSignature(bytes calldata data, bytes calldata signature)\\n        external\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0xd47b461d487409fbb422a86f77818cf4c3a904d21c80b7df63c42f5b114da68f\"},\"src/Interfaces/ERC1271Constants.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ncontract ERC1271Constants {\\n    bytes4 internal constant ERC1271_MAGICVALUE = 0x20c13b0b;\\n}\\n\",\"keccak256\":\"0xe699d97bb95be085cbb795821dd52673088d58d96976e26a0b066a856a6c1f3d\"},\"src/Interfaces/ERC1654.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC1654 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided hash\\n    * @param hash 32 bytes hash to be signed\\n    * @param signature Signature byte array associated with hash\\n    * @return magicValue 0x1626ba7e if valid else 0x00000000\\n    */\\n    function isValidSignature(bytes32 hash, bytes calldata signature)\\n        external\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4f006eeed4fdb08128571445ecdc75e13858dee0b7876431b46f75a2d9d9ff6a\"},\"src/Interfaces/ERC1654Constants.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ncontract ERC1654Constants {\\n    bytes4 internal constant ERC1654_MAGICVALUE = 0x1626ba7e;\\n}\\n\",\"keccak256\":\"0xd7650a572f69557bd6dfe3701a5bf02fd7148a127d7ec4a05dde59fca4ef19dd\"},\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0xeac7dc828dbde8ad86c624d39dca24f7f66c3986958d8a71cd69a6aa9b5ed679\"},\"src/Libraries/BytesUtil.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary BytesUtil {\\n    function memcpy(uint256 dest, uint256 src, uint256 len) internal pure {\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        uint256 mask = 256**(32 - len) - 1;\\n        assembly {\\n            let srcpart := and(mload(src), not(mask))\\n            let destpart := and(mload(dest), mask)\\n            mstore(dest, or(destpart, srcpart))\\n        }\\n    }\\n\\n    function pointerToBytes(uint256 src, uint256 len)\\n        internal\\n        pure\\n        returns (bytes memory)\\n    {\\n        bytes memory ret = new bytes(len);\\n        uint256 retptr;\\n        assembly {\\n            retptr := add(ret, 32)\\n        }\\n\\n        memcpy(retptr, src, len);\\n        return ret;\\n    }\\n\\n    function addressToBytes(address a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(\\n                add(m, 20),\\n                xor(0x140000000000000000000000000000000000000000, a)\\n            )\\n            mstore(0x40, add(m, 52))\\n            b := m\\n        }\\n    }\\n\\n    function uint256ToBytes(uint256 a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(add(m, 32), a)\\n            mstore(0x40, add(m, 64))\\n            b := m\\n        }\\n    }\\n\\n    function doFirstParamEqualsAddress(bytes memory data, address _address)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + 32)) {\\n            return false;\\n        }\\n        uint256 value;\\n        assembly {\\n            value := mload(add(data, 36))\\n        }\\n        return value == uint256(_address);\\n    }\\n\\n    function doParamEqualsUInt256(bytes memory data, uint256 i, uint256 value)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + (i + 1) * 32)) {\\n            return false;\\n        }\\n        uint256 offset = 36 + i * 32;\\n        uint256 valuePresent;\\n        assembly {\\n            valuePresent := mload(add(data, offset))\\n        }\\n        return valuePresent == value;\\n    }\\n\\n    function overrideFirst32BytesWithAddress(\\n        bytes memory data,\\n        address _address\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n\\n        bytes memory addressBytes = addressToBytes(_address);\\n        uint256 src;\\n        assembly {\\n            src := add(addressBytes, 32)\\n        }\\n\\n        memcpy(dest, src, 20);\\n        return data;\\n    }\\n\\n    function overrideFirstTwo32BytesWithAddressAndInt(\\n        bytes memory data,\\n        address _address,\\n        uint256 _value\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        uint256 src;\\n\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n        bytes memory bbytes = addressToBytes(_address);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 20);\\n\\n        assembly {\\n            dest := add(data, 68)\\n        } // 48 = 32 (offset) + 4 (func sig) + 32 (next slot)\\n        bbytes = uint256ToBytes(_value);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 32);\\n\\n        return data;\\n    }\\n}\\n\",\"keccak256\":\"0xbc2e25a5e410c9f7889beb483fe471a6aa55997ac0d3bafabd5042451a806529\"},\"src/Libraries/SafeMath.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that revert\\n */\\nlibrary SafeMath {\\n    /**\\n    * @dev Multiplies two numbers, throws on overflow.\\n    */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        c = a * b;\\n        require(c / a == b, \\\"overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Integer division of two numbers, truncating the quotient.\\n    */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        // uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return a / b;\\n    }\\n\\n    /**\\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\n    */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"undeflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n    * @dev Adds two numbers, throws on overflow.\\n    */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        c = a + b;\\n        require(c >= a, \\\"overflow\\\");\\n        return c;\\n    }\\n}\\n\",\"keccak256\":\"0x77a1483e56a10a93ab2d6b8ae7bd9a40d10e1c0edb9583cce13493b5549bf199\"},\"src/Libraries/SigUtil.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary SigUtil {\\n    function recover(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address recovered)\\n    {\\n        require(sig.length == 65);\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n        require(v == 27 || v == 28);\\n\\n        recovered = ecrecover(hash, v, r, s);\\n        require(recovered != address(0));\\n    }\\n\\n    function recoverWithZeroOnFailure(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address)\\n    {\\n        if (sig.length != 65) {\\n            return (address(0));\\n        }\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            return (address(0));\\n        } else {\\n            return ecrecover(hash, v, r, s);\\n        }\\n    }\\n\\n    // Builds a prefixed hash to mimic the behavior of eth_sign.\\n    function prefixed(bytes32 hash) internal pure returns (bytes memory) {\\n        return abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash);\\n    }\\n}\\n\",\"keccak256\":\"0x779ab6a267e945cd0f164fecf7f6366888e3f1bb36730391b47fd70d52a8f222\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      },
      "args": [],
      "address": "0xe5c05697666A18bBB0f1f620237402413cF7e1A1",
      "transactionHash": "0x6c7de970c679ad36ea1e8ec35b2833c86eeaadda9a2df02583937cfa6da5912b"
    },
    "MTX": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "supply",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "metaTxProcessor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "PERMIT_TYPEHASH",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approveFor",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "nonces",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "holder",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "nonce",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "expiry",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "allowed",
                "type": "bool"
              },
              {
                "internalType": "uint8",
                "name": "v",
                "type": "uint8"
              },
              {
                "internalType": "bytes32",
                "name": "r",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "s",
                "type": "bytes32"
              }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "version",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50604051610d8f380380610d8f8339818101604052604081101561003357600080fd5b508051602090910151600780546001600160a01b0319166001600160a01b0383161790556002829055604051806042610d4d8239604080519182900360420182208282018252600e83526d2230b49029ba30b13632b1b7b4b760911b6020938401528151808301835260018152603160f81b908401528151808401919091527f0b1461ddc0c1d5ded79a1db0f74dae949050a7c0b28728c724b24958c27a328b818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152306080808301919091528251808303909101815260a09091019091528051910120600055505050610c1a806101336000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633644e515116100975780638fcbaf0c116100665780638fcbaf0c146102bf57806395d89b411461031b578063a9059cbb14610323578063dd62ed3e1461034f576100f5565b80633644e5151461026357806354fd4d501461026b57806370a08231146102735780637ecebe0014610299576100f5565b806323b872dd116100d357806323b872dd146101d15780632b9917461461020757806330adf81f1461023d578063313ce56714610245576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b61010261037d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103a7565b604080519115158252519081900360200190f35b6101bf6103be565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b038135811691602081013590911690604001356103c4565b6101a36004803603606081101561021d57600080fd5b506001600160a01b038135811691602081013590911690604001356104b1565b6101bf610511565b61024d610535565b6040805160ff9092168252519081900360200190f35b6101bf61053a565b610102610540565b6101bf6004803603602081101561028957600080fd5b50356001600160a01b031661055d565b6101bf600480360360208110156102af57600080fd5b50356001600160a01b0316610574565b61031960048036036101008110156102d657600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e00135610586565b005b61010261087e565b6101a36004803603604081101561033957600080fd5b506001600160a01b03813516906020013561089d565b6101bf6004803603604081101561036557600080fd5b506001600160a01b03813581169160200135166108aa565b6040518060400160405280600e81526020016d2230b49029ba30b13632b1b7b4b760911b81525081565b60006103b433848461090b565b5060015b92915050565b60025490565b6000336001600160a01b038516148015906103ea57506007546001600160a01b03163314155b1561049c576001600160a01b0384166000908152600460209081526040808320338452909152902054600019811461049a5782811015610471576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600460209081526040808320338452909152902083820390555b505b6104a78484846109de565b5060019392505050565b6000336001600160a01b03851614610506576040805162461bcd60e51b815260206004820152601360248201527236b9b39739b2b73232b910109e9037bbb732b960691b604482015290519081900360640190fd5b6104a784848461090b565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b601290565b60005481565b604051806040016040528060018152602001603160f81b81525081565b600080600061056b84610b71565b95945050505050565b60016020526000908152604090205481565b600054604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020808301919091526001600160a01b03808d16838501819052908c166060840152608083018b905260a083018a905288151560c0808501919091528451808503909101815260e08401855280519083012061190160f01b61010085015261010284019590955261012280840195909552835180840390950185526101429092019092528251929091019190912090610686576040805162461bcd60e51b815260206004820152601560248201527404461692f696e76616c69642d616464726573732d3605c1b604482015290519081900360640190fd5b6040805160008152602080820180845284905260ff8716828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa1580156106dd573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610741576040805162461bcd60e51b815260206004820152601260248201527111185a4bda5b9d985b1a590b5c195c9b5a5d60721b604482015290519081900360640190fd5b85158061074e5750854211155b610794576040805162461bcd60e51b815260206004820152601260248201527111185a4bdc195c9b5a5d0b595e1c1a5c995960721b604482015290519081900360640190fd5b6001600160a01b03891660009081526001602081905260409091208054918201905587146107fd576040805162461bcd60e51b81526020600482015260116024820152704461692f696e76616c69642d6e6f6e636560781b604482015290519081900360640190fd5b60008561080b57600061080f565b6000195b6001600160a01b03808c166000818152600460209081526040808320948f168084529482529182902085905581518581529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a350505050505050505050565b6040518060400160405280600381526020016244414960e81b81525081565b60006103b43384846109de565b60006001600160a01b038216158015906108d157506007546001600160a01b038381169116145b156108df57506000196103b8565b506001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001600160a01b0383161580159061092b57506001600160a01b03821615155b61097c576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420617070726f7665207769746820307830000000000000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610a2e576040805162461bcd60e51b8152602060048201526012602482015271043616e6e6f742073656e6420746f203078360741b604482015290519081900360640190fd5b600080610a3a85610b71565b9150915082811015610a85576040805162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da08199d5b99608a1b604482015290519081900360640190fd5b81610ab65760058054820190556001600160a01b0385166000908152600660205260409020805460ff191660011790555b6001600160a01b03851660009081526003602052604090208382039055610adc84610b71565b909250905081610b125760058054820190556001600160a01b0384166000908152600660205260409020805460ff191660011790555b6001600160a01b0380851660008181526003602090815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b038116600090815260036020908152604080832054600690925282205460ff16158015610ba85750600254600554105b15610bda5760009150600554600254039050678ac7230489e80000811115610bd55750678ac7230489e800005b610bdf565b600191505b91509156fea2646970667358221220a0bf757f4cef41f5a863ecc297bf4782a80946e9ed200868db621f7effc4ecfc64736f6c63430006010033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e747261637429",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD8F CODESIZE SUB DUP1 PUSH2 0xD8F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x42 PUSH2 0xD4D DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x42 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xE DUP4 MSTORE PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB1461DDC0C1D5DED79A1DB0F74DAE949050A7C0B28728C724B24958C27A328B DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SSTORE POP POP POP PUSH2 0xC1A DUP1 PUSH2 0x133 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x8FCBAF0C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34F JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x299 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x245 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x169 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x511 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x53A JUMP JUMPDEST PUSH2 0x102 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x574 JUMP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3EA JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x49C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x49A JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x36B9B39739B2B73232B910109E9037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x56B DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0xC0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP5 ADD DUP6 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH2 0x122 DUP1 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH2 0x142 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x686 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4461692F696E76616C69642D616464726573732D3 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP5 SWAP1 MSTORE PUSH1 0xFF DUP8 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDA5B9D985B1A590B5C195C9B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0x74E JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x794 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDC195C9B5A5D0B595E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD SWAP1 SSTORE DUP8 EQ PUSH2 0x7FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4461692F696E76616C69642D6E6F6E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x80B JUMPI PUSH1 0x0 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x0 NOT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP16 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x444149 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8D1 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x8DF JUMPI POP PUSH1 0x0 NOT PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x92B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x97C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F7665207769746820307830000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E6E6F742073656E6420746F2030783 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3A DUP6 PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xA85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD08195B9BDD59DA08199D5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xAB6 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE PUSH2 0xADC DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xB12 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 DUP9 ADD SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD LT JUMPDEST ISZERO PUSH2 0xBDA JUMPI PUSH1 0x0 SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD SUB SWAP1 POP PUSH8 0x8AC7230489E80000 DUP2 GT ISZERO PUSH2 0xBD5 JUMPI POP PUSH8 0x8AC7230489E80000 JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xBF PUSH22 0x7F4CEF41F5A863ECC297BF4782A80946E9ED200868DB PUSH3 0x1F7EFF 0xC4 0xEC 0xFC PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C616464726573 PUSH20 0x20766572696679696E67436F6E74726163742900 ",
            "sourceMap": "59:10010:19:-:0;;;1353:397;8:9:-1;5:2;;;30:1;27;20:12;5:2;1353:397:19;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1353:397:19;;;;;;;1423:16;:34;;-1:-1:-1;;;;;;1423:34:19;-1:-1:-1;;;;;1423:34:19;;;;;1467:12;:21;;;1353:397;1551:79;;;;;;;;;;;;;;;;;1660:4;;;;;;;;-1:-1:-1;;;1660:4:19;;;;;1696:7;;;;;;;;;;-1:-1:-1;;;1696:7:19;;;;1527:215;;;;;;;;;1644:22;1527:215;;;;1680:25;1527:215;;;;1727:4;1527:215;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1527:215:19;;;;;;;1517:226;;;;;-1:-1:-1;1498:245:19;-1:-1:-1;;;59:10010:19;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80633644e515116100975780638fcbaf0c116100665780638fcbaf0c146102bf57806395d89b411461031b578063a9059cbb14610323578063dd62ed3e1461034f576100f5565b80633644e5151461026357806354fd4d501461026b57806370a08231146102735780637ecebe0014610299576100f5565b806323b872dd116100d357806323b872dd146101d15780632b9917461461020757806330adf81f1461023d578063313ce56714610245576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b61010261037d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103a7565b604080519115158252519081900360200190f35b6101bf6103be565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b038135811691602081013590911690604001356103c4565b6101a36004803603606081101561021d57600080fd5b506001600160a01b038135811691602081013590911690604001356104b1565b6101bf610511565b61024d610535565b6040805160ff9092168252519081900360200190f35b6101bf61053a565b610102610540565b6101bf6004803603602081101561028957600080fd5b50356001600160a01b031661055d565b6101bf600480360360208110156102af57600080fd5b50356001600160a01b0316610574565b61031960048036036101008110156102d657600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608081013515159060ff60a0820135169060c08101359060e00135610586565b005b61010261087e565b6101a36004803603604081101561033957600080fd5b506001600160a01b03813516906020013561089d565b6101bf6004803603604081101561036557600080fd5b506001600160a01b03813581169160200135166108aa565b6040518060400160405280600e81526020016d2230b49029ba30b13632b1b7b4b760911b81525081565b60006103b433848461090b565b5060015b92915050565b60025490565b6000336001600160a01b038516148015906103ea57506007546001600160a01b03163314155b1561049c576001600160a01b0384166000908152600460209081526040808320338452909152902054600019811461049a5782811015610471576040805162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682066756e647320616c6c6f7765640000000000000000604482015290519081900360640190fd5b6001600160a01b0385166000908152600460209081526040808320338452909152902083820390555b505b6104a78484846109de565b5060019392505050565b6000336001600160a01b03851614610506576040805162461bcd60e51b815260206004820152601360248201527236b9b39739b2b73232b910109e9037bbb732b960691b604482015290519081900360640190fd5b6104a784848461090b565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b601290565b60005481565b604051806040016040528060018152602001603160f81b81525081565b600080600061056b84610b71565b95945050505050565b60016020526000908152604090205481565b600054604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020808301919091526001600160a01b03808d16838501819052908c166060840152608083018b905260a083018a905288151560c0808501919091528451808503909101815260e08401855280519083012061190160f01b61010085015261010284019590955261012280840195909552835180840390950185526101429092019092528251929091019190912090610686576040805162461bcd60e51b815260206004820152601560248201527404461692f696e76616c69642d616464726573732d3605c1b604482015290519081900360640190fd5b6040805160008152602080820180845284905260ff8716828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa1580156106dd573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b031614610741576040805162461bcd60e51b815260206004820152601260248201527111185a4bda5b9d985b1a590b5c195c9b5a5d60721b604482015290519081900360640190fd5b85158061074e5750854211155b610794576040805162461bcd60e51b815260206004820152601260248201527111185a4bdc195c9b5a5d0b595e1c1a5c995960721b604482015290519081900360640190fd5b6001600160a01b03891660009081526001602081905260409091208054918201905587146107fd576040805162461bcd60e51b81526020600482015260116024820152704461692f696e76616c69642d6e6f6e636560781b604482015290519081900360640190fd5b60008561080b57600061080f565b6000195b6001600160a01b03808c166000818152600460209081526040808320948f168084529482529182902085905581518581529151949550929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92592918290030190a350505050505050505050565b6040518060400160405280600381526020016244414960e81b81525081565b60006103b43384846109de565b60006001600160a01b038216158015906108d157506007546001600160a01b038381169116145b156108df57506000196103b8565b506001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001600160a01b0383161580159061092b57506001600160a01b03821615155b61097c576040805162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420617070726f7665207769746820307830000000000000000000604482015290519081900360640190fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610a2e576040805162461bcd60e51b8152602060048201526012602482015271043616e6e6f742073656e6420746f203078360741b604482015290519081900360640190fd5b600080610a3a85610b71565b9150915082811015610a85576040805162461bcd60e51b815260206004820152600f60248201526e1b9bdd08195b9bdd59da08199d5b99608a1b604482015290519081900360640190fd5b81610ab65760058054820190556001600160a01b0385166000908152600660205260409020805460ff191660011790555b6001600160a01b03851660009081526003602052604090208382039055610adc84610b71565b909250905081610b125760058054820190556001600160a01b0384166000908152600660205260409020805460ff191660011790555b6001600160a01b0380851660008181526003602090815260409182902085880190558151878152915192938916927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050505050565b6001600160a01b038116600090815260036020908152604080832054600690925282205460ff16158015610ba85750600254600554105b15610bda5760009150600554600254039050678ac7230489e80000811115610bd55750678ac7230489e800005b610bdf565b600191505b91509156fea2646970667358221220a0bf757f4cef41f5a863ecc297bf4782a80946e9ed200868db621f7effc4ecfc64736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x8FCBAF0C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8FCBAF0C EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34F JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x299 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x245 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x169 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x511 JUMP JUMPDEST PUSH2 0x24D PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x53A JUMP JUMPDEST PUSH2 0x102 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x574 JUMP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0xFF PUSH1 0xA0 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xE0 ADD CALLDATALOAD PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3EA JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x49C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x49A JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682066756E647320616C6C6F7765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ PUSH2 0x506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x36B9B39739B2B73232B910109E9037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A7 DUP5 DUP5 DUP5 PUSH2 0x90B JUMP JUMPDEST PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB DUP2 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x56B DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xEA2AA0A1BE11A07ED86D755C93467F4F82362B452371D1BA94D1715123511ACB PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND DUP4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP1 DUP13 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0xC0 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP5 ADD DUP6 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x102 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH2 0x122 DUP1 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP6 ADD DUP6 MSTORE PUSH2 0x142 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP3 MLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH2 0x686 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4461692F696E76616C69642D616464726573732D3 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP5 SWAP1 MSTORE PUSH1 0xFF DUP8 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x741 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDA5B9D985B1A590B5C195C9B5A5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 ISZERO DUP1 PUSH2 0x74E JUMPI POP DUP6 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x794 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11185A4BDC195C9B5A5D0B595E1C1A5C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ADD SWAP1 SSTORE DUP8 EQ PUSH2 0x7FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4461692F696E76616C69642D6E6F6E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH2 0x80B JUMPI PUSH1 0x0 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x0 NOT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP16 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x444149 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4 CALLER DUP5 DUP5 PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x8D1 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x8DF JUMPI POP PUSH1 0x0 NOT PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x92B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0x97C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420617070726F7665207769746820307830000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA2E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E6E6F742073656E6420746F2030783 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA3A DUP6 PUSH2 0xB71 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 DUP2 LT ISZERO PUSH2 0xA85 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1B9BDD08195B9BDD59DA08199D5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 PUSH2 0xAB6 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP3 SUB SWAP1 SSTORE PUSH2 0xADC DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0xB12 JUMPI PUSH1 0x5 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 DUP9 ADD SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP10 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xBA8 JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x5 SLOAD LT JUMPDEST ISZERO PUSH2 0xBDA JUMPI PUSH1 0x0 SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x2 SLOAD SUB SWAP1 POP PUSH8 0x8AC7230489E80000 DUP2 GT ISZERO PUSH2 0xBD5 JUMPI POP PUSH8 0x8AC7230489E80000 JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xBF PUSH22 0x7F4CEF41F5A863ECC297BF4782A80946E9ED200868DB PUSH3 0x1F7EFF 0xC4 0xEC 0xFC PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "59:10010:19:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59:10010:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;523:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;523:51:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5741:178;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5741:178:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1875:89;;;:::i;:::-;;;;;;;;;;;;;;;;4229:672;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4229:672:19;;;;;;;;;;;;;;;;;:::i;6211:286::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6211:286:19;;;;;;;;;;;;;;;;;:::i;361:108::-;;;:::i;3476:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;166:45;;;:::i;626:38::-;;;:::i;2605:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2605:150:19;-1:-1:-1;;;;;2605:150:19;;:::i;475:42::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;475:42:19;-1:-1:-1;;;;;475:42:19;;:::i;9074:993::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;9074:993:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;580:40;;;:::i;3775:167::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3775:167:19;;;;;;;;:::i;3033:334::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3033:334:19;;;;;;;;;;:::i;523:51::-;;;;;;;;;;;;;;-1:-1:-1;;;523:51:19;;;;:::o;5741:178::-;5823:12;5851:40;5863:10;5875:7;5884:6;5851:11;:40::i;:::-;-1:-1:-1;5908:4:19;5741:178;;;;;:::o;1875:89::-;1945:12;;1875:89;:::o;4229:672::-;4325:12;4357:10;-1:-1:-1;;;;;4357:18:19;;;;;;:52;;-1:-1:-1;4393:16:19;;-1:-1:-1;;;;;4393:16:19;4379:10;:30;;4357:52;4353:484;;;-1:-1:-1;;;;;4452:17:19;;4425:24;4452:17;;;:11;:17;;;;;;;;4470:10;4452:29;;;;;;;;-1:-1:-1;;4499:32:19;;4495:332;;4702:6;4682:16;:26;;4674:63;;;;;-1:-1:-1;;;4674:63:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4755:17:19;;;;;;:11;:17;;;;;;;;4773:10;4755:29;;;;;;;4787:25;;;4755:57;;4495:332;4353:484;;4846:27;4856:4;4862:2;4866:6;4846:9;:27::i;:::-;-1:-1:-1;4890:4:19;4229:672;;;;;:::o;6211:286::-;6311:12;6360:10;-1:-1:-1;;;;;6360:19:19;;;6339:85;;;;;-1:-1:-1;;;6339:85:19;;;;;;;;;;;;-1:-1:-1;;;6339:85:19;;;;;;;;;;;;;;;6434:35;6446:5;6453:7;6462:6;6434:11;:35::i;361:108::-;403:66;361:108;:::o;3476:81::-;3547:2;3476:81;:::o;166:45::-;;;;:::o;626:38::-;;;;;;;;;;;;;;-1:-1:-1;;;626:38:19;;;;:::o;2605:150::-;2660:7;2680:6;2688:15;2707:17;2718:5;2707:10;:17::i;:::-;2679:45;2605:150;-1:-1:-1;;;;;2605:150:19:o;475:42::-;;;;;;;;;;;;;:::o;9074:993::-;9242:14;9343:16;9387:253;;;403:66;9387:253;;;;;;;;-1:-1:-1;;;;;9387:253:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9387:253:19;;;;;9377:264;;;;;;-1:-1:-1;;;9281:370:19;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9281:370:19;;;;;;;9271:381;;;;;;;;;;;9663:54;;;;;-1:-1:-1;;;9663:54:19;;;;;;;;;;;;-1:-1:-1;;;9663:54:19;;;;;;;;;;;;;;;9745:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9745:26:19;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9745:26:19;;;;;;;;-1:-1:-1;;;;;9735:36:19;:6;-1:-1:-1;;;;;9735:36:19;;9727:67;;;;;-1:-1:-1;;;9727:67:19;;;;;;;;;;;;-1:-1:-1;;;9727:67:19;;;;;;;;;;;;;;;9812:11;;;:28;;;9834:6;9827:3;:13;;9812:28;9804:59;;;;;-1:-1:-1;;;9804:59:19;;;;;;;;;;;;-1:-1:-1;;;9804:59:19;;;;;;;;;;;;;;;-1:-1:-1;;;;;9890:14:19;;;;;;:6;:14;;;;;;;;:16;;;;;;;9881:25;;9873:55;;;;;-1:-1:-1;;;9873:55:19;;;;;;;;;;;;-1:-1:-1;;;9873:55:19;;;;;;;;;;;;;;;9938:8;9949:7;:22;;9970:1;9949:22;;;-1:-1:-1;;9949:22:19;-1:-1:-1;;;;;9981:19:19;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:34;;;10030:30;;;;;;;9938:33;;-1:-1:-1;9981:28:19;;:19;;10030:30;;;;;;;;;9074:993;;;;;;;;;;:::o;580:40::-;;;;;;;;;;;;;;-1:-1:-1;;;580:40:19;;;;:::o;3775:167::-;3853:12;3881:33;3891:10;3903:2;3907:6;3881:9;:33::i;3033:334::-;3129:17;-1:-1:-1;;;;;3165:21:19;;;;;;:52;;-1:-1:-1;3201:16:19;;-1:-1:-1;;;;;3190:27:19;;;3201:16;;3190:27;3165:52;3162:155;;;-1:-1:-1;;;3233:73:19;;3162:155;-1:-1:-1;;;;;;3333:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3033:334::o;6504:314::-;-1:-1:-1;;;;;6625:19:19;;;;;;:44;;-1:-1:-1;;;;;;6648:21:19;;;;6625:44;6604:114;;;;;-1:-1:-1;;;6604:114:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6728:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;6779:32;;;;;;;;;;;;;;;;;6504:314;;;:::o;6824:781::-;-1:-1:-1;;;;;6912:16:19;;6904:47;;;;;-1:-1:-1;;;6904:47:19;;;;;;;;;;;;-1:-1:-1;;;6904:47:19;;;;;;;;;;;;;;;6962:12;6976:22;7002:16;7013:4;7002:10;:16::i;:::-;6961:57;;;;7054:6;7036:14;:24;;7028:52;;;;;-1:-1:-1;;;7028:52:19;;;;;;;;;;;;-1:-1:-1;;;7028:52:19;;;;;;;;;;;;;;;7095:7;7090:154;;7118:14;:32;;;;;;-1:-1:-1;;;;;7164:14:19;;7118;7164;;;:8;:14;;;;;:21;;-1:-1:-1;;7164:21:19;-1:-1:-1;7164:21:19;;;7090:154;-1:-1:-1;;;;;7253:15:19;;;;;;:9;:15;;;;;7271:23;;;7253:41;;7333:14;7344:2;7333:10;:14::i;:::-;7305:42;;-1:-1:-1;7305:42:19;-1:-1:-1;7305:42:19;7357:152;;7385:14;:32;;;;;;-1:-1:-1;;;;;7431:12:19;;7385:14;7431:12;;;:8;:12;;;;;:19;;-1:-1:-1;;7431:19:19;-1:-1:-1;7431:19:19;;;7357:152;-1:-1:-1;;;;;7518:13:19;;;;;;;:9;:13;;;;;;;;;7534:23;;;7518:39;;7572:26;;;;;;;7518:13;;7572:26;;;;;;;;;;;;;6824:781;;;;;:::o;2005:446::-;-1:-1:-1;;;;;2114:16:19;;2063:12;2114:16;;;:9;:16;;;;;;;;;2145:8;:15;;;;;;;;2144:16;:49;;;;;2181:12;;2164:14;;:29;2144:49;2140:305;;;2219:5;2209:15;;2263:14;;2248:12;;:29;2238:39;;2305:20;2295:7;:30;2291:99;;;-1:-1:-1;2355:20:19;2291:99;2140:305;;;2430:4;2420:14;;2140:305;2005:446;;;:::o"
          },
          "methodIdentifiers": {
            "DOMAIN_SEPARATOR()": "3644e515",
            "PERMIT_TYPEHASH()": "30adf81f",
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "approveFor(address,address,uint256)": "2b991746",
            "balanceOf(address)": "70a08231",
            "decimals()": "313ce567",
            "name()": "06fdde03",
            "nonces(address)": "7ecebe00",
            "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd",
            "version()": "54fd4d50"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"metaTxProcessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"address whose token is allowed.\",\"spender\":\"address allowed to transfer.\"},\"returns\":{\"remaining\":\"the amount of token `spender` is allowed to transfer on behalf of `owner`.\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"the number of tokens allowed.\",\"spender\":\"address to be given rights to transfer.\"},\"returns\":{\"success\":\"true if success.\"}},\"approveFor(address,address,uint256)\":{\"params\":{\"amount\":\"the number of tokens allowed.\",\"owner\":\"address whose token is allowed.\",\"spender\":\"address to be given rights to transfer.\"},\"returns\":{\"success\":\"true if success.\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address to query the balance of.\"},\"returns\":{\"_0\":\"The amount owned by `owner`.\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"the number of tokens transfered.\",\"to\":\"the recipient address of the tokens transfered.\"},\"returns\":{\"success\":\"true if success.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"the number of tokens transfered.\",\"from\":\"whose token it is transferring from.\",\"to\":\"the recipient address of the tokens transfered.\"},\"returns\":{\"success\":\"true if success.\"}}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"gets allowance of `spender` for `owner`'s tokens.\"},\"approve(address,uint256)\":{\"notice\":\"approve `spender` to transfer `amount` tokens.\"},\"approveFor(address,address,uint256)\":{\"notice\":\"approve `spender` to transfer `amount` tokens from `owner`.\"},\"balanceOf(address)\":{\"notice\":\"Gets the balance of `owner`.\"},\"decimals()\":{\"notice\":\"returns the number of decimals for that token.\"},\"totalSupply()\":{\"notice\":\"Gets the total number of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `from` to `to`.\"}}}},\"settings\":{\"compilationTarget\":{\"src/Test/PAW.sol\":\"PAW\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Test/PAW.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../Interfaces/ERC20.sol\\\";\\n\\ncontract PAW /*is ERC20*/{ // interface seems to require overrides :(\\n\\n     // --- EIP712 niceties ---\\n    bytes32 public /*immutable*/ DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH = 0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\\n    mapping (address => uint256) public nonces;\\n    string  public constant name     = \\\"Dai Stablecoin\\\";\\n    string  public constant symbol   = \\\"DAI\\\";\\n    string  public constant version  = \\\"1\\\";\\n\\n    ///////////////// EVENTS FOR ERC20 ////////////////\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    ///////////////////////////////////////////////////\\n\\n    uint256 internal /*immutable*/ _totalSupply;\\n    mapping(address => uint256) internal _balances;\\n    mapping(address => mapping(address => uint256)) internal _allowances;\\n\\n    uint256 internal _supplyClaimed;\\n    mapping(address => bool) internal _claimed; // TODO optimize it by storing it in the same slot as _balances\\n    address internal /*immutable*/ _metaTxProcessor;\\n\\n    constructor(uint256 supply, address metaTxProcessor) public {\\n        _metaTxProcessor = metaTxProcessor;\\n        _totalSupply = supply;\\n        DOMAIN_SEPARATOR = keccak256(abi.encode(\\n            keccak256(\\\"EIP712Domain(string name,string version,address verifyingContract)\\\"),\\n            keccak256(bytes(name)),\\n            keccak256(bytes(version)),\\n            address(this)\\n        ));\\n    }\\n\\n    /// @notice Gets the total number of tokens in existence.\\n    /// @return the total number of tokens in existence.\\n    function totalSupply() public view returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    // function hasClaimed() TODO\\n\\n    function _balanceOf(address owner) internal view returns (bool claimed, uint256 balance) {\\n        balance = _balances[owner];\\n        if (!_claimed[owner] && _supplyClaimed < _totalSupply) {\\n            claimed = false;\\n            balance = _totalSupply - _supplyClaimed;\\n            if (balance > 10000000000000000000) {\\n                balance = 10000000000000000000;\\n            }\\n        } else {\\n            claimed = true;\\n        }\\n    }\\n\\n    /// @notice Gets the balance of `owner`.\\n    /// @param owner The address to query the balance of.\\n    /// @return The amount owned by `owner`.\\n    function balanceOf(address owner) public view returns (uint256) {\\n        (bool _, uint256 balance) = _balanceOf(owner);\\n        return balance;\\n    }\\n\\n    /// @notice gets allowance of `spender` for `owner`'s tokens.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender address allowed to transfer.\\n    /// @return remaining the amount of token `spender` is allowed to transfer on behalf of `owner`.\\n    function allowance(address owner, address spender)\\n        public\\n        view\\n        returns (uint256 remaining)\\n    {\\n        if(spender != address(0) && spender == _metaTxProcessor) {\\n            return 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\\n        }\\n        return _allowances[owner][spender];\\n    }\\n\\n    /// @notice returns the number of decimals for that token.\\n    /// @return the number of decimals.\\n    function decimals() public view returns (uint8) {\\n        return uint8(18);\\n    }\\n\\n    /// @notice Transfer `amount` tokens to `to`.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return success true if success.\\n    function transfer(address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n\\n    /// @notice Transfer `amount` tokens from `from` to `to`.\\n    /// @param from whose token it is transferring from.\\n    /// @param to the recipient address of the tokens transfered.\\n    /// @param amount the number of tokens transfered.\\n    /// @return success true if success.\\n    function transferFrom(address from, address to, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        if (msg.sender != from && msg.sender != _metaTxProcessor) {\\n            uint256 currentAllowance = _allowances[from][msg.sender];\\n            if (currentAllowance != (2**256) - 1) {\\n                // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n                require(currentAllowance >= amount, \\\"Not enough funds allowed\\\");\\n                _allowances[from][msg.sender] = currentAllowance - amount;\\n            }\\n        }\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    // /// @notice burn `amount` tokens.\\n    // /// @param amount the number of tokens to burn.\\n    // /// @return true if success.\\n    // function burn(uint256 amount) external returns (bool) {\\n    //     _burn(msg.sender, amount);\\n    //     return true;\\n    // }\\n\\n    // /// @notice burn `amount` tokens from `owner`.\\n    // /// @param owner address whose token is to burn.\\n    // /// @param amount the number of token to burn.\\n    // /// @return true if success.\\n    // function burnFor(address owner, uint256 amount) external returns (bool) {\\n    //     _burn(owner, amount);\\n    //     return true;\\n    // }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens.\\n    /// @param spender address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return success true if success.\\n    function approve(address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        _approveFor(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    /// @notice approve `spender` to transfer `amount` tokens from `owner`.\\n    /// @param owner address whose token is allowed.\\n    /// @param spender  address to be given rights to transfer.\\n    /// @param amount the number of tokens allowed.\\n    /// @return success true if success.\\n    function approveFor(address owner, address spender, uint256 amount)\\n        public\\n        returns (bool success)\\n    {\\n        require(\\n            msg.sender == owner,\\n            \\\"msg.sender != owner\\\"\\n        );\\n        _approveFor(owner, spender, amount);\\n        return true;\\n    }\\n\\n\\n    function _approveFor(address owner, address spender, uint256 amount)\\n        internal\\n    {\\n        require(\\n            owner != address(0) && spender != address(0),\\n            \\\"Cannot approve with 0x0\\\"\\n        );\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    function _transfer(address from, address to, uint256 amount) internal {\\n        require(to != address(0), \\\"Cannot send to 0x0\\\");\\n        (bool claimed, uint256 currentBalance) = _balanceOf(from);\\n        require(currentBalance >= amount, \\\"not enough fund\\\");\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[from] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[from] = currentBalance - amount;\\n\\n        (claimed, currentBalance) = _balanceOf(to);\\n        if (!claimed) {\\n            _supplyClaimed += currentBalance;\\n            _claimed[to] = true; // TODO use bit in _balances to reuse same slot\\n        }\\n        _balances[to] = currentBalance + amount;\\n        emit Transfer(from, to, amount);\\n    }\\n\\n    // function _mint(address to, uint256 amount) internal {\\n    //     require(to != address(0), \\\"Cannot mint to 0x0\\\");\\n    //     require(amount > 0, \\\"cannot mint 0 tokens\\\");\\n    //     uint256 currentTotalSupply = _totalSupply;\\n    //     uint256 newTotalSupply = currentTotalSupply + amount;\\n    //     require(newTotalSupply > currentTotalSupply, \\\"overflow\\\");\\n    //     _totalSupply = newTotalSupply;\\n    //     _balances[to] += amount;\\n    //     emit Transfer(address(0), to, amount);\\n    // }\\n\\n    // function _burn(address from, uint256 amount) internal {\\n    //     require(amount > 0, \\\"cannot burn 0 tokens\\\");\\n    //     if (msg.sender != from) {\\n    //         uint256 currentAllowance = _allowances[from][msg.sender];\\n    //         require(\\n    //             currentAllowance >= amount,\\n    //             \\\"Not enough funds allowed\\\"\\n    //         );\\n    //         if (currentAllowance != (2**256) - 1) {\\n    //             // save gas when allowance is maximal by not reducing it (see https://github.com/ethereum/EIPs/issues/717)\\n    //             _allowances[from][msg.sender] = currentAllowance - amount;\\n    //         }\\n    //     }\\n\\n    //     uint256 currentBalance = balanceOf(from);\\n    //     require(currentBalance >= amount, \\\"Not enough funds\\\");\\n    //     _balances[from] = currentBalance - amount;\\n    //     _totalSupply -= amount;\\n    //     emit Transfer(from, address(0), amount);\\n    // }\\n\\n    // --- Approve by signature ---\\n    function permit(address holder, address spender, uint256 nonce, uint256 expiry,\\n                    bool allowed, uint8 v, bytes32 r, bytes32 s) external\\n    {\\n        bytes32 digest =\\n            keccak256(abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(abi.encode(PERMIT_TYPEHASH,\\n                                     holder,\\n                                     spender,\\n                                     nonce,\\n                                     expiry,\\n                                     allowed))\\n        ));\\n\\n        require(holder != address(0), \\\"Dai/invalid-address-0\\\");\\n        require(holder == ecrecover(digest, v, r, s), \\\"Dai/invalid-permit\\\");\\n        require(expiry == 0 || now <= expiry, \\\"Dai/permit-expired\\\");\\n        require(nonce == nonces[holder]++, \\\"Dai/invalid-nonce\\\");\\n        uint wad = allowed ? uint(-1) : 0;\\n        _allowances[holder][spender] = wad;\\n        emit Approval(holder, spender, wad);\\n    }\\n}\\n\",\"keccak256\":\"0xec82c958ca88eff94163197e4cce71064026ba70160dce25bae5b20b4163ba94\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "allowance(address,address)": {
              "notice": "gets allowance of `spender` for `owner`'s tokens."
            },
            "approve(address,uint256)": {
              "notice": "approve `spender` to transfer `amount` tokens."
            },
            "approveFor(address,address,uint256)": {
              "notice": "approve `spender` to transfer `amount` tokens from `owner`."
            },
            "balanceOf(address)": {
              "notice": "Gets the balance of `owner`."
            },
            "decimals()": {
              "notice": "returns the number of decimals for that token."
            },
            "totalSupply()": {
              "notice": "Gets the total number of tokens in existence."
            },
            "transfer(address,uint256)": {
              "notice": "Transfer `amount` tokens to `to`."
            },
            "transferFrom(address,address,uint256)": {
              "notice": "Transfer `amount` tokens from `from` to `to`."
            }
          }
        }
      },
      "args": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "0xe5c05697666A18bBB0f1f620237402413cF7e1A1"
      ],
      "address": "0x33a0d701F0619AFb407963D6B7F9781dc40f9fcF",
      "transactionHash": "0xe06b49dfd0ce67546a8380df02c0ccf9ee401527104d5b655bdd8d4e0542321f"
    },
    "Numbers": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "metaTxProcessor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "approved",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "name": "_operators",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "_operatorsForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "approveFor",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "getApproved",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "isOperator",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "ownerOf",
            "outputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAllFor",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "id",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              }
            ],
            "name": "tokenByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "6080604052600160055534801561001557600080fd5b506040516112c43803806112c48339818101604052602081101561003857600080fd5b5051600080546001600160a01b039092166001600160a01b031990921691909117905561125a8061006a6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb46514610359578063b88d4fde14610387578063b9b710e91461044d578063e985e9c51461046a578063eeb5a5d11461049857610116565b80636352211e146102c25780636a627842146102df57806370a08231146103055780639d786bbc1461032b57610116565b806323b872dd116100e957806323b872dd146101d75780632b9917461461020d5780632f745c591461024357806342842e0e1461026f5780634f6ccce7146102a557610116565b806301ffc9a71461011b578063081812fc14610156578063095ea7b31461018f57806318160ddd146101bd575b600080fd5b6101426004803603602081101561013157600080fd5b50356001600160e01b0319166104d0565b604080519115158252519081900360200190f35b6101736004803603602081101561016c57600080fd5b5035610524565b604080516001600160a01b039092168252519081900360200190f35b6101bb600480360360408110156101a557600080fd5b506001600160a01b0381351690602001356105b4565b005b6101c561064d565b60408051918252519081900360200190f35b6101bb600480360360608110156101ed57600080fd5b506001600160a01b03813581169160208101359091169060400135610657565b6101bb6004803603606081101561022357600080fd5b506001600160a01b03813581169160208101359091169060400135610674565b6101c56004803603604081101561025957600080fd5b506001600160a01b038135169060200135610714565b6101bb6004803603606081101561028557600080fd5b506001600160a01b0381358116916020810135909116906040013561074b565b6101c5600480360360208110156102bb57600080fd5b5035610766565b610173600480360360208110156102d857600080fd5b50356107a5565b6101bb600480360360208110156102f557600080fd5b50356001600160a01b0316610804565b6101c56004803603602081101561031b57600080fd5b50356001600160a01b0316610884565b6101426004803603604081101561034157600080fd5b506001600160a01b03813581169160200135166108f5565b6101bb6004803603604081101561036f57600080fd5b506001600160a01b0381351690602001351515610915565b6101bb6004803603608081101561039d57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d857600080fd5b8201836020820111156103ea57600080fd5b8035906020019184600183028401116401000000008311171561040c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610924945050505050565b6101736004803603602081101561046357600080fd5b5035610938565b6101426004803603604081101561048057600080fd5b506001600160a01b0381358116916020013516610953565b6101bb600480360360608110156104ae57600080fd5b506001600160a01b038135811691602081013590911690604001351515610981565b60006301ffc9a760e01b6001600160e01b03198316148061050157506380ac58cd60e01b6001600160e01b03198316145b8061051c575063780e9d6360e01b6001600160e01b03198316145b90505b919050565b600080600061053284610a21565b90925090506001600160a01b038216610583576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b80156105a9575050506000818152600460205260409020546001600160a01b031661051f565b60009250505061051f565b60006105bf82610a41565b90506001600160a01b0381163314806105fb57506001600160a01b038116600090815260036020908152604080832033845290915290205460ff165b61063d576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648818484610aa2565b505050565b6005546000190190565b610648838383600060405180602001604052806000815250610c21565b6001600160a01b0383166106be576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6106c783610fb1565b610709576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648838383610aa2565b6001600160a01b038216600090815260026020526040812080548390811061073857fe5b9060005260206000200154905092915050565b61064883838360405180602001604052806000815250610924565b6040805162461bcd60e51b815260206004820152600d60248201526c1393d50814d5541413d4951151609a1b6044820152905160009181900360640190fd5b60006107b082610a41565b90506001600160a01b03811661051f576040805162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015290519081900360640190fd5b6005805460018082019092556001600160a01b038316600081815260026020908152604080832080548088018255908452828420810186905585845295909152808220600160a01b86028401905551929392849291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b60006001600160a01b0382166108d9576040805162461bcd60e51b81526020600482015260156024820152746f776e6572206973207a65726f206164647265737360581b604482015290519081900360640190fd5b506001600160a01b031660009081526002602052604090205490565b600360209081526000928352604080842090915290825290205460ff1681565b610920338383610fec565b5050565b610932848484600185610c21565b50505050565b6004602052600090815260409020546001600160a01b031681565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6001600160a01b0383166109cb576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6109d48361105a565b610a16576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648838383610fec565b60009081526001602081905260409091205491600160ff1b830490911490565b6000818152600160205260409020546001600160a01b03811661051f576040805162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015290519081900360640190fd5b6000806000610ab084611076565b919450925090506001600160a01b038316610b03576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b856001600160a01b0316836001600160a01b031614610b55576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6001600160a01b038516610b8a5760008481526001602052604090206001600160a01b038416600160a01b8402019055610bd8565b6000848152600160209081526040808320600160a01b86026001600160a01b0388811691909101600160ff1b01909155600490925290912080546001600160a01b0319169187169190911790555b83856001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000806000610c2f86611076565b919450925090506001600160a01b038316610c82576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b876001600160a01b0316836001600160a01b031614610cd4576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6001600160a01b038716610d1e576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6000610d286110a5565b9050336001600160a01b038a1614801590610d41575080155b15610dd8576001600160a01b038916600090815260036020908152604080832033845290915290205460ff1680610d965750818015610d9657506000878152600460205260409020546001600160a01b031633145b610dd8576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b6001600160a01b038916600090815260026020526040812080546000198101908110610e0057fe5b90600052602060002001549050600260008b6001600160a01b03166001600160a01b03168152602001908152602001600020805480610e3b57fe5b60019003818190600052602060002001600090559055808814610eb1576001600160a01b038a166000908152600260205260409020805482919086908110610e7f57fe5b60009182526020808320909101929092558281526001909152604090206001600160a01b038b16600160a01b86020190555b6001600160a01b03808a16600081815260026020908152604080832080546001808201835591855283852081018f90558e85529252808320600160a01b8302850190555190938c9392908f16917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a4878015610f3c5750610f3c8a6001600160a01b03166110b6565b15610fa457610f5a83610f4f5733610f51565b8b5b8c8c8c8b6110f2565b610fa4576040805162461bcd60e51b8152602060048201526016602482015275115490cdcc8c57d514905394d1915497d1905253115160521b604482015290519081900360640190fd5b5050505050505050505050565b6000610fbc8261105a565b8061051c5750506001600160a01b0316600090815260036020908152604080832033845290915290205460ff1690565b6001600160a01b03838116600081815260036020908152604080832094871680845294825291829020805460ff1916861515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b6000336001600160a01b038316148061051c575061051c6110a5565b60009081526001602081905260409091205491600160a01b6001600f60f41b0384160491600160ff1b84041490565b6000546001600160a01b0316331490565b60007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470823f80158015906110ea5750818114155b949350505050565b600080846001600160a01b031663150b7a02888887876040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561118a578181015183820152602001611172565b50505050905090810190601f1680156111b75780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156111d957600080fd5b505af11580156111ed573d6000803e3d6000fd5b505050506040513d602081101561120357600080fd5b50516001600160e01b031916630a85bd0160e11b149150509594505050505056fea26469706673582212200d9097794ffe210a75691804f8728ea8f0fc1e14c43cdb78ec2fb637aa4c4fca64736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x12C4 CODESIZE SUB DUP1 PUSH2 0x12C4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x125A DUP1 PUSH2 0x6A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xB9B710E9 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xEEB5A5D1 EQ PUSH2 0x498 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x9D786BBC EQ PUSH2 0x32B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x2A5 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x657 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x674 JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x714 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x74B JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x766 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x804 JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x884 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8F5 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x915 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x924 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x938 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x953 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x981 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x501 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x51C JUMPI POP PUSH4 0x780E9D63 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x532 DUP5 PUSH2 0xA21 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x583 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5A9 JUMPI POP POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x51F JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x51F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP3 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ DUP1 PUSH2 0x5FB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x63D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP2 DUP5 DUP5 PUSH2 0xAA2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6C7 DUP4 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x709 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x738 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1393D50814D5541413D4951151 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7B0 DUP3 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x51F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP9 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP2 ADD DUP7 SWAP1 SSTORE DUP6 DUP5 MSTORE SWAP6 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL DUP5 ADD SWAP1 SSTORE MLOAD SWAP3 SWAP4 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6F776E6572206973207A65726F2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x920 CALLER DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x932 DUP5 DUP5 DUP5 PUSH1 0x1 DUP6 PUSH2 0xC21 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x9D4 DUP4 PUSH2 0x105A JUMP JUMPDEST PUSH2 0xA16 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 PUSH1 0x1 PUSH1 0xFF SHL DUP4 DIV SWAP1 SWAP2 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x51F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xAB0 DUP5 PUSH2 0x1076 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB03 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2727AA2FA7ABA722A9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xB8A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0xA0 SHL DUP5 MUL ADD SWAP1 SSTORE PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 PUSH1 0xFF SHL ADD SWAP1 SWAP2 SSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xC2F DUP7 PUSH2 0x1076 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2727AA2FA7ABA722A9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0xD1E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD28 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xD41 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xD96 JUMPI POP DUP2 DUP1 ISZERO PUSH2 0xD96 JUMPI POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xDD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xE00 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xE3B JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP1 DUP9 EQ PUSH2 0xEB1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xE7F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 DUP2 ADD DUP16 SWAP1 SSTORE DUP15 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP4 MUL DUP6 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP4 DUP13 SWAP4 SWAP3 SWAP1 DUP16 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG4 DUP8 DUP1 ISZERO PUSH2 0xF3C JUMPI POP PUSH2 0xF3C DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10B6 JUMP JUMPDEST ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xF5A DUP4 PUSH2 0xF4F JUMPI CALLER PUSH2 0xF51 JUMP JUMPDEST DUP12 JUMPDEST DUP13 DUP13 DUP13 DUP12 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0xFA4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CDCC8C57D514905394D1915497D19052531151 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBC DUP3 PUSH2 0x105A JUMP JUMPDEST DUP1 PUSH2 0x51C JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x51C JUMPI POP PUSH2 0x51C PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0xF PUSH1 0xF4 SHL SUB DUP5 AND DIV SWAP2 PUSH1 0x1 PUSH1 0xFF SHL DUP5 DIV EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP3 EXTCODEHASH DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x10EA JUMPI POP DUP2 DUP2 EQ ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x150B7A02 DUP9 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x118A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1172 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11B7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP1 SWAP8 PUSH26 0x4FFE210A75691804F8728EA8F0FC1E14C43CDB78EC2FB637AA4C 0x4F 0xCA PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "237:10699:18:-:0;;;1305:1;1278:28;;1313:89;8:9:-1;5:2;;;30:1;27;20:12;5:2;1313:89:18;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1313:89:18;160:16:0;:34;;-1:-1:-1;;;;;160:34:0;;;-1:-1:-1;;;;;;160:34:0;;;;;;;;;237:10699:18;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063a22cb46511610071578063a22cb46514610359578063b88d4fde14610387578063b9b710e91461044d578063e985e9c51461046a578063eeb5a5d11461049857610116565b80636352211e146102c25780636a627842146102df57806370a08231146103055780639d786bbc1461032b57610116565b806323b872dd116100e957806323b872dd146101d75780632b9917461461020d5780632f745c591461024357806342842e0e1461026f5780634f6ccce7146102a557610116565b806301ffc9a71461011b578063081812fc14610156578063095ea7b31461018f57806318160ddd146101bd575b600080fd5b6101426004803603602081101561013157600080fd5b50356001600160e01b0319166104d0565b604080519115158252519081900360200190f35b6101736004803603602081101561016c57600080fd5b5035610524565b604080516001600160a01b039092168252519081900360200190f35b6101bb600480360360408110156101a557600080fd5b506001600160a01b0381351690602001356105b4565b005b6101c561064d565b60408051918252519081900360200190f35b6101bb600480360360608110156101ed57600080fd5b506001600160a01b03813581169160208101359091169060400135610657565b6101bb6004803603606081101561022357600080fd5b506001600160a01b03813581169160208101359091169060400135610674565b6101c56004803603604081101561025957600080fd5b506001600160a01b038135169060200135610714565b6101bb6004803603606081101561028557600080fd5b506001600160a01b0381358116916020810135909116906040013561074b565b6101c5600480360360208110156102bb57600080fd5b5035610766565b610173600480360360208110156102d857600080fd5b50356107a5565b6101bb600480360360208110156102f557600080fd5b50356001600160a01b0316610804565b6101c56004803603602081101561031b57600080fd5b50356001600160a01b0316610884565b6101426004803603604081101561034157600080fd5b506001600160a01b03813581169160200135166108f5565b6101bb6004803603604081101561036f57600080fd5b506001600160a01b0381351690602001351515610915565b6101bb6004803603608081101561039d57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d857600080fd5b8201836020820111156103ea57600080fd5b8035906020019184600183028401116401000000008311171561040c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610924945050505050565b6101736004803603602081101561046357600080fd5b5035610938565b6101426004803603604081101561048057600080fd5b506001600160a01b0381358116916020013516610953565b6101bb600480360360608110156104ae57600080fd5b506001600160a01b038135811691602081013590911690604001351515610981565b60006301ffc9a760e01b6001600160e01b03198316148061050157506380ac58cd60e01b6001600160e01b03198316145b8061051c575063780e9d6360e01b6001600160e01b03198316145b90505b919050565b600080600061053284610a21565b90925090506001600160a01b038216610583576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b80156105a9575050506000818152600460205260409020546001600160a01b031661051f565b60009250505061051f565b60006105bf82610a41565b90506001600160a01b0381163314806105fb57506001600160a01b038116600090815260036020908152604080832033845290915290205460ff165b61063d576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648818484610aa2565b505050565b6005546000190190565b610648838383600060405180602001604052806000815250610c21565b6001600160a01b0383166106be576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6106c783610fb1565b610709576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648838383610aa2565b6001600160a01b038216600090815260026020526040812080548390811061073857fe5b9060005260206000200154905092915050565b61064883838360405180602001604052806000815250610924565b6040805162461bcd60e51b815260206004820152600d60248201526c1393d50814d5541413d4951151609a1b6044820152905160009181900360640190fd5b60006107b082610a41565b90506001600160a01b03811661051f576040805162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015290519081900360640190fd5b6005805460018082019092556001600160a01b038316600081815260026020908152604080832080548088018255908452828420810186905585845295909152808220600160a01b86028401905551929392849291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b60006001600160a01b0382166108d9576040805162461bcd60e51b81526020600482015260156024820152746f776e6572206973207a65726f206164647265737360581b604482015290519081900360640190fd5b506001600160a01b031660009081526002602052604090205490565b600360209081526000928352604080842090915290825290205460ff1681565b610920338383610fec565b5050565b610932848484600185610c21565b50505050565b6004602052600090815260409020546001600160a01b031681565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6001600160a01b0383166109cb576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6109d48361105a565b610a16576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b610648838383610fec565b60009081526001602081905260409091205491600160ff1b830490911490565b6000818152600160205260409020546001600160a01b03811661051f576040805162461bcd60e51b81526020600482015260146024820152731d1bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b604482015290519081900360640190fd5b6000806000610ab084611076565b919450925090506001600160a01b038316610b03576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b856001600160a01b0316836001600160a01b031614610b55576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6001600160a01b038516610b8a5760008481526001602052604090206001600160a01b038416600160a01b8402019055610bd8565b6000848152600160209081526040808320600160a01b86026001600160a01b0388811691909101600160ff1b01909155600490925290912080546001600160a01b0319169187169190911790555b83856001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000806000610c2f86611076565b919450925090506001600160a01b038316610c82576040805162461bcd60e51b815260206004820152600e60248201526d1113d154d7d393d517d1561254d560921b604482015290519081900360640190fd5b876001600160a01b0316836001600160a01b031614610cd4576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6001600160a01b038716610d1e576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b6000610d286110a5565b9050336001600160a01b038a1614801590610d41575080155b15610dd8576001600160a01b038916600090815260036020908152604080832033845290915290205460ff1680610d965750818015610d9657506000878152600460205260409020546001600160a01b031633145b610dd8576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b6001600160a01b038916600090815260026020526040812080546000198101908110610e0057fe5b90600052602060002001549050600260008b6001600160a01b03166001600160a01b03168152602001908152602001600020805480610e3b57fe5b60019003818190600052602060002001600090559055808814610eb1576001600160a01b038a166000908152600260205260409020805482919086908110610e7f57fe5b60009182526020808320909101929092558281526001909152604090206001600160a01b038b16600160a01b86020190555b6001600160a01b03808a16600081815260026020908152604080832080546001808201835591855283852081018f90558e85529252808320600160a01b8302850190555190938c9392908f16917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a4878015610f3c5750610f3c8a6001600160a01b03166110b6565b15610fa457610f5a83610f4f5733610f51565b8b5b8c8c8c8b6110f2565b610fa4576040805162461bcd60e51b8152602060048201526016602482015275115490cdcc8c57d514905394d1915497d1905253115160521b604482015290519081900360640190fd5b5050505050505050505050565b6000610fbc8261105a565b8061051c5750506001600160a01b0316600090815260036020908152604080832033845290915290205460ff1690565b6001600160a01b03838116600081815260036020908152604080832094871680845294825291829020805460ff1916861515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b6000336001600160a01b038316148061051c575061051c6110a5565b60009081526001602081905260409091205491600160a01b6001600f60f41b0384160491600160ff1b84041490565b6000546001600160a01b0316331490565b60007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470823f80158015906110ea5750818114155b949350505050565b600080846001600160a01b031663150b7a02888887876040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561118a578181015183820152602001611172565b50505050905090810190601f1680156111b75780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156111d957600080fd5b505af11580156111ed573d6000803e3d6000fd5b505050506040513d602081101561120357600080fd5b50516001600160e01b031916630a85bd0160e11b149150509594505050505056fea26469706673582212200d9097794ffe210a75691804f8728ea8f0fc1e14c43cdb78ec2fb637aa4c4fca64736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xB9B710E9 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xEEB5A5D1 EQ PUSH2 0x498 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x9D786BBC EQ PUSH2 0x32B JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x2B991746 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x2A5 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C5 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x657 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x674 JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x714 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x74B JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x766 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x804 JUMP JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x884 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x8F5 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x915 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x924 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x938 JUMP JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x953 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x981 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x501 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x51C JUMPI POP PUSH4 0x780E9D63 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x532 DUP5 PUSH2 0xA21 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x583 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5A9 JUMPI POP POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x51F JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x51F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP3 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ DUP1 PUSH2 0x5FB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x63D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP2 DUP5 DUP5 PUSH2 0xAA2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6C7 DUP4 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x709 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x738 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x924 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1393D50814D5541413D4951151 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7B0 DUP3 PUSH2 0xA41 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x51F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP9 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP2 ADD DUP7 SWAP1 SSTORE DUP6 DUP5 MSTORE SWAP6 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL DUP5 ADD SWAP1 SSTORE MLOAD SWAP3 SWAP4 SWAP3 DUP5 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x6F776E6572206973207A65726F2061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x920 CALLER DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x932 DUP5 DUP5 DUP5 PUSH1 0x1 DUP6 PUSH2 0xC21 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x9D4 DUP4 PUSH2 0x105A JUMP JUMPDEST PUSH2 0xA16 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x648 DUP4 DUP4 DUP4 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 PUSH1 0x1 PUSH1 0xFF SHL DUP4 DIV SWAP1 SWAP2 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x51F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xAB0 DUP5 PUSH2 0x1076 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB03 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2727AA2FA7ABA722A9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xB8A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0xA0 SHL DUP5 MUL ADD SWAP1 SSTORE PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 PUSH1 0xFF SHL ADD SWAP1 SWAP2 SSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xC2F DUP7 PUSH2 0x1076 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1113D154D7D393D517D1561254D5 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2727AA2FA7ABA722A9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0xD1E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD28 PUSH2 0x10A5 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND EQ DUP1 ISZERO SWAP1 PUSH2 0xD41 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xD96 JUMPI POP DUP2 DUP1 ISZERO PUSH2 0xD96 JUMPI POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0xDD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xE00 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xE3B JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP1 DUP9 EQ PUSH2 0xEB1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xE7F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x1 PUSH1 0xA0 SHL DUP7 MUL ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 DUP2 ADD DUP16 SWAP1 SSTORE DUP15 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 SHL DUP4 MUL DUP6 ADD SWAP1 SSTORE MLOAD SWAP1 SWAP4 DUP13 SWAP4 SWAP3 SWAP1 DUP16 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG4 DUP8 DUP1 ISZERO PUSH2 0xF3C JUMPI POP PUSH2 0xF3C DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10B6 JUMP JUMPDEST ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xF5A DUP4 PUSH2 0xF4F JUMPI CALLER PUSH2 0xF51 JUMP JUMPDEST DUP12 JUMPDEST DUP13 DUP13 DUP13 DUP12 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0xFA4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CDCC8C57D514905394D1915497D19052531151 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBC DUP3 PUSH2 0x105A JUMP JUMPDEST DUP1 PUSH2 0x51C JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x51C JUMPI POP PUSH2 0x51C PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0xF PUSH1 0xF4 SHL SUB DUP5 AND DIV SWAP2 PUSH1 0x1 PUSH1 0xFF SHL DUP5 DIV EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP3 EXTCODEHASH DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x10EA JUMPI POP DUP2 DUP2 EQ ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x150B7A02 DUP9 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x118A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1172 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11B7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP1 SWAP8 PUSH26 0x4FFE210A75691804F8728EA8F0FC1E14C43CDB78EC2FB637AA4C 0x4F 0xCA PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
            "sourceMap": "237:10699:18:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:10699:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8423:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8423:147:18;-1:-1:-1;;;;;;8423:147:18;;:::i;:::-;;;;;;;;;;;;;;;;;;6705:332;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6705:332:18;;:::i;:::-;;;;-1:-1:-1;;;;;6705:332:18;;;;;;;;;;;;;;6107:434;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6107:434:18;;;;;;;;:::i;:::-;;10582:90;;;:::i;:::-;;;;;;;;;;;;;;;;7234:124;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7234:124:18;;;;;;;;;;;;;;;;;:::i;5641:277::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5641:277:18;;;;;;;;;;;;;;;;;:::i;10791:143::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;10791:143:18;;;;;;;;:::i;8019:124::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8019:124:18;;;;;;;;;;;;;;;;;:::i;10677:109::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10677:109:18;;:::i;4587:166::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4587:166:18;;:::i;1565:309::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1565:309:18;-1:-1:-1;;;;;1565:309:18;;:::i;3450:181::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3450:181:18;-1:-1:-1;;;;;3450:181:18;;:::i;1150:69::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1150:69:18;;;;;;;;;;:::i;9400:164::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9400:164:18;;;;;;;;;;:::i;7634:146::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7634:146:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7634:146:18;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7634:146:18;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7634:146:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7634:146:18;;-1:-1:-1;7634:146:18;;-1:-1:-1;;;;;7634:146:18:i;1225:46::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1225:46:18;;:::i;10034:184::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;10034:184:18;;;;;;;;;;:::i;8847:329::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8847:329:18;;;;;;;;;;;;;;;;;;;:::i;8423:147::-;8484:4;-1:-1:-1;;;;;;;;;8507:16:18;;;;:36;;-1:-1:-1;;;;;;;;;;8527:16:18;;;8507:36;:56;;;-1:-1:-1;;;;;;;;;;8547:16:18;;;8507:56;8500:63;;8423:147;;;;:::o;6705:332::-;6761:7;6781:13;6796:20;6820:30;6847:2;6820:26;:30::i;:::-;6780:70;;-1:-1:-1;6780:70:18;-1:-1:-1;;;;;;6868:19:18;;6860:46;;;;;-1:-1:-1;;;6860:46:18;;;;;;;;;;;;-1:-1:-1;;;6860:46:18;;;;;;;;;;;;;;;6920:15;6916:115;;;-1:-1:-1;;;6958:14:18;;;;:10;:14;;;;;;-1:-1:-1;;;;;6958:14:18;6951:21;;6916:115;7018:1;7003:17;;;;;;6107:434;6173:13;6189:12;6198:2;6189:8;:12::i;:::-;6173:28;-1:-1:-1;;;;;;6350:19:18;;6359:10;6350:19;;:102;;-1:-1:-1;;;;;;6417:23:18;;;;;;:16;:23;;;;;;;;6441:10;6417:35;;;;;;;;;;6350:102;6329:163;;;;;-1:-1:-1;;;6329:163:18;;;;;;;;;;;;-1:-1:-1;;;6329:163:18;;;;;;;;;;;;;;;6502:32;6514:5;6521:8;6531:2;6502:11;:32::i;:::-;6107:434;;;:::o;10582:90::-;10654:7;;-1:-1:-1;;10654:11:18;10582:90;:::o;7234:124::-;7313:38;7327:4;7333:2;7337;7341:5;7313:38;;;;;;;;;;;;:13;:38::i;5641:277::-;-1:-1:-1;;;;;5764:20:18;;5756:45;;;;;-1:-1:-1;;;5756:45:18;;;;;;;;;;;;-1:-1:-1;;;5756:45:18;;;;;;;;;;;;;;;5819:30;5842:6;5819:22;:30::i;:::-;5811:57;;;;;-1:-1:-1;;;5811:57:18;;;;;;;;;;;;-1:-1:-1;;;5811:57:18;;;;;;;;;;;;;;;5878:33;5890:6;5898:8;5908:2;5878:11;:33::i;10791:143::-;-1:-1:-1;;;;;10899:21:18;;10873:7;10899:21;;;:14;:21;;;;;:28;;10921:5;;10899:28;;;;;;;;;;;;;;10892:35;;10791:143;;;;:::o;8019:124::-;8102:34;8119:4;8125:2;8129;8102:34;;;;;;;;;;;;:16;:34::i;10677:109::-;10756:23;;;-1:-1:-1;;;10756:23:18;;;;;;;;;;;;-1:-1:-1;;;10756:23:18;;;;;;10737:7;;10756:23;;;;;;;4587:166;4639:13;4672:12;4681:2;4672:8;:12::i;:::-;4664:20;-1:-1:-1;;;;;;4702:19:18;;4694:52;;;;;-1:-1:-1;;;4694:52:18;;;;;;;;;;;;-1:-1:-1;;;4694:52:18;;;;;;;;;;;;;;1565:309;1668:7;:9;;;;;;;;;-1:-1:-1;;;;;1703:18:18;;1655:10;1703:18;;;:14;:18;;;;;;;;:25;;23:18:-1;;;45:23;;1738:27:18;;;;;;;;;;;1775:18;;;;;;;;;;-1:-1:-1;;;1810:14:18;;1796:28;;1775:49;;1839:28;1668:9;;1703:25;1668:9;;1703:18;1655:10;1839:28;;1655:10;;1839:28;1565:309;;;:::o;3450:181::-;3507:7;-1:-1:-1;;;;;3534:19:18;;3526:53;;;;;-1:-1:-1;;;3526:53:18;;;;;;;;;;;;-1:-1:-1;;;3526:53:18;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3596:21:18;;;;;:14;:21;;;;;:28;;3450:181::o;1150:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9400:164::-;9507:50;9526:10;9538:8;9548;9507:18;:50::i;:::-;9400:164;;:::o;7634:146::-;7734:39;7748:4;7754:2;7758;7762:4;7768;7734:13;:39::i;:::-;7634:146;;;;:::o;1225:46::-;;;;;;;;;;;;-1:-1:-1;;;;;1225:46:18;;:::o;10034:184::-;-1:-1:-1;;;;;10178:23:18;;;10140:15;10178:23;;;:16;:23;;;;;;;;:33;;;;;;;;;;;;;;;10034:184::o;8847:329::-;-1:-1:-1;;;;;8983:20:18;;8975:45;;;;;-1:-1:-1;;;8975:45:18;;;;;;;;;;;;-1:-1:-1;;;8975:45:18;;;;;;;;;;;;;;;9051:21;9065:6;9051:13;:21::i;:::-;9030:82;;;;;-1:-1:-1;;;9030:82:18;;;;;;;;;;;;-1:-1:-1;;;9030:82:18;;;;;;;;;;;;;;;9123:46;9142:6;9150:8;9160;9123:18;:46::i;3841:237::-;3912:13;3974:18;;;:14;:18;;;;;;;;;;-1:-1:-1;;;4052:13:18;;4051:20;;;;3841:237::o;3638:197::-;3691:18;3742;;;:14;:18;;;;;;-1:-1:-1;;;;;3779:24:18;;3771:57;;;;;-1:-1:-1;;;3771:57:18;;;;;;;;;;;;-1:-1:-1;;;3771:57:18;;;;;;;;;;;;;;4759:640;4846:13;4861;4876:20;4900:35;4932:2;4900:31;:35::i;:::-;4845:90;;-1:-1:-1;4845:90:18;-1:-1:-1;4845:90:18;-1:-1:-1;;;;;;4953:19:18;;4945:46;;;;;-1:-1:-1;;;4945:46:18;;;;;;;;;;;;-1:-1:-1;;;4945:46:18;;;;;;;;;;;;;;;5018:6;-1:-1:-1;;;;;5009:15:18;:5;-1:-1:-1;;;;;5009:15:18;;5001:37;;;;;-1:-1:-1;;;5001:37:18;;;;;;;;;;;;-1:-1:-1;;;5001:37:18;;;;;;;;;;;;;;;-1:-1:-1;;;;;5051:22:18;;5048:301;;5089:18;;;;:14;:18;;;;;-1:-1:-1;;;;;5110:14:18;;-1:-1:-1;;;5127:14:18;;5110:31;5089:52;;5048:301;;;5238:18;;;;:14;:18;;;;;;;;-1:-1:-1;;;5276:14:18;;-1:-1:-1;;;;;5259:14:18;;;:31;;;;-1:-1:-1;;;5259:40:18;5238:61;;;5313:10;:14;;;;;;:25;;-1:-1:-1;;;;;;5313:25:18;;;;;;;;;;5048:301;5389:2;5379:8;-1:-1:-1;;;;;5363:29:18;5372:5;-1:-1:-1;;;;;5363:29:18;;;;;;;;;;;4759:640;;;;;;:::o;1880:1382::-;1991:13;2006;2021:20;2045:35;2077:2;2045:31;:35::i;:::-;1990:90;;-1:-1:-1;1990:90:18;-1:-1:-1;1990:90:18;-1:-1:-1;;;;;;2098:19:18;;2090:46;;;;;-1:-1:-1;;;2090:46:18;;;;;;;;;;;;-1:-1:-1;;;2090:46:18;;;;;;;;;;;;;;;2163:4;-1:-1:-1;;;;;2154:13:18;:5;-1:-1:-1;;;;;2154:13:18;;2146:35;;;;;-1:-1:-1;;;2146:35:18;;;;;;;;;;;;-1:-1:-1;;;2146:35:18;;;;;;;;;;;;;;;-1:-1:-1;;;;;2199:16:18;;2191:41;;;;;-1:-1:-1;;;2191:41:18;;;;;;;;;;;;-1:-1:-1;;;2191:41:18;;;;;;;;;;;;;;;2242:11;2256:10;:8;:10::i;:::-;2242:24;-1:-1:-1;2280:10:18;-1:-1:-1;;;;;2280:18:18;;;;;;:29;;;2303:6;2302:7;2280:29;2276:236;;;-1:-1:-1;;;;;2350:22:18;;;;;;:16;:22;;;;;;;;2373:10;2350:34;;;;;;;;;;;:103;;;2405:15;:47;;;;-1:-1:-1;2424:14:18;;;;:10;:14;;;;;;-1:-1:-1;;;;;2424:14:18;2442:10;2424:28;2405:47;2325:176;;;;;-1:-1:-1;;;2325:176:18;;;;;;;;;;;;-1:-1:-1;;;2325:176:18;;;;;;;;;;;;;;;-1:-1:-1;;;;;2543:20:18;;2522:18;2543:20;;;:14;:20;;;;;2564:27;;-1:-1:-1;;2564:29:18;;;2543:51;;;;;;;;;;;;;;2522:72;;2655:14;:20;2670:4;-1:-1:-1;;;;;2655:20:18;-1:-1:-1;;;;;2655:20:18;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;;;;;;;2701:10;2695:2;:16;2691:160;;-1:-1:-1;;;;;2727:20:18;;;;;;:14;:20;;;;;:27;;2757:10;;2727:20;2748:5;;2727:27;;;;;;;;;;;;;;;;;:40;;;;2781:26;;;:14;:26;;;;;;-1:-1:-1;;;;;2810:13:18;;-1:-1:-1;;;2826:14:18;;2810:30;2781:59;;2691:160;-1:-1:-1;;;;;2880:18:18;;;2861:16;2880:18;;;:14;:18;;;;;;;;:25;;39:1:-1;23:18;;;45:23;;2915:27:18;;;;;;;;;;;2952:18;;;;;;;;-1:-1:-1;;;2987:17:18;;2973:31;;2952:52;;3019:22;2880:25;;2939:2;;2880:18;3019:22;;;;;;2861:16;3019:22;3055:4;:23;;;;;3063:15;:2;-1:-1:-1;;;;;3063:13:18;;:15::i;:::-;3051:205;;;3119:70;3142:6;:26;;3158:10;3142:26;;;3151:4;3142:26;3170:4;3176:2;3180;3184:4;3119:22;:70::i;:::-;3094:151;;;;;-1:-1:-1;;;3094:151:18;;;;;;;;;;;;-1:-1:-1;;;3094:151:18;;;;;;;;;;;;;;;1880:1382;;;;;;;;;;;:::o;1408:151::-;1472:4;1495:19;1509:4;1495:13;:19::i;:::-;:57;;;-1:-1:-1;;;;;;;1518:22:18;;;;;:16;:22;;;;;;;;1541:10;1518:34;;;;;;;;;;;1408:151::o;9571:235::-;-1:-1:-1;;;;;9697:24:18;;;;;;;:16;:24;;;;;;;;:34;;;;;;;;;;;;;:45;;-1:-1:-1;;9697:45:18;;;;;;;;;;9757:42;;;;;;;;;;;;;;;;;9571:235;;;:::o;304:121:0:-;363:4;386:10;-1:-1:-1;;;;;386:18:0;;;;:32;;;408:10;:8;:10::i;4084:357:18:-;4160:13;4237:18;;;:14;:18;;;;;;;;;;-1:-1:-1;;;;;;;;4305:71:18;;4304:82;;-1:-1:-1;;;4415:13:18;;4414:20;;4084:357::o;431:102:0:-;473:4;510:16;-1:-1:-1;;;;;510:16:0;496:10;:30;;431:102::o;195:451:12:-;252:4;350:66;552:17;;596:15;;;;;:42;;;627:11;615:8;:23;;596:42;588:51;195:451;-1:-1:-1;;;;195:451:12:o;10224:299:18:-;10363:4;10383:13;10419:2;-1:-1:-1;;;;;10399:40:18;;10440:8;10450:4;10456:7;10465:5;10399:72;;;;;;;;;;;;;-1:-1:-1;;;;;10399:72:18;-1:-1:-1;;;;;10399:72:18;;;;;;-1:-1:-1;;;;;10399:72:18;-1:-1:-1;;;;;10399:72:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10399:72:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10399:72:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10399:72:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10399:72:18;-1:-1:-1;;;;;;10489:26:18;-1:-1:-1;;;10489:26:18;;-1:-1:-1;;10224:299:18;;;;;;;:::o"
          },
          "methodIdentifiers": {
            "_operators(uint256)": "b9b710e9",
            "_operatorsForAll(address,address)": "9d786bbc",
            "approve(address,uint256)": "095ea7b3",
            "approveFor(address,address,uint256)": "2b991746",
            "balanceOf(address)": "70a08231",
            "getApproved(uint256)": "081812fc",
            "isApprovedForAll(address,address)": "e985e9c5",
            "mint(address)": "6a627842",
            "ownerOf(uint256)": "6352211e",
            "safeTransferFrom(address,address,uint256)": "42842e0e",
            "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
            "setApprovalForAll(address,bool)": "a22cb465",
            "setApprovalForAllFor(address,address,bool)": "eeb5a5d1",
            "supportsInterface(bytes4)": "01ffc9a7",
            "tokenByIndex(uint256)": "4f6ccce7",
            "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
            "totalSupply()": "18160ddd",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTxProcessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_operators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_operatorsForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAllFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"id\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"params\":{\"id\":\"The id of the token\",\"operator\":\"The address receiving the approval\"}},\"approveFor(address,address,uint256)\":{\"params\":{\"id\":\"The id of the token\",\"operator\":\"The address receiving the approval\",\"sender\":\"The address giving the approval\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address to look for\"},\"returns\":{\"_0\":\"The number of Land token owned by the address\"}},\"getApproved(uint256)\":{\"params\":{\"id\":\"The id of the token\"},\"returns\":{\"_0\":\"The address of the operator\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"operator\":\"The address of the operator\",\"owner\":\"The address of the owner\"},\"returns\":{\"isOperator\":\"The status of the approval\"}},\"ownerOf(uint256)\":{\"params\":{\"id\":\"The id of the Land\"},\"returns\":{\"owner\":\"The address of the owner\"}},\"safeTransferFrom(address,address,uint256)\":{\"params\":{\"from\":\"The send of the token\",\"id\":\"The id of the token\",\"to\":\"The recipient of the token\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"params\":{\"data\":\"Additional data\",\"from\":\"The sender of the token\",\"id\":\"The id of the token\",\"to\":\"The recipient of the token\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"approved\":\"The determination of the approval\",\"operator\":\"The address receiving the approval\"}},\"setApprovalForAllFor(address,address,bool)\":{\"params\":{\"approved\":\"The determination of the approval\",\"operator\":\"The address receiving the approval\",\"sender\":\"The address giving the approval\"}},\"supportsInterface(bytes4)\":{\"params\":{\"id\":\"The id of the interface\"},\"returns\":{\"_0\":\"True if the interface is supported\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"from\":\"The sender of the token\",\"id\":\"The id of the token\",\"to\":\"The recipient of the token\"}}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Approve an operator to spend tokens on the sender behalf\"},\"approveFor(address,address,uint256)\":{\"notice\":\"Approve an operator to spend tokens on the sender behalf\"},\"balanceOf(address)\":{\"notice\":\"Return the number of Land owned by an address\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved operator for a specific token\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Check if the sender approved the operator\"},\"ownerOf(uint256)\":{\"notice\":\"Return the owner of a Land\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfer a token between 2 addresses letting the receiver knows of the transfer\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfer a token between 2 addresses letting the receiver knows of the transfer\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Set the approval for an operator to manage all the tokens of the sender\"},\"setApprovalForAllFor(address,address,bool)\":{\"notice\":\"Set the approval for an operator to manage all the tokens of the sender\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check if the contract supports an interface 0x01ffc9a7 is ERC-165 0x80ac58cd is ERC-721 0x780e9d63 is ERC-721 Enumerable Extension\"},\"totalSupply()\":{\"notice\":\"//////////// erc721 ENUMERABLE //////////////\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer a token between 2 addresses\"}}}},\"settings\":{\"compilationTarget\":{\"src/Test/Numbers.sol\":\"Numbers\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/EIP1776MetaTxReceiverBase.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\ncontract EIP1776MetaTxReceiverBase {\\n\\n    address private _metaTxProcessor;\\n    constructor(address metaTxProcessor) internal {\\n        _metaTxProcessor = metaTxProcessor;\\n    }\\n\\n    ///@dev the from need to be equal to the first parameter of the function using that modifier\\n    function isValidSender(address from) internal view returns(bool) {\\n        return msg.sender == from || isMetaTx();\\n    }\\n\\n    function isMetaTx() internal view returns(bool) {\\n        return msg.sender == _metaTxProcessor;\\n    }\\n}\\n\",\"keccak256\":\"0x4d36cc539b5ec0fc2dec57a981af90afc8212e2c7bb2a8273e6fb508b0f92d32\"},\"src/Interfaces/ERC165.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC165\\n * @dev https://eips.ethereum.org/EIPS/eip-165\\n */\\ninterface ERC165 {\\n    /**\\n   * @notice Query if a contract implements interface `interfaceId`\\n   * @param interfaceId The interface identifier, as specified in ERC-165\\n   * @dev Interface identification is specified in ERC-165. This function\\n   * uses less than 30,000 gas.\\n   */\\n    function supportsInterface(bytes4 interfaceId)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xc0faa36cba688ce34574fdab3aaae02fc8255999ceec19998d4c22065a1754f8\"},\"src/Interfaces/ERC721.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nimport \\\"./ERC165.sol\\\";\\n\\ninterface ERC721 /*is ERC165*/ { // Interfaces still cannot inherit :(\\n    event Transfer(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 indexed _tokenId\\n    );\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _approved,\\n        uint256 indexed _tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed _owner,\\n        address indexed _operator,\\n        bool _approved\\n    );\\n\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n    \\n    function approve(address to, uint256 tokenId) external;\\n    function getApproved(uint256 tokenId)\\n        external\\n        view\\n        returns (address operator);\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 tokenId)\\n        external;\\n    function safeTransferFrom(address from, address to, uint256 tokenId)\\n        external;\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6796e307cbd33d1d26c0861a2c8c775570db0482cbbd1b66541b2a1af6a9623e\"},\"src/Interfaces/ERC721Enumerable.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n///  Note: the ERC-165 identifier for this interface is 0x780e9d63.\\ninterface ERC721Enumerable /* is ERC721 */ {\\n    /// @notice Count NFTs tracked by this contract\\n    /// @return A count of valid NFTs tracked by this contract, where each one of\\n    ///  them has an assigned and queryable owner not equal to the zero address\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Enumerate valid NFTs\\n    /// @dev Throws if `_index` >= `totalSupply()`.\\n    /// @param _index A counter less than `totalSupply()`\\n    /// @return The token identifier for the `_index`th NFT,\\n    ///  (sort order not specified)\\n    function tokenByIndex(uint256 _index) external view returns (uint256);\\n\\n    /// @notice Enumerate NFTs assigned to an owner\\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\\n    ///  `_owner` is the zero address, representing invalid NFTs.\\n    /// @param _owner An address where we are interested in NFTs owned by them\\n    /// @param _index A counter less than `balanceOf(_owner)`\\n    /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\\n    ///   (sort order not specified)\\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\\n}\",\"keccak256\":\"0xdd15c10b403e5bb1d1f86c403ee9d589d51a1d07193def74c71eece7696a3f71\"},\"src/Interfaces/ERC721TokenReceiver.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x1e7dcf369cd4048ef656ea016905f9ab78956d4ab88ddd9fc941e72128bb0c72\"},\"src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0xeac7dc828dbde8ad86c624d39dca24f7f66c3986958d8a71cd69a6aa9b5ed679\"},\"src/Test/Numbers.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../Libraries/AddressUtils.sol\\\";\\nimport \\\"../Interfaces/ERC721TokenReceiver.sol\\\";\\nimport \\\"../Interfaces/ERC721.sol\\\";\\nimport \\\"../Interfaces/ERC721Enumerable.sol\\\";\\n\\nimport \\\"../EIP1776MetaTxReceiverBase.sol\\\";\\n\\ncontract Numbers is /*ERC721, ERC721Enumerable,*/ EIP1776MetaTxReceiverBase { // interface seems to require overrides :(\\n\\n    //////////////////////////// ERC721 Events /////////////\\n    event Transfer(\\n        address indexed from,\\n        address indexed to,\\n        uint256 indexed tokenId\\n    );\\n    event Approval(\\n        address indexed owner,\\n        address indexed approved,\\n        uint256 indexed tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n    /////////////////////////////////////////////////////////\\n\\n\\n    using AddressUtils for address;\\n\\n    bytes4 internal constant _ERC721_RECEIVED = 0x150b7a02;\\n\\n    bytes4 internal constant ERC165ID = 0x01ffc9a7;\\n\\n    mapping(uint256 => uint256) _ownerAndIndex; // max 2**96 items, store both owner and item index\\n    mapping(address => uint256[]) _itemsPerOwner;\\n    mapping (address => mapping(address => bool)) public _operatorsForAll;\\n    mapping (uint256 => address) public _operators;\\n\\n    uint256 internal _nextId = 1;\\n\\n    constructor(address metaTxProcessor) public EIP1776MetaTxReceiverBase(metaTxProcessor) {}\\n\\n    function isValidApproveOperator(address from) internal returns (bool) {\\n        return isValidSender(from) || _operatorsForAll[from][msg.sender];\\n    }\\n\\n    function mint(address to) external {\\n        // TODO only specified minter can do\\n        uint256 id = _nextId++;\\n        uint256 index = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + index * 2**160;\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _transferFrom(address from, address to, uint256 id, bool safe, bytes memory data) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == from, \\\"NOT_OWNER\\\");\\n        require(to != address(0), \\\"ZERO_ADDRESS\\\");\\n        bool isMeta = isMetaTx();\\n        if (msg.sender != from && !isMeta) {\\n            require(\\n                _operatorsForAll[from][msg.sender] ||\\n                (operatorEnabled && _operators[id] == msg.sender),\\n                \\\"NOT_AUTHORIZED\\\"\\n            );\\n        }\\n\\n        uint256 lastItemId = _itemsPerOwner[from][_itemsPerOwner[from].length-1]; // TODO for silidity: should pop return the item ?\\n        _itemsPerOwner[from].pop();\\n        if (id != lastItemId) {\\n            _itemsPerOwner[from][index] = lastItemId;\\n            _ownerAndIndex[lastItemId] = uint256(from) + index * 2**160;\\n        }\\n\\n        uint256 newIndex = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + newIndex * 2**160;\\n        emit Transfer(from, to, id);\\n        if (safe && to.isContract()) {\\n            require(\\n                _checkOnERC721Received(isMeta ? from : msg.sender, from, to, id, data),\\n                \\\"ERC721_TRANSFER_FAILED\\\"\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice Return the number of Land owned by an address\\n     * @param owner The address to look for\\n     * @return The number of Land token owned by the address\\n     */\\n    function balanceOf(address owner) external view returns (uint256) {\\n        require(owner != address(0), \\\"owner is zero address\\\");\\n        return _itemsPerOwner[owner].length;\\n    }\\n\\n\\n    function _ownerOf(uint256 id) internal view returns (address tokenOwner) {\\n        tokenOwner = address(_ownerAndIndex[id]);\\n        require(tokenOwner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _ownerAndOperatorEnabledOf(uint256 id) internal view returns (address owner, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    function _ownerIndexAndOperatorEnabledOf(uint256 id) internal view returns (address owner, uint256 index, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        index = (data & 0xEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) / 2**160;\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    /**\\n     * @notice Return the owner of a Land\\n     * @param id The id of the Land\\n     * @return owner The address of the owner\\n     */\\n    function ownerOf(uint256 id) external view returns (address owner) {\\n        owner = _ownerOf(id);\\n        require(owner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _approveFor(address sender, address operator, uint256 id) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == sender, \\\"NOT_OWNER\\\");\\n        if(operator == address(0)) {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160; // no need to resset the operator, it will be overriden next time\\n        } else {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160 + 2**255;\\n            _operators[id] = operator;\\n        }\\n        emit Approval(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approveFor(\\n        address sender,\\n        address operator,\\n        uint256 id\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(isValidApproveOperator(sender), \\\"NOT_AUTHORIZED\\\");\\n        _approveFor(sender, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approve(address operator, uint256 id) external {\\n        address owner = _ownerOf(id);\\n        // NO META TX here as the first parameter is not the originator but the operator that is meant to be approved\\n        require(\\n            owner == msg.sender || // TODO remove duplicatre check\\n            _operatorsForAll[owner][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n        _approveFor(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Get the approved operator for a specific token\\n     * @param id The id of the token\\n     * @return The address of the operator\\n     */\\n    function getApproved(uint256 id) external view returns (address) {\\n        (address owner, bool operatorEnabled) = _ownerAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        if (operatorEnabled) {\\n            return _operators[id];\\n        } else {\\n            return address(0);\\n        }\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n    */\\n    function transferFrom(address from, address to, uint256 id) external {\\n        _transferFrom(from, to, id, false, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     * @param data Additional data\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, bytes memory data) public {\\n        _transferFrom(from, to, id, true, data);\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The send of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id) external {\\n        safeTransferFrom(from, to, id, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Check if the contract supports an interface\\n     * 0x01ffc9a7 is ERC-165\\n     * 0x80ac58cd is ERC-721\\n     * 0x780e9d63 is ERC-721 Enumerable Extension\\n     * @param id The id of the interface\\n     * @return True if the interface is supported\\n     */\\n    function supportsInterface(bytes4 id) external pure returns (bool) {\\n        return id == 0x01ffc9a7 || id == 0x80ac58cd || id == 0x780e9d63;\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAllFor(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(\\n            isValidSender(sender),\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        _setApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAll(address operator, bool approved) external {\\n\\n        // NOT META TX ...\\n        _setApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n\\n    function _setApprovalForAll(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) internal {\\n        _operatorsForAll[sender][operator] = approved;\\n        emit ApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Check if the sender approved the operator\\n     * @param owner The address of the owner\\n     * @param operator The address of the operator\\n     * @return isOperator The status of the approval\\n     */\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool isOperator)\\n    {\\n        return _operatorsForAll[owner][operator];\\n    }\\n\\n    function _checkOnERC721Received(address operator, address from, address to, uint256 tokenId, bytes memory _data)\\n        internal returns (bool)\\n    {\\n        bytes4 retval = ERC721TokenReceiver(to).onERC721Received(operator, from, tokenId, _data);\\n        return (retval == _ERC721_RECEIVED);\\n    }\\n\\n    /////////////// erc721 ENUMERABLE //////////////\\n    function totalSupply() external view returns (uint256) {\\n        return _nextId - 1;\\n    }\\n    function tokenByIndex(uint256 index) external view returns (uint256) {\\n        revert(\\\"NOT SUPPORTED\\\");\\n    }\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256) {\\n        return _itemsPerOwner[owner][index];\\n    }\\n}\\n\",\"keccak256\":\"0xbb39c793b52c65fbf25ee8368bdb63a01786857e1c8ac15506731053eec8e3b3\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "approve(address,uint256)": {
              "notice": "Approve an operator to spend tokens on the sender behalf"
            },
            "approveFor(address,address,uint256)": {
              "notice": "Approve an operator to spend tokens on the sender behalf"
            },
            "balanceOf(address)": {
              "notice": "Return the number of Land owned by an address"
            },
            "getApproved(uint256)": {
              "notice": "Get the approved operator for a specific token"
            },
            "isApprovedForAll(address,address)": {
              "notice": "Check if the sender approved the operator"
            },
            "ownerOf(uint256)": {
              "notice": "Return the owner of a Land"
            },
            "safeTransferFrom(address,address,uint256)": {
              "notice": "Transfer a token between 2 addresses letting the receiver knows of the transfer"
            },
            "safeTransferFrom(address,address,uint256,bytes)": {
              "notice": "Transfer a token between 2 addresses letting the receiver knows of the transfer"
            },
            "setApprovalForAll(address,bool)": {
              "notice": "Set the approval for an operator to manage all the tokens of the sender"
            },
            "setApprovalForAllFor(address,address,bool)": {
              "notice": "Set the approval for an operator to manage all the tokens of the sender"
            },
            "supportsInterface(bytes4)": {
              "notice": "Check if the contract supports an interface 0x01ffc9a7 is ERC-165 0x80ac58cd is ERC-721 0x780e9d63 is ERC-721 Enumerable Extension"
            },
            "totalSupply()": {
              "notice": "//////////// erc721 ENUMERABLE //////////////"
            },
            "transferFrom(address,address,uint256)": {
              "notice": "Transfer a token between 2 addresses"
            }
          }
        }
      },
      "args": [
        "0xe5c05697666A18bBB0f1f620237402413cF7e1A1"
      ],
      "address": "0x53d6D227E2cD9a9276049e8Dd1A5Ccd753FcC255",
      "transactionHash": "0xcb5c88a241b836d0420a796a73ce445773d7178e48bb66e65bfd3f79f22c8692"
    },
    "MTXNumberSale": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "contract Numbers",
                "name": "numbers",
                "type": "address"
              },
              {
                "internalType": "contract ERC20",
                "name": "erc20Token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "price",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "metaTxProcessor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "purchase",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506040516102e83803806102e88339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151600080546001600160a01b039283166001600160a01b031991821617909155600180549483169482169490941790935560028054919092169216919091179055600355610250806100986000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dde5a65d14610030575b600080fd5b61005e6004803603604081101561004657600080fd5b506001600160a01b0381358116916020013516610060565b005b610069826101e7565b6100ab576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b600254600354604080516323b872dd60e01b81523360048201523060248201526044810192909252516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561010857600080fd5b505af115801561011c573d6000803e3d6000fd5b505050506040513d602081101561013257600080fd5b505161017d576040805162461bcd60e51b8152602060048201526015602482015274115490cc8c17d514905394d1915497d19052531151605a1b604482015290519081900360640190fd5b600154604080516335313c2160e11b81526001600160a01b03848116600483015291519190921691636a62784291602480830192600092919082900301818387803b1580156101cb57600080fd5b505af11580156101df573d6000803e3d6000fd5b505050505050565b6000336001600160a01b03831614806102035750610203610209565b92915050565b6000546001600160a01b031633149056fea2646970667358221220dcdfbd9f6bba877ed869321ffa473d5e2f827ba26dea4ada24f08fe004544f7264736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2E8 CODESIZE SUB DUP1 PUSH2 0x2E8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP5 DUP4 AND SWAP5 DUP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 SSTORE PUSH2 0x250 DUP1 PUSH2 0x98 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDDE5A65D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69 DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0xAB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x17D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6A627842 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x203 JUMPI POP PUSH2 0x203 PUSH2 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xDF 0xBD SWAP16 PUSH12 0xBA877ED869321FFA473D5E2F DUP3 PUSH28 0xA26DEA4ADA24F08FE004544F7264736F6C6343000601003300000000 ",
            "sourceMap": "126:1201:17:-:0;;;316:230;8:9:-1;5:2;;;30:1;27;20:12;5:2;316:230:17;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;316:230:17;;;;;;;;;;;;;;;160:16:0;:34;;-1:-1:-1;;;;;160:34:0;;;-1:-1:-1;;;;;;160:34:0;;;;;;;;463:18:17;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;491:11:::1;:24:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;525:6:::1;:14:::0;126:1201;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dde5a65d14610030575b600080fd5b61005e6004803603604081101561004657600080fd5b506001600160a01b0381358116916020013516610060565b005b610069826101e7565b6100ab576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b600254600354604080516323b872dd60e01b81523360048201523060248201526044810192909252516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561010857600080fd5b505af115801561011c573d6000803e3d6000fd5b505050506040513d602081101561013257600080fd5b505161017d576040805162461bcd60e51b8152602060048201526015602482015274115490cc8c17d514905394d1915497d19052531151605a1b604482015290519081900360640190fd5b600154604080516335313c2160e11b81526001600160a01b03848116600483015291519190921691636a62784291602480830192600092919082900301818387803b1580156101cb57600080fd5b505af11580156101df573d6000803e3d6000fd5b505050505050565b6000336001600160a01b03831614806102035750610203610209565b92915050565b6000546001600160a01b031633149056fea2646970667358221220dcdfbd9f6bba877ed869321ffa473d5e2f827ba26dea4ada24f08fe004544f7264736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDDE5A65D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69 DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0xAB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x17D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6A627842 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x203 JUMPI POP PUSH2 0x203 PUSH2 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xDF 0xBD SWAP16 PUSH12 0xBA877ED869321FFA473D5E2F DUP3 PUSH28 0xA26DEA4ADA24F08FE004544F7264736F6C6343000601003300000000 ",
            "sourceMap": "126:1201:17:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;126:1201:17;;;;;;;;;;;;;;;;;;;552:773;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;552:773:17;;;;;;;;;;:::i;:::-;;;878:19;892:4;878:13;:19::i;:::-;870:46;;;;;-1:-1:-1;;;870:46:17;;;;;;;;;;;;-1:-1:-1;;;870:46:17;;;;;;;;;;;;;;;1171:11;;1223:6;;1171:59;;;-1:-1:-1;;;1171:59:17;;1196:10;1171:59;;;;1216:4;1171:59;;;;;;;;;;;;-1:-1:-1;;;;;1171:11:17;;;;:24;;:59;;;;;;;;;;;;;;;:11;;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;1171:59:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1171:59:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1171:59:17;1163:93;;;;;-1:-1:-1;;;1163:93:17;;;;;;;;;;;;-1:-1:-1;;;1163:93:17;;;;;;;;;;;;;;;1301:8;;:17;;;-1:-1:-1;;;1301:17:17;;-1:-1:-1;;;;;1301:17:17;;;;;;;;;:8;;;;;:13;;:17;;;;;:8;;:17;;;;;;;:8;;:17;;;5:2:-1;;;;30:1;27;20:12;5:2;1301:17:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1301:17:17;;;;552:773;;:::o;304:121:0:-;363:4;386:10;-1:-1:-1;;;;;386:18:0;;;;:32;;;408:10;:8;:10::i;:::-;379:39;304:121;-1:-1:-1;;304:121:0:o;431:102::-;473:4;510:16;-1:-1:-1;;;;;510:16:0;496:10;:30;;431:102::o"
          },
          "methodIdentifiers": {
            "purchase(address,address)": "dde5a65d"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Numbers\",\"name\":\"numbers\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"metaTxProcessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/Test/NumberSale.sol\":\"NumberSale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/EIP1776MetaTxReceiverBase.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\ncontract EIP1776MetaTxReceiverBase {\\n\\n    address private _metaTxProcessor;\\n    constructor(address metaTxProcessor) internal {\\n        _metaTxProcessor = metaTxProcessor;\\n    }\\n\\n    ///@dev the from need to be equal to the first parameter of the function using that modifier\\n    function isValidSender(address from) internal view returns(bool) {\\n        return msg.sender == from || isMetaTx();\\n    }\\n\\n    function isMetaTx() internal view returns(bool) {\\n        return msg.sender == _metaTxProcessor;\\n    }\\n}\\n\",\"keccak256\":\"0x4d36cc539b5ec0fc2dec57a981af90afc8212e2c7bb2a8273e6fb508b0f92d32\"},\"src/Interfaces/ERC165.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC165\\n * @dev https://eips.ethereum.org/EIPS/eip-165\\n */\\ninterface ERC165 {\\n    /**\\n   * @notice Query if a contract implements interface `interfaceId`\\n   * @param interfaceId The interface identifier, as specified in ERC-165\\n   * @dev Interface identification is specified in ERC-165. This function\\n   * uses less than 30,000 gas.\\n   */\\n    function supportsInterface(bytes4 interfaceId)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xc0faa36cba688ce34574fdab3aaae02fc8255999ceec19998d4c22065a1754f8\"},\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Interfaces/ERC721.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nimport \\\"./ERC165.sol\\\";\\n\\ninterface ERC721 /*is ERC165*/ { // Interfaces still cannot inherit :(\\n    event Transfer(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 indexed _tokenId\\n    );\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _approved,\\n        uint256 indexed _tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed _owner,\\n        address indexed _operator,\\n        bool _approved\\n    );\\n\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n    \\n    function approve(address to, uint256 tokenId) external;\\n    function getApproved(uint256 tokenId)\\n        external\\n        view\\n        returns (address operator);\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 tokenId)\\n        external;\\n    function safeTransferFrom(address from, address to, uint256 tokenId)\\n        external;\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6796e307cbd33d1d26c0861a2c8c775570db0482cbbd1b66541b2a1af6a9623e\"},\"src/Interfaces/ERC721Enumerable.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n///  Note: the ERC-165 identifier for this interface is 0x780e9d63.\\ninterface ERC721Enumerable /* is ERC721 */ {\\n    /// @notice Count NFTs tracked by this contract\\n    /// @return A count of valid NFTs tracked by this contract, where each one of\\n    ///  them has an assigned and queryable owner not equal to the zero address\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Enumerate valid NFTs\\n    /// @dev Throws if `_index` >= `totalSupply()`.\\n    /// @param _index A counter less than `totalSupply()`\\n    /// @return The token identifier for the `_index`th NFT,\\n    ///  (sort order not specified)\\n    function tokenByIndex(uint256 _index) external view returns (uint256);\\n\\n    /// @notice Enumerate NFTs assigned to an owner\\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\\n    ///  `_owner` is the zero address, representing invalid NFTs.\\n    /// @param _owner An address where we are interested in NFTs owned by them\\n    /// @param _index A counter less than `balanceOf(_owner)`\\n    /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\\n    ///   (sort order not specified)\\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\\n}\",\"keccak256\":\"0xdd15c10b403e5bb1d1f86c403ee9d589d51a1d07193def74c71eece7696a3f71\"},\"src/Interfaces/ERC721TokenReceiver.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x1e7dcf369cd4048ef656ea016905f9ab78956d4ab88ddd9fc941e72128bb0c72\"},\"src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0xeac7dc828dbde8ad86c624d39dca24f7f66c3986958d8a71cd69a6aa9b5ed679\"},\"src/Test/NumberSale.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../EIP1776MetaTxReceiverBase.sol\\\";\\nimport \\\"./Numbers.sol\\\";\\nimport \\\"../Interfaces/ERC20.sol\\\";\\n\\ncontract NumberSale is EIP1776MetaTxReceiverBase {\\n\\n    Numbers internal /*immutable*/ _numbers;\\n    ERC20 internal /*immutable*/ _erc20Token;\\n    uint256 internal /*immutable*/ _price;\\n    constructor(Numbers numbers, ERC20 erc20Token, uint256 price, address metaTxProcessor) public EIP1776MetaTxReceiverBase(metaTxProcessor) {\\n        _numbers = numbers;\\n        _erc20Token = erc20Token;\\n        _price = price;\\n    }\\n\\n    function purchase(address from, address to) external {\\n\\n        // this check whether\\n        // 1) the first parameter is msg.sender, in which case the user is using a normal tx\\n        // 2) or the msg.sender is equal the MetatxProcessor (which ensure the first paramter is the address of the metatx signer)\\n        require(isValidSender(from), \\\"NOT_AUTHORIZED\\\");\\n\\n\\n        // Here we transfer from the sender\\n        // this works because the meta tx processor will be owing the ERC20 token temporarly\\n        // This allow the user to never need to approve ERC20 token before hand when using metatx\\n        require(_erc20Token.transferFrom(msg.sender, address(this), _price), \\\"ERC20_TRANSFER_FAILED\\\");\\n\\n        // if all is good we mint\\n        _numbers.mint(to);\\n    }\\n}\\n\",\"keccak256\":\"0x4d8abc5dc915d072e787730ec4e484d50482e515927970586513c6f63ba4f0c0\"},\"src/Test/Numbers.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../Libraries/AddressUtils.sol\\\";\\nimport \\\"../Interfaces/ERC721TokenReceiver.sol\\\";\\nimport \\\"../Interfaces/ERC721.sol\\\";\\nimport \\\"../Interfaces/ERC721Enumerable.sol\\\";\\n\\nimport \\\"../EIP1776MetaTxReceiverBase.sol\\\";\\n\\ncontract Numbers is /*ERC721, ERC721Enumerable,*/ EIP1776MetaTxReceiverBase { // interface seems to require overrides :(\\n\\n    //////////////////////////// ERC721 Events /////////////\\n    event Transfer(\\n        address indexed from,\\n        address indexed to,\\n        uint256 indexed tokenId\\n    );\\n    event Approval(\\n        address indexed owner,\\n        address indexed approved,\\n        uint256 indexed tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n    /////////////////////////////////////////////////////////\\n\\n\\n    using AddressUtils for address;\\n\\n    bytes4 internal constant _ERC721_RECEIVED = 0x150b7a02;\\n\\n    bytes4 internal constant ERC165ID = 0x01ffc9a7;\\n\\n    mapping(uint256 => uint256) _ownerAndIndex; // max 2**96 items, store both owner and item index\\n    mapping(address => uint256[]) _itemsPerOwner;\\n    mapping (address => mapping(address => bool)) public _operatorsForAll;\\n    mapping (uint256 => address) public _operators;\\n\\n    uint256 internal _nextId = 1;\\n\\n    constructor(address metaTxProcessor) public EIP1776MetaTxReceiverBase(metaTxProcessor) {}\\n\\n    function isValidApproveOperator(address from) internal returns (bool) {\\n        return isValidSender(from) || _operatorsForAll[from][msg.sender];\\n    }\\n\\n    function mint(address to) external {\\n        // TODO only specified minter can do\\n        uint256 id = _nextId++;\\n        uint256 index = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + index * 2**160;\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _transferFrom(address from, address to, uint256 id, bool safe, bytes memory data) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == from, \\\"NOT_OWNER\\\");\\n        require(to != address(0), \\\"ZERO_ADDRESS\\\");\\n        bool isMeta = isMetaTx();\\n        if (msg.sender != from && !isMeta) {\\n            require(\\n                _operatorsForAll[from][msg.sender] ||\\n                (operatorEnabled && _operators[id] == msg.sender),\\n                \\\"NOT_AUTHORIZED\\\"\\n            );\\n        }\\n\\n        uint256 lastItemId = _itemsPerOwner[from][_itemsPerOwner[from].length-1]; // TODO for silidity: should pop return the item ?\\n        _itemsPerOwner[from].pop();\\n        if (id != lastItemId) {\\n            _itemsPerOwner[from][index] = lastItemId;\\n            _ownerAndIndex[lastItemId] = uint256(from) + index * 2**160;\\n        }\\n\\n        uint256 newIndex = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + newIndex * 2**160;\\n        emit Transfer(from, to, id);\\n        if (safe && to.isContract()) {\\n            require(\\n                _checkOnERC721Received(isMeta ? from : msg.sender, from, to, id, data),\\n                \\\"ERC721_TRANSFER_FAILED\\\"\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice Return the number of Land owned by an address\\n     * @param owner The address to look for\\n     * @return The number of Land token owned by the address\\n     */\\n    function balanceOf(address owner) external view returns (uint256) {\\n        require(owner != address(0), \\\"owner is zero address\\\");\\n        return _itemsPerOwner[owner].length;\\n    }\\n\\n\\n    function _ownerOf(uint256 id) internal view returns (address tokenOwner) {\\n        tokenOwner = address(_ownerAndIndex[id]);\\n        require(tokenOwner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _ownerAndOperatorEnabledOf(uint256 id) internal view returns (address owner, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    function _ownerIndexAndOperatorEnabledOf(uint256 id) internal view returns (address owner, uint256 index, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        index = (data & 0xEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) / 2**160;\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    /**\\n     * @notice Return the owner of a Land\\n     * @param id The id of the Land\\n     * @return owner The address of the owner\\n     */\\n    function ownerOf(uint256 id) external view returns (address owner) {\\n        owner = _ownerOf(id);\\n        require(owner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _approveFor(address sender, address operator, uint256 id) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == sender, \\\"NOT_OWNER\\\");\\n        if(operator == address(0)) {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160; // no need to resset the operator, it will be overriden next time\\n        } else {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160 + 2**255;\\n            _operators[id] = operator;\\n        }\\n        emit Approval(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approveFor(\\n        address sender,\\n        address operator,\\n        uint256 id\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(isValidApproveOperator(sender), \\\"NOT_AUTHORIZED\\\");\\n        _approveFor(sender, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approve(address operator, uint256 id) external {\\n        address owner = _ownerOf(id);\\n        // NO META TX here as the first parameter is not the originator but the operator that is meant to be approved\\n        require(\\n            owner == msg.sender || // TODO remove duplicatre check\\n            _operatorsForAll[owner][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n        _approveFor(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Get the approved operator for a specific token\\n     * @param id The id of the token\\n     * @return The address of the operator\\n     */\\n    function getApproved(uint256 id) external view returns (address) {\\n        (address owner, bool operatorEnabled) = _ownerAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        if (operatorEnabled) {\\n            return _operators[id];\\n        } else {\\n            return address(0);\\n        }\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n    */\\n    function transferFrom(address from, address to, uint256 id) external {\\n        _transferFrom(from, to, id, false, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     * @param data Additional data\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, bytes memory data) public {\\n        _transferFrom(from, to, id, true, data);\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The send of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id) external {\\n        safeTransferFrom(from, to, id, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Check if the contract supports an interface\\n     * 0x01ffc9a7 is ERC-165\\n     * 0x80ac58cd is ERC-721\\n     * 0x780e9d63 is ERC-721 Enumerable Extension\\n     * @param id The id of the interface\\n     * @return True if the interface is supported\\n     */\\n    function supportsInterface(bytes4 id) external pure returns (bool) {\\n        return id == 0x01ffc9a7 || id == 0x80ac58cd || id == 0x780e9d63;\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAllFor(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(\\n            isValidSender(sender),\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        _setApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAll(address operator, bool approved) external {\\n\\n        // NOT META TX ...\\n        _setApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n\\n    function _setApprovalForAll(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) internal {\\n        _operatorsForAll[sender][operator] = approved;\\n        emit ApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Check if the sender approved the operator\\n     * @param owner The address of the owner\\n     * @param operator The address of the operator\\n     * @return isOperator The status of the approval\\n     */\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool isOperator)\\n    {\\n        return _operatorsForAll[owner][operator];\\n    }\\n\\n    function _checkOnERC721Received(address operator, address from, address to, uint256 tokenId, bytes memory _data)\\n        internal returns (bool)\\n    {\\n        bytes4 retval = ERC721TokenReceiver(to).onERC721Received(operator, from, tokenId, _data);\\n        return (retval == _ERC721_RECEIVED);\\n    }\\n\\n    /////////////// erc721 ENUMERABLE //////////////\\n    function totalSupply() external view returns (uint256) {\\n        return _nextId - 1;\\n    }\\n    function tokenByIndex(uint256 index) external view returns (uint256) {\\n        revert(\\\"NOT SUPPORTED\\\");\\n    }\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256) {\\n        return _itemsPerOwner[owner][index];\\n    }\\n}\\n\",\"keccak256\":\"0xbb39c793b52c65fbf25ee8368bdb63a01786857e1c8ac15506731053eec8e3b3\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      },
      "args": [
        "0x53d6D227E2cD9a9276049e8Dd1A5Ccd753FcC255",
        "0x33a0d701F0619AFb407963D6B7F9781dc40f9fcF",
        "1000000000000000000",
        "0xe5c05697666A18bBB0f1f620237402413cF7e1A1"
      ],
      "address": "0xecc11F2C4c6c263122D9933Ce88Ef433032043B4",
      "transactionHash": "0x36717df2e16583d44e6fd2b4e46c5c007d495002261cf84614f97186ac386ce8"
    },
    "NumberSale": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "contract Numbers",
                "name": "numbers",
                "type": "address"
              },
              {
                "internalType": "contract ERC20",
                "name": "erc20Token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "price",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "metaTxProcessor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "purchase",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506040516102e83803806102e88339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151600080546001600160a01b039283166001600160a01b031991821617909155600180549483169482169490941790935560028054919092169216919091179055600355610250806100986000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dde5a65d14610030575b600080fd5b61005e6004803603604081101561004657600080fd5b506001600160a01b0381358116916020013516610060565b005b610069826101e7565b6100ab576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b600254600354604080516323b872dd60e01b81523360048201523060248201526044810192909252516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561010857600080fd5b505af115801561011c573d6000803e3d6000fd5b505050506040513d602081101561013257600080fd5b505161017d576040805162461bcd60e51b8152602060048201526015602482015274115490cc8c17d514905394d1915497d19052531151605a1b604482015290519081900360640190fd5b600154604080516335313c2160e11b81526001600160a01b03848116600483015291519190921691636a62784291602480830192600092919082900301818387803b1580156101cb57600080fd5b505af11580156101df573d6000803e3d6000fd5b505050505050565b6000336001600160a01b03831614806102035750610203610209565b92915050565b6000546001600160a01b031633149056fea2646970667358221220dcdfbd9f6bba877ed869321ffa473d5e2f827ba26dea4ada24f08fe004544f7264736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2E8 CODESIZE SUB DUP1 PUSH2 0x2E8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP5 DUP4 AND SWAP5 DUP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 SSTORE PUSH2 0x250 DUP1 PUSH2 0x98 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDDE5A65D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69 DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0xAB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x17D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6A627842 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x203 JUMPI POP PUSH2 0x203 PUSH2 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xDF 0xBD SWAP16 PUSH12 0xBA877ED869321FFA473D5E2F DUP3 PUSH28 0xA26DEA4ADA24F08FE004544F7264736F6C6343000601003300000000 ",
            "sourceMap": "126:1201:17:-:0;;;316:230;8:9:-1;5:2;;;30:1;27;20:12;5:2;316:230:17;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;316:230:17;;;;;;;;;;;;;;;160:16:0;:34;;-1:-1:-1;;;;;160:34:0;;;-1:-1:-1;;;;;;160:34:0;;;;;;;;463:18:17;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;491:11:::1;:24:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;525:6:::1;:14:::0;126:1201;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dde5a65d14610030575b600080fd5b61005e6004803603604081101561004657600080fd5b506001600160a01b0381358116916020013516610060565b005b610069826101e7565b6100ab576040805162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015290519081900360640190fd5b600254600354604080516323b872dd60e01b81523360048201523060248201526044810192909252516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561010857600080fd5b505af115801561011c573d6000803e3d6000fd5b505050506040513d602081101561013257600080fd5b505161017d576040805162461bcd60e51b8152602060048201526015602482015274115490cc8c17d514905394d1915497d19052531151605a1b604482015290519081900360640190fd5b600154604080516335313c2160e11b81526001600160a01b03848116600483015291519190921691636a62784291602480830192600092919082900301818387803b1580156101cb57600080fd5b505af11580156101df573d6000803e3d6000fd5b505050505050565b6000336001600160a01b03831614806102035750610203610209565b92915050565b6000546001600160a01b031633149056fea2646970667358221220dcdfbd9f6bba877ed869321ffa473d5e2f827ba26dea4ada24f08fe004544f7264736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDDE5A65D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x69 DUP3 PUSH2 0x1E7 JUMP JUMPDEST PUSH2 0xAB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1393D517D055551213D492569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x17D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6A627842 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ DUP1 PUSH2 0x203 JUMPI POP PUSH2 0x203 PUSH2 0x209 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xDF 0xBD SWAP16 PUSH12 0xBA877ED869321FFA473D5E2F DUP3 PUSH28 0xA26DEA4ADA24F08FE004544F7264736F6C6343000601003300000000 ",
            "sourceMap": "126:1201:17:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;126:1201:17;;;;;;;;;;;;;;;;;;;552:773;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;552:773:17;;;;;;;;;;:::i;:::-;;;878:19;892:4;878:13;:19::i;:::-;870:46;;;;;-1:-1:-1;;;870:46:17;;;;;;;;;;;;-1:-1:-1;;;870:46:17;;;;;;;;;;;;;;;1171:11;;1223:6;;1171:59;;;-1:-1:-1;;;1171:59:17;;1196:10;1171:59;;;;1216:4;1171:59;;;;;;;;;;;;-1:-1:-1;;;;;1171:11:17;;;;:24;;:59;;;;;;;;;;;;;;;:11;;:59;;;5:2:-1;;;;30:1;27;20:12;5:2;1171:59:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1171:59:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1171:59:17;1163:93;;;;;-1:-1:-1;;;1163:93:17;;;;;;;;;;;;-1:-1:-1;;;1163:93:17;;;;;;;;;;;;;;;1301:8;;:17;;;-1:-1:-1;;;1301:17:17;;-1:-1:-1;;;;;1301:17:17;;;;;;;;;:8;;;;;:13;;:17;;;;;:8;;:17;;;;;;;:8;;:17;;;5:2:-1;;;;30:1;27;20:12;5:2;1301:17:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1301:17:17;;;;552:773;;:::o;304:121:0:-;363:4;386:10;-1:-1:-1;;;;;386:18:0;;;;:32;;;408:10;:8;:10::i;:::-;379:39;304:121;-1:-1:-1;;304:121:0:o;431:102::-;473:4;510:16;-1:-1:-1;;;;;510:16:0;496:10;:30;;431:102::o"
          },
          "methodIdentifiers": {
            "purchase(address,address)": "dde5a65d"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Numbers\",\"name\":\"numbers\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"metaTxProcessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/Test/NumberSale.sol\":\"NumberSale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/EIP1776MetaTxReceiverBase.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\ncontract EIP1776MetaTxReceiverBase {\\n\\n    address private _metaTxProcessor;\\n    constructor(address metaTxProcessor) internal {\\n        _metaTxProcessor = metaTxProcessor;\\n    }\\n\\n    ///@dev the from need to be equal to the first parameter of the function using that modifier\\n    function isValidSender(address from) internal view returns(bool) {\\n        return msg.sender == from || isMetaTx();\\n    }\\n\\n    function isMetaTx() internal view returns(bool) {\\n        return msg.sender == _metaTxProcessor;\\n    }\\n}\\n\",\"keccak256\":\"0x4d36cc539b5ec0fc2dec57a981af90afc8212e2c7bb2a8273e6fb508b0f92d32\"},\"src/Interfaces/ERC165.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC165\\n * @dev https://eips.ethereum.org/EIPS/eip-165\\n */\\ninterface ERC165 {\\n    /**\\n   * @notice Query if a contract implements interface `interfaceId`\\n   * @param interfaceId The interface identifier, as specified in ERC-165\\n   * @dev Interface identification is specified in ERC-165. This function\\n   * uses less than 30,000 gas.\\n   */\\n    function supportsInterface(bytes4 interfaceId)\\n        external\\n        view\\n        returns (bool);\\n}\\n\",\"keccak256\":\"0xc0faa36cba688ce34574fdab3aaae02fc8255999ceec19998d4c22065a1754f8\"},\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Interfaces/ERC721.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nimport \\\"./ERC165.sol\\\";\\n\\ninterface ERC721 /*is ERC165*/ { // Interfaces still cannot inherit :(\\n    event Transfer(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 indexed _tokenId\\n    );\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _approved,\\n        uint256 indexed _tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed _owner,\\n        address indexed _operator,\\n        bool _approved\\n    );\\n\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n    \\n    function approve(address to, uint256 tokenId) external;\\n    function getApproved(uint256 tokenId)\\n        external\\n        view\\n        returns (address operator);\\n\\n    function setApprovalForAll(address operator, bool approved) external;\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 tokenId)\\n        external;\\n    function safeTransferFrom(address from, address to, uint256 tokenId)\\n        external;\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x6796e307cbd33d1d26c0861a2c8c775570db0482cbbd1b66541b2a1af6a9623e\"},\"src/Interfaces/ERC721Enumerable.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n///  Note: the ERC-165 identifier for this interface is 0x780e9d63.\\ninterface ERC721Enumerable /* is ERC721 */ {\\n    /// @notice Count NFTs tracked by this contract\\n    /// @return A count of valid NFTs tracked by this contract, where each one of\\n    ///  them has an assigned and queryable owner not equal to the zero address\\n    function totalSupply() external view returns (uint256);\\n\\n    /// @notice Enumerate valid NFTs\\n    /// @dev Throws if `_index` >= `totalSupply()`.\\n    /// @param _index A counter less than `totalSupply()`\\n    /// @return The token identifier for the `_index`th NFT,\\n    ///  (sort order not specified)\\n    function tokenByIndex(uint256 _index) external view returns (uint256);\\n\\n    /// @notice Enumerate NFTs assigned to an owner\\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\\n    ///  `_owner` is the zero address, representing invalid NFTs.\\n    /// @param _owner An address where we are interested in NFTs owned by them\\n    /// @param _index A counter less than `balanceOf(_owner)`\\n    /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\\n    ///   (sort order not specified)\\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\\n}\",\"keccak256\":\"0xdd15c10b403e5bb1d1f86c403ee9d589d51a1d07193def74c71eece7696a3f71\"},\"src/Interfaces/ERC721TokenReceiver.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC721TokenReceiver {\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x1e7dcf369cd4048ef656ea016905f9ab78956d4ab88ddd9fc941e72128bb0c72\"},\"src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0xeac7dc828dbde8ad86c624d39dca24f7f66c3986958d8a71cd69a6aa9b5ed679\"},\"src/Test/NumberSale.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../EIP1776MetaTxReceiverBase.sol\\\";\\nimport \\\"./Numbers.sol\\\";\\nimport \\\"../Interfaces/ERC20.sol\\\";\\n\\ncontract NumberSale is EIP1776MetaTxReceiverBase {\\n\\n    Numbers internal /*immutable*/ _numbers;\\n    ERC20 internal /*immutable*/ _erc20Token;\\n    uint256 internal /*immutable*/ _price;\\n    constructor(Numbers numbers, ERC20 erc20Token, uint256 price, address metaTxProcessor) public EIP1776MetaTxReceiverBase(metaTxProcessor) {\\n        _numbers = numbers;\\n        _erc20Token = erc20Token;\\n        _price = price;\\n    }\\n\\n    function purchase(address from, address to) external {\\n\\n        // this check whether\\n        // 1) the first parameter is msg.sender, in which case the user is using a normal tx\\n        // 2) or the msg.sender is equal the MetatxProcessor (which ensure the first paramter is the address of the metatx signer)\\n        require(isValidSender(from), \\\"NOT_AUTHORIZED\\\");\\n\\n\\n        // Here we transfer from the sender\\n        // this works because the meta tx processor will be owing the ERC20 token temporarly\\n        // This allow the user to never need to approve ERC20 token before hand when using metatx\\n        require(_erc20Token.transferFrom(msg.sender, address(this), _price), \\\"ERC20_TRANSFER_FAILED\\\");\\n\\n        // if all is good we mint\\n        _numbers.mint(to);\\n    }\\n}\\n\",\"keccak256\":\"0x4d8abc5dc915d072e787730ec4e484d50482e515927970586513c6f63ba4f0c0\"},\"src/Test/Numbers.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"../Libraries/AddressUtils.sol\\\";\\nimport \\\"../Interfaces/ERC721TokenReceiver.sol\\\";\\nimport \\\"../Interfaces/ERC721.sol\\\";\\nimport \\\"../Interfaces/ERC721Enumerable.sol\\\";\\n\\nimport \\\"../EIP1776MetaTxReceiverBase.sol\\\";\\n\\ncontract Numbers is /*ERC721, ERC721Enumerable,*/ EIP1776MetaTxReceiverBase { // interface seems to require overrides :(\\n\\n    //////////////////////////// ERC721 Events /////////////\\n    event Transfer(\\n        address indexed from,\\n        address indexed to,\\n        uint256 indexed tokenId\\n    );\\n    event Approval(\\n        address indexed owner,\\n        address indexed approved,\\n        uint256 indexed tokenId\\n    );\\n    event ApprovalForAll(\\n        address indexed owner,\\n        address indexed operator,\\n        bool approved\\n    );\\n    /////////////////////////////////////////////////////////\\n\\n\\n    using AddressUtils for address;\\n\\n    bytes4 internal constant _ERC721_RECEIVED = 0x150b7a02;\\n\\n    bytes4 internal constant ERC165ID = 0x01ffc9a7;\\n\\n    mapping(uint256 => uint256) _ownerAndIndex; // max 2**96 items, store both owner and item index\\n    mapping(address => uint256[]) _itemsPerOwner;\\n    mapping (address => mapping(address => bool)) public _operatorsForAll;\\n    mapping (uint256 => address) public _operators;\\n\\n    uint256 internal _nextId = 1;\\n\\n    constructor(address metaTxProcessor) public EIP1776MetaTxReceiverBase(metaTxProcessor) {}\\n\\n    function isValidApproveOperator(address from) internal returns (bool) {\\n        return isValidSender(from) || _operatorsForAll[from][msg.sender];\\n    }\\n\\n    function mint(address to) external {\\n        // TODO only specified minter can do\\n        uint256 id = _nextId++;\\n        uint256 index = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + index * 2**160;\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    function _transferFrom(address from, address to, uint256 id, bool safe, bytes memory data) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == from, \\\"NOT_OWNER\\\");\\n        require(to != address(0), \\\"ZERO_ADDRESS\\\");\\n        bool isMeta = isMetaTx();\\n        if (msg.sender != from && !isMeta) {\\n            require(\\n                _operatorsForAll[from][msg.sender] ||\\n                (operatorEnabled && _operators[id] == msg.sender),\\n                \\\"NOT_AUTHORIZED\\\"\\n            );\\n        }\\n\\n        uint256 lastItemId = _itemsPerOwner[from][_itemsPerOwner[from].length-1]; // TODO for silidity: should pop return the item ?\\n        _itemsPerOwner[from].pop();\\n        if (id != lastItemId) {\\n            _itemsPerOwner[from][index] = lastItemId;\\n            _ownerAndIndex[lastItemId] = uint256(from) + index * 2**160;\\n        }\\n\\n        uint256 newIndex = _itemsPerOwner[to].length;\\n        _itemsPerOwner[to].push(id);\\n        _ownerAndIndex[id] = uint256(to) + newIndex * 2**160;\\n        emit Transfer(from, to, id);\\n        if (safe && to.isContract()) {\\n            require(\\n                _checkOnERC721Received(isMeta ? from : msg.sender, from, to, id, data),\\n                \\\"ERC721_TRANSFER_FAILED\\\"\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice Return the number of Land owned by an address\\n     * @param owner The address to look for\\n     * @return The number of Land token owned by the address\\n     */\\n    function balanceOf(address owner) external view returns (uint256) {\\n        require(owner != address(0), \\\"owner is zero address\\\");\\n        return _itemsPerOwner[owner].length;\\n    }\\n\\n\\n    function _ownerOf(uint256 id) internal view returns (address tokenOwner) {\\n        tokenOwner = address(_ownerAndIndex[id]);\\n        require(tokenOwner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _ownerAndOperatorEnabledOf(uint256 id) internal view returns (address owner, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    function _ownerIndexAndOperatorEnabledOf(uint256 id) internal view returns (address owner, uint256 index, bool operatorEnabled) {\\n        uint256 data = _ownerAndIndex[id];\\n        owner = address(data);\\n        index = (data & 0xEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) / 2**160;\\n        operatorEnabled = (data / 2**255) == 1;\\n    }\\n\\n    /**\\n     * @notice Return the owner of a Land\\n     * @param id The id of the Land\\n     * @return owner The address of the owner\\n     */\\n    function ownerOf(uint256 id) external view returns (address owner) {\\n        owner = _ownerOf(id);\\n        require(owner != address(0), \\\"token does not exist\\\");\\n    }\\n\\n    function _approveFor(address sender, address operator, uint256 id) internal {\\n        (address owner, uint256 index, bool operatorEnabled) = _ownerIndexAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        require(owner == sender, \\\"NOT_OWNER\\\");\\n        if(operator == address(0)) {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160; // no need to resset the operator, it will be overriden next time\\n        } else {\\n            _ownerAndIndex[id] = uint256(owner) + index * 2**160 + 2**255;\\n            _operators[id] = operator;\\n        }\\n        emit Approval(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approveFor(\\n        address sender,\\n        address operator,\\n        uint256 id\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(isValidApproveOperator(sender), \\\"NOT_AUTHORIZED\\\");\\n        _approveFor(sender, operator, id);\\n    }\\n\\n    /**\\n     * @notice Approve an operator to spend tokens on the sender behalf\\n     * @param operator The address receiving the approval\\n     * @param id The id of the token\\n     */\\n    function approve(address operator, uint256 id) external {\\n        address owner = _ownerOf(id);\\n        // NO META TX here as the first parameter is not the originator but the operator that is meant to be approved\\n        require(\\n            owner == msg.sender || // TODO remove duplicatre check\\n            _operatorsForAll[owner][msg.sender],\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n        _approveFor(owner, operator, id);\\n    }\\n\\n    /**\\n     * @notice Get the approved operator for a specific token\\n     * @param id The id of the token\\n     * @return The address of the operator\\n     */\\n    function getApproved(uint256 id) external view returns (address) {\\n        (address owner, bool operatorEnabled) = _ownerAndOperatorEnabledOf(id);\\n        require(owner != address(0), \\\"DOES_NOT_EXIST\\\");\\n        if (operatorEnabled) {\\n            return _operators[id];\\n        } else {\\n            return address(0);\\n        }\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n    */\\n    function transferFrom(address from, address to, uint256 id) external {\\n        _transferFrom(from, to, id, false, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The sender of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     * @param data Additional data\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id, bytes memory data) public {\\n        _transferFrom(from, to, id, true, data);\\n    }\\n\\n    /**\\n     * @notice Transfer a token between 2 addresses letting the receiver knows of the transfer\\n     * @param from The send of the token\\n     * @param to The recipient of the token\\n     * @param id The id of the token\\n     */\\n    function safeTransferFrom(address from, address to, uint256 id) external {\\n        safeTransferFrom(from, to, id, \\\"\\\");\\n    }\\n\\n    /**\\n     * @notice Check if the contract supports an interface\\n     * 0x01ffc9a7 is ERC-165\\n     * 0x80ac58cd is ERC-721\\n     * 0x780e9d63 is ERC-721 Enumerable Extension\\n     * @param id The id of the interface\\n     * @return True if the interface is supported\\n     */\\n    function supportsInterface(bytes4 id) external pure returns (bool) {\\n        return id == 0x01ffc9a7 || id == 0x80ac58cd || id == 0x780e9d63;\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param sender The address giving the approval\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAllFor(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) external {\\n        require(sender != address(0), \\\"ZERO_ADDRESS\\\");\\n        require(\\n            isValidSender(sender),\\n            \\\"NOT_AUTHORIZED\\\"\\n        );\\n\\n        _setApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Set the approval for an operator to manage all the tokens of the sender\\n     * @param operator The address receiving the approval\\n     * @param approved The determination of the approval\\n     */\\n    function setApprovalForAll(address operator, bool approved) external {\\n\\n        // NOT META TX ...\\n        _setApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n\\n    function _setApprovalForAll(\\n        address sender,\\n        address operator,\\n        bool approved\\n    ) internal {\\n        _operatorsForAll[sender][operator] = approved;\\n        emit ApprovalForAll(sender, operator, approved);\\n    }\\n\\n    /**\\n     * @notice Check if the sender approved the operator\\n     * @param owner The address of the owner\\n     * @param operator The address of the operator\\n     * @return isOperator The status of the approval\\n     */\\n    function isApprovedForAll(address owner, address operator)\\n        external\\n        view\\n        returns (bool isOperator)\\n    {\\n        return _operatorsForAll[owner][operator];\\n    }\\n\\n    function _checkOnERC721Received(address operator, address from, address to, uint256 tokenId, bytes memory _data)\\n        internal returns (bool)\\n    {\\n        bytes4 retval = ERC721TokenReceiver(to).onERC721Received(operator, from, tokenId, _data);\\n        return (retval == _ERC721_RECEIVED);\\n    }\\n\\n    /////////////// erc721 ENUMERABLE //////////////\\n    function totalSupply() external view returns (uint256) {\\n        return _nextId - 1;\\n    }\\n    function tokenByIndex(uint256 index) external view returns (uint256) {\\n        revert(\\\"NOT SUPPORTED\\\");\\n    }\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256) {\\n        return _itemsPerOwner[owner][index];\\n    }\\n}\\n\",\"keccak256\":\"0xbb39c793b52c65fbf25ee8368bdb63a01786857e1c8ac15506731053eec8e3b3\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      },
      "args": [
        "0x53d6D227E2cD9a9276049e8Dd1A5Ccd753FcC255",
        "0x21d366ee3BbF67AB057c517380D37E54fFd9dfC0",
        "1000000000000000000",
        "0xe5c05697666A18bBB0f1f620237402413cF7e1A1"
      ],
      "address": "0x8E7fe26181E585A228B0c4392c98C5c6c09B8D98",
      "transactionHash": "0x4ef502d44973c3e3970ddd95368c79f2cff859809eae5ddad0f4da7f348927f5"
    }
  }
}