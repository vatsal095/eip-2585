{
  "1578730568864": {
    "GenericMetaTxProcessor": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "nonce",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "name": "MetaTx",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address[4]",
                "name": "addresses",
                "type": "address[4]"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              },
              {
                "internalType": "uint256[5]",
                "name": "params",
                "type": "uint256[5]"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              },
              {
                "internalType": "address",
                "name": "tokenReceiver",
                "type": "address"
              },
              {
                "internalType": "enum GenericMetaTxProcessor.SignatureType",
                "name": "signatureType",
                "type": "uint8"
              }
            ],
            "name": "executeERC20MetaTx",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              },
              {
                "internalType": "bytes",
                "name": "returnData",
                "type": "bytes"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b5060405180604261117a8239604080519182900360420182207f47656e65726963204d657461205472616e73616374696f6e000000000000000083528151928390036018018320603160f81b84528251938490036001018420602080860193909352848401919091526060840152306080808501919091528251808503909101815260a09093019091528151910120600055506110c8806100b26000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f69004c914610030575b600080fd5b61010f60048036036101c081101561004757600080fd5b60808201359082018260c0810160a082013564010000000081111561006b57600080fd5b82018360208201111561007d57600080fd5b8035906020019184600183028401116401000000008311171561009f57600080fd5b9193909260c0830160a08401356401000000008111156100be57600080fd5b8201836020820111156100d057600080fd5b803590602001918460018302840111640100000000831117156100f257600080fd5b919350915080356001600160a01b0316906020013560ff16610192565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561015657818101518382015260200161013e565b50505050905090810190601f1680156101835780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6040805160a08181019092526000916060916101e5916001600160a01b038e351691908a9060059083908390808284376000920191909152508f91506003905060200201356001600160a01b0316610341565b6040805160808181019092526102a4918d90600490839083908082843760009201919091525050604080516020601f8e018190048102820181019092528c81528e9250908d908d9081908401838280828437600092019190915250506040805160a081810190925292508d9150600590839083908082843760009201919091525050604080516020601f8e018190048102820181019092528c815291508c908c90819084018382808284376000920191909152508b9250610464915050565b61032f6001600160a01b038c3581169060208e0135168d600260200201356001600160a01b03168d8d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040805160a081810190925292508f915060059083908390808284376000920191909152508c91506107ec9050565b91509150995099975050505050505050565b6001600160a01b038116158061035f57506001600160a01b03811633145b6103a0576040805162461bcd60e51b815260206004820152600d60248201526c3bb937b733903932b630bcb2b960991b604482015290519081900360640190fd5b81516001600160a01b0384166000908152600160208190526040909120540114610406576040805162461bcd60e51b81526020600482015260126024820152713737b731b29037baba1037b31037b93232b960711b604482015290519081900360640190fd5b60208201513a101561045f576040805162461bcd60e51b815260206004820152601d60248201527f6761735072696365203c207369676e6572206d696e4761735072696365000000604482015290519081900360640190fd5b505050565b606061047287878787610a55565b9050600282600281111561048257fe5b1415610620578651604080516320c13b0b60e01b8082526004820192835284516044830152845190936001600160a01b0316926320c13b0b9286928992918291602482019160640190602087019080838360005b838110156104ee5781810151838201526020016104d6565b50505050905090810190601f16801561051b5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561054e578181015183820152602001610536565b50505050905090810190601f16801561057b5780820380516001836020036101000a031916815260200191505b5094505050505060206040518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d60208110156105c457600080fd5b50516001600160e01b0319161461061b576040805162461bcd60e51b8152602060048201526016602482015275696e76616c69642031323731207369676e617475726560501b604482015290519081900360640190fd5b6107e3565b600182600281111561062e57fe5b141561077957630b135d3f60e11b87600060200201516001600160a01b0316631626ba7e8380519060200120866040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106ad578181015183820152602001610695565b50505050905090810190601f1680156106da5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b1580156106f857600080fd5b505afa15801561070c573d6000803e3d6000fd5b505050506040513d602081101561072257600080fd5b50516001600160e01b0319161461061b576040805162461bcd60e51b8152602060048201526016602482015275696e76616c69642031363534207369676e617475726560501b604482015290519081900360640190fd5b600061078c828051906020012085610c35565b88519091506001600160a01b038083169116146107e1576040805162461bcd60e51b815260206004820152600e60248201526d7369676e657220213d2066726f6d60901b604482015290519081900360640190fd5b505b50505050505050565b81516001600160a01b038816600090815260016020526040812091909155835160609061091b576080840151156108485761084289898989886002602002015189600460200201518a600360200201518a610d02565b50610912565b604080516323b872dd60e01b81526001600160a01b038b811660048301528a81166024830152604482018990529151918916916323b872dd916064808201926020929091908290030181600087803b1580156108a357600080fd5b505af11580156108b7573d6000803e3d6000fd5b505050506040513d60208110156108cd57600080fd5b5051610912576040805162461bcd60e51b815260206004820152600f60248201526e3330b4b632b2103a3930b739b332b960891b604482015290519081900360640190fd5b60019150610a06565b8515610964576040805162461bcd60e51b8152602060048201526013602482015272616d6f756e74203e203020616e64206461746160681b604482015290519081900360640190fd5b61096e858a610db5565b6109b5576040805162461bcd60e51b8152602060048201526013602482015272666972737420706172616d20213d2066726f6d60681b604482015290519081900360640190fd5b6080840151156109ee576109e4898989876002602002015188600460200201518960036020020151898c610de1565b9092509050610a06565b610a0088856002602002015187610e1d565b90925090505b835160408051841515815290516001600160a01b038c16917fefaba2f33aa25b55dc754bc8f130e29d44762a2c46ea678d680fd81da0d8b65e919081900360200190a397509795505050505050565b805160208083015160408085015160608681015160808089015185519788019890985286850195909552858201929092529284015260a0808401949094528051808403909401845260c0909201918290526000549092918060c3610fd082396040519081900360c30190209050876000602002015188600160200201518960026020020151898980519060200120878d600360048110610af157fe5b602002015160405160200180898152602001886001600160a01b03166001600160a01b03168152602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b0316815260200185815260200184815260200180602001836001600160a01b03166001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b83811015610ba8578181015183820152602001610b90565b50505050905090810190601f168015610bd55780820380516001836020036101000a031916815260200191505b50995050505050505050505060405160208183030381529060405280519060200120604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052915050949350505050565b60008151604114610c4557600080fd5b60208201516040830151606084015160001a601b811015610c6457601b015b8060ff16601b1480610c7957508060ff16601c145b610c8257600080fd5b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa158015610cd9573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b038416610cf957600080fd5b50505092915050565b6000805a604080516323b872dd60e01b81526001600160a01b038d811660048301528c81166024830152604482018b90529151929350908a16916323b872dd916064808201926020929091908290030181600087803b158015610d6457600080fd5b505af1158015610d78573d6000803e3d6000fd5b505050506040513d6020811015610d8e57600080fd5b50508415610da557610da58a898888858989610ede565b5060019998505050505050505050565b6000604483511015610dc957506000610ddb565b5060248201516001600160a01b038216145b92915050565b6000606060005a9050610df58a8986610e1d565b90935091508615610e0f57610e0f8b8a8a8a858b8b610ede565b509850989650505050505050565b60006060846001600160a01b031684846040518082805190602001908083835b60208310610e5c5780518252601f199092019160209182019101610e3d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d8060008114610ebf576040519150601f19603f3d011682016040523d82523d6000602084013e610ec4565b606091505b509092509050603f84045a11610ed657fe5b935093915050565b60005a8403905085811115610ef05750845b820184810285828281610eff57fe5b0414610f3d576040805162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b604482015290519081900360640190fd5b604080516323b872dd60e01b81526001600160a01b038b811660048301528581166024830152604482018490529151918a16916323b872dd916064808201926020929091908290030181600087803b158015610f9857600080fd5b505af1158015610fac573d6000803e3d6000fd5b505050506040513d6020811015610fc257600080fd5b505050505050505050505056fe45524332304d6574615472616e73616374696f6e28616464726573732066726f6d2c6164647265737320746f2c6164647265737320746f6b656e436f6e74726163742c75696e7432353620616d6f756e742c627974657320646174612c75696e74323536206e6f6e63652c75696e74323536206d696e47617350726963652c75696e743235362074784761732c75696e7432353620626173654761732c75696e7432353620746f6b656e47617350726963652c616464726573732072656c6179657229a2646970667358221220900811b0ae570d24bce42d2cf1759af54d81163477e5aa2964068e1c571a5d2d64736f6c63430006010033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e747261637429",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x42 PUSH2 0x117A DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x42 ADD DUP3 KECCAK256 PUSH32 0x47656E65726963204D657461205472616E73616374696F6E0000000000000000 DUP4 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x18 ADD DUP4 KECCAK256 PUSH1 0x31 PUSH1 0xF8 SHL DUP5 MSTORE DUP3 MLOAD SWAP4 DUP5 SWAP1 SUB PUSH1 0x1 ADD DUP5 KECCAK256 PUSH1 0x20 DUP1 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP5 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SSTORE POP PUSH2 0x10C8 DUP1 PUSH2 0xB2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF69004C9 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1C0 DUP2 LT ISZERO PUSH2 0x47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP1 DUP3 ADD DUP3 PUSH1 0xC0 DUP2 ADD PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xC0 DUP4 ADD PUSH1 0xA0 DUP5 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x156 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x183 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 PUSH2 0x1E5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 CALLDATALOAD AND SWAP2 SWAP1 DUP11 SWAP1 PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP16 SWAP2 POP PUSH1 0x3 SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2A4 SWAP2 DUP14 SWAP1 PUSH1 0x4 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE DUP15 SWAP3 POP SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP3 POP DUP14 SWAP2 POP PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE SWAP2 POP DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP PUSH2 0x464 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x20 DUP15 ADD CALLDATALOAD AND DUP14 PUSH1 0x2 PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP14 DUP14 DUP14 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP3 POP DUP16 SWAP2 POP PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP13 SWAP2 POP PUSH2 0x7EC SWAP1 POP JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP10 POP SWAP10 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x35F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST PUSH2 0x3A0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x3BB937B733903932B630BCB2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD ADD EQ PUSH2 0x406 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x3737B731B29037BABA1037B31037B93232B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD GASPRICE LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6761735072696365203C207369676E6572206D696E4761735072696365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x472 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x482 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x620 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x20C13B0B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 DUP4 MSTORE DUP5 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x20C13B0B SWAP3 DUP7 SWAP3 DUP10 SWAP3 SWAP2 DUP3 SWAP2 PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x64 ADD SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4EE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4D6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x51B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x54E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x536 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x57B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x61B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031323731207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x62E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x779 JUMPI PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP8 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1626BA7E DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6AD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x695 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6DA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x61B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031363534207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x78C DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH2 0xC35 JUMP JUMPDEST DUP9 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x7E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x7369676E657220213D2066726F6D PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 MLOAD PUSH1 0x60 SWAP1 PUSH2 0x91B JUMPI PUSH1 0x80 DUP5 ADD MLOAD ISZERO PUSH2 0x848 JUMPI PUSH2 0x842 DUP10 DUP10 DUP10 DUP10 DUP9 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x4 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH2 0xD02 JUMP JUMPDEST POP PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP11 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP10 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x912 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x3330B4B632B2103A3930B739B332B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP PUSH2 0xA06 JUMP JUMPDEST DUP6 ISZERO PUSH2 0x964 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x616D6F756E74203E203020616E642064617461 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x96E DUP6 DUP11 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x9B5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x666972737420706172616D20213D2066726F6D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD ISZERO PUSH2 0x9EE JUMPI PUSH2 0x9E4 DUP10 DUP10 DUP10 DUP8 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x4 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD DUP10 DUP13 PUSH2 0xDE1 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xA06 JUMP JUMPDEST PUSH2 0xA00 DUP9 DUP6 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP8 PUSH2 0xE1D JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP JUMPDEST DUP4 MLOAD PUSH1 0x40 DUP1 MLOAD DUP5 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP2 PUSH32 0xEFABA2F33AA25B55DC754BC8F130E29D44762A2C46EA678D680FD81DA0D8B65E SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 DUP2 ADD MLOAD PUSH1 0x80 DUP1 DUP10 ADD MLOAD DUP6 MLOAD SWAP8 DUP9 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP7 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP6 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP5 ADD MSTORE PUSH1 0xA0 DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 MLOAD DUP1 DUP5 SUB SWAP1 SWAP5 ADD DUP5 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x0 SLOAD SWAP1 SWAP3 SWAP2 DUP1 PUSH1 0xC3 PUSH2 0xFD0 DUP3 CODECOPY PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC3 ADD SWAP1 KECCAK256 SWAP1 POP DUP8 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP10 DUP10 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 DUP14 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0xAF1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBA8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB90 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBD5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP10 POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0xC64 JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xC79 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP12 SWAP1 MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 DUP11 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA5 DUP11 DUP10 DUP9 DUP9 DUP6 DUP10 DUP10 PUSH2 0xEDE JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 DUP4 MLOAD LT ISZERO PUSH2 0xDC9 JUMPI POP PUSH1 0x0 PUSH2 0xDDB JUMP JUMPDEST POP PUSH1 0x24 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 GAS SWAP1 POP PUSH2 0xDF5 DUP11 DUP10 DUP7 PUSH2 0xE1D JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP7 ISZERO PUSH2 0xE0F JUMPI PUSH2 0xE0F DUP12 DUP11 DUP11 DUP11 DUP6 DUP12 DUP12 PUSH2 0xEDE JUMP JUMPDEST POP SWAP9 POP SWAP9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xE5C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x3F DUP5 DIV GAS GT PUSH2 0xED6 JUMPI INVALID JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 GAS DUP5 SUB SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0xEF0 JUMPI POP DUP5 JUMPDEST DUP3 ADD DUP5 DUP2 MUL DUP6 DUP3 DUP3 DUP2 PUSH2 0xEFF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xF3D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP11 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS 0x4D PUSH6 0x74615472616E PUSH20 0x616374696F6E28616464726573732066726F6D2C PUSH2 0x6464 PUSH19 0x65737320746F2C6164647265737320746F6B65 PUSH15 0x436F6E74726163742C75696E743235 CALLDATASIZE KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742C627974657320646174612C75696E7432353620 PUSH15 0x6F6E63652C75696E74323536206D69 PUSH15 0x47617350726963652C75696E743235 CALLDATASIZE KECCAK256 PUSH21 0x784761732C75696E7432353620626173654761732C PUSH22 0x696E7432353620746F6B656E47617350726963652C61 PUSH5 0x6472657373 KECCAK256 PUSH19 0x656C6179657229A26469706673582212209008 GT 0xB0 0xAE JUMPI 0xD 0x24 0xBC 0xE4 0x2D 0x2C CALL PUSH22 0x9AF54D81163477E5AA2964068E1C571A5D2D64736F6C PUSH4 0x43000601 STOP CALLER GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C616464726573 PUSH20 0x20766572696679696E67436F6E74726163742900 ",
            "sourceMap": "360:9521:0:-:0;;;1602:271;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;751:93:0;;;;;;;;;;;;;;;;;;1742:37;;;;;;;;;;;;;-1:-1:-1;;;1797:14:0;;;;;;;;;;;;1675:181;;;;;;;;;;;;;;;;;;;1837:4;1675:181;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1675:181:0;;;;;;;1652:214;;;;;-1:-1:-1;1633:233:0;-1:-1:-1;360:9521:0;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f69004c914610030575b600080fd5b61010f60048036036101c081101561004757600080fd5b60808201359082018260c0810160a082013564010000000081111561006b57600080fd5b82018360208201111561007d57600080fd5b8035906020019184600183028401116401000000008311171561009f57600080fd5b9193909260c0830160a08401356401000000008111156100be57600080fd5b8201836020820111156100d057600080fd5b803590602001918460018302840111640100000000831117156100f257600080fd5b919350915080356001600160a01b0316906020013560ff16610192565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561015657818101518382015260200161013e565b50505050905090810190601f1680156101835780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6040805160a08181019092526000916060916101e5916001600160a01b038e351691908a9060059083908390808284376000920191909152508f91506003905060200201356001600160a01b0316610341565b6040805160808181019092526102a4918d90600490839083908082843760009201919091525050604080516020601f8e018190048102820181019092528c81528e9250908d908d9081908401838280828437600092019190915250506040805160a081810190925292508d9150600590839083908082843760009201919091525050604080516020601f8e018190048102820181019092528c815291508c908c90819084018382808284376000920191909152508b9250610464915050565b61032f6001600160a01b038c3581169060208e0135168d600260200201356001600160a01b03168d8d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040805160a081810190925292508f915060059083908390808284376000920191909152508c91506107ec9050565b91509150995099975050505050505050565b6001600160a01b038116158061035f57506001600160a01b03811633145b6103a0576040805162461bcd60e51b815260206004820152600d60248201526c3bb937b733903932b630bcb2b960991b604482015290519081900360640190fd5b81516001600160a01b0384166000908152600160208190526040909120540114610406576040805162461bcd60e51b81526020600482015260126024820152713737b731b29037baba1037b31037b93232b960711b604482015290519081900360640190fd5b60208201513a101561045f576040805162461bcd60e51b815260206004820152601d60248201527f6761735072696365203c207369676e6572206d696e4761735072696365000000604482015290519081900360640190fd5b505050565b606061047287878787610a55565b9050600282600281111561048257fe5b1415610620578651604080516320c13b0b60e01b8082526004820192835284516044830152845190936001600160a01b0316926320c13b0b9286928992918291602482019160640190602087019080838360005b838110156104ee5781810151838201526020016104d6565b50505050905090810190601f16801561051b5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561054e578181015183820152602001610536565b50505050905090810190601f16801561057b5780820380516001836020036101000a031916815260200191505b5094505050505060206040518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d60208110156105c457600080fd5b50516001600160e01b0319161461061b576040805162461bcd60e51b8152602060048201526016602482015275696e76616c69642031323731207369676e617475726560501b604482015290519081900360640190fd5b6107e3565b600182600281111561062e57fe5b141561077957630b135d3f60e11b87600060200201516001600160a01b0316631626ba7e8380519060200120866040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106ad578181015183820152602001610695565b50505050905090810190601f1680156106da5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b1580156106f857600080fd5b505afa15801561070c573d6000803e3d6000fd5b505050506040513d602081101561072257600080fd5b50516001600160e01b0319161461061b576040805162461bcd60e51b8152602060048201526016602482015275696e76616c69642031363534207369676e617475726560501b604482015290519081900360640190fd5b600061078c828051906020012085610c35565b88519091506001600160a01b038083169116146107e1576040805162461bcd60e51b815260206004820152600e60248201526d7369676e657220213d2066726f6d60901b604482015290519081900360640190fd5b505b50505050505050565b81516001600160a01b038816600090815260016020526040812091909155835160609061091b576080840151156108485761084289898989886002602002015189600460200201518a600360200201518a610d02565b50610912565b604080516323b872dd60e01b81526001600160a01b038b811660048301528a81166024830152604482018990529151918916916323b872dd916064808201926020929091908290030181600087803b1580156108a357600080fd5b505af11580156108b7573d6000803e3d6000fd5b505050506040513d60208110156108cd57600080fd5b5051610912576040805162461bcd60e51b815260206004820152600f60248201526e3330b4b632b2103a3930b739b332b960891b604482015290519081900360640190fd5b60019150610a06565b8515610964576040805162461bcd60e51b8152602060048201526013602482015272616d6f756e74203e203020616e64206461746160681b604482015290519081900360640190fd5b61096e858a610db5565b6109b5576040805162461bcd60e51b8152602060048201526013602482015272666972737420706172616d20213d2066726f6d60681b604482015290519081900360640190fd5b6080840151156109ee576109e4898989876002602002015188600460200201518960036020020151898c610de1565b9092509050610a06565b610a0088856002602002015187610e1d565b90925090505b835160408051841515815290516001600160a01b038c16917fefaba2f33aa25b55dc754bc8f130e29d44762a2c46ea678d680fd81da0d8b65e919081900360200190a397509795505050505050565b805160208083015160408085015160608681015160808089015185519788019890985286850195909552858201929092529284015260a0808401949094528051808403909401845260c0909201918290526000549092918060c3610fd082396040519081900360c30190209050876000602002015188600160200201518960026020020151898980519060200120878d600360048110610af157fe5b602002015160405160200180898152602001886001600160a01b03166001600160a01b03168152602001876001600160a01b03166001600160a01b03168152602001866001600160a01b03166001600160a01b0316815260200185815260200184815260200180602001836001600160a01b03166001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b83811015610ba8578181015183820152602001610b90565b50505050905090810190601f168015610bd55780820380516001836020036101000a031916815260200191505b50995050505050505050505060405160208183030381529060405280519060200120604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052915050949350505050565b60008151604114610c4557600080fd5b60208201516040830151606084015160001a601b811015610c6457601b015b8060ff16601b1480610c7957508060ff16601c145b610c8257600080fd5b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa158015610cd9573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b038416610cf957600080fd5b50505092915050565b6000805a604080516323b872dd60e01b81526001600160a01b038d811660048301528c81166024830152604482018b90529151929350908a16916323b872dd916064808201926020929091908290030181600087803b158015610d6457600080fd5b505af1158015610d78573d6000803e3d6000fd5b505050506040513d6020811015610d8e57600080fd5b50508415610da557610da58a898888858989610ede565b5060019998505050505050505050565b6000604483511015610dc957506000610ddb565b5060248201516001600160a01b038216145b92915050565b6000606060005a9050610df58a8986610e1d565b90935091508615610e0f57610e0f8b8a8a8a858b8b610ede565b509850989650505050505050565b60006060846001600160a01b031684846040518082805190602001908083835b60208310610e5c5780518252601f199092019160209182019101610e3d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d8060008114610ebf576040519150601f19603f3d011682016040523d82523d6000602084013e610ec4565b606091505b509092509050603f84045a11610ed657fe5b935093915050565b60005a8403905085811115610ef05750845b820184810285828281610eff57fe5b0414610f3d576040805162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b604482015290519081900360640190fd5b604080516323b872dd60e01b81526001600160a01b038b811660048301528581166024830152604482018490529151918a16916323b872dd916064808201926020929091908290030181600087803b158015610f9857600080fd5b505af1158015610fac573d6000803e3d6000fd5b505050506040513d6020811015610fc257600080fd5b505050505050505050505056fe45524332304d6574615472616e73616374696f6e28616464726573732066726f6d2c6164647265737320746f2c6164647265737320746f6b656e436f6e74726163742c75696e7432353620616d6f756e742c627974657320646174612c75696e74323536206e6f6e63652c75696e74323536206d696e47617350726963652c75696e743235362074784761732c75696e7432353620626173654761732c75696e7432353620746f6b656e47617350726963652c616464726573732072656c6179657229a2646970667358221220900811b0ae570d24bce42d2cf1759af54d81163477e5aa2964068e1c571a5d2d64736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF69004C9 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1C0 DUP2 LT ISZERO PUSH2 0x47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP1 DUP3 ADD DUP3 PUSH1 0xC0 DUP2 ADD PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xC0 DUP4 ADD PUSH1 0xA0 DUP5 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x156 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x183 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 PUSH2 0x1E5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 CALLDATALOAD AND SWAP2 SWAP1 DUP11 SWAP1 PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP16 SWAP2 POP PUSH1 0x3 SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2A4 SWAP2 DUP14 SWAP1 PUSH1 0x4 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE DUP15 SWAP3 POP SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP3 POP DUP14 SWAP2 POP PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE SWAP2 POP DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP PUSH2 0x464 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x20 DUP15 ADD CALLDATALOAD AND DUP14 PUSH1 0x2 PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP14 DUP14 DUP14 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP3 POP DUP16 SWAP2 POP PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP13 SWAP2 POP PUSH2 0x7EC SWAP1 POP JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP10 POP SWAP10 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x35F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST PUSH2 0x3A0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x3BB937B733903932B630BCB2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD ADD EQ PUSH2 0x406 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x3737B731B29037BABA1037B31037B93232B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD GASPRICE LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6761735072696365203C207369676E6572206D696E4761735072696365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x472 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x482 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x620 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x20C13B0B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 DUP4 MSTORE DUP5 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x20C13B0B SWAP3 DUP7 SWAP3 DUP10 SWAP3 SWAP2 DUP3 SWAP2 PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x64 ADD SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4EE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4D6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x51B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x54E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x536 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x57B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x61B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031323731207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x62E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x779 JUMPI PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP8 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1626BA7E DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6AD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x695 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6DA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x61B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031363534207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x78C DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH2 0xC35 JUMP JUMPDEST DUP9 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x7E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x7369676E657220213D2066726F6D PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 MLOAD PUSH1 0x60 SWAP1 PUSH2 0x91B JUMPI PUSH1 0x80 DUP5 ADD MLOAD ISZERO PUSH2 0x848 JUMPI PUSH2 0x842 DUP10 DUP10 DUP10 DUP10 DUP9 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x4 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH2 0xD02 JUMP JUMPDEST POP PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP11 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP10 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x912 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x3330B4B632B2103A3930B739B332B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP PUSH2 0xA06 JUMP JUMPDEST DUP6 ISZERO PUSH2 0x964 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x616D6F756E74203E203020616E642064617461 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x96E DUP6 DUP11 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x9B5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x666972737420706172616D20213D2066726F6D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD ISZERO PUSH2 0x9EE JUMPI PUSH2 0x9E4 DUP10 DUP10 DUP10 DUP8 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x4 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD DUP10 DUP13 PUSH2 0xDE1 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xA06 JUMP JUMPDEST PUSH2 0xA00 DUP9 DUP6 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP8 PUSH2 0xE1D JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP JUMPDEST DUP4 MLOAD PUSH1 0x40 DUP1 MLOAD DUP5 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP2 PUSH32 0xEFABA2F33AA25B55DC754BC8F130E29D44762A2C46EA678D680FD81DA0D8B65E SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 DUP2 ADD MLOAD PUSH1 0x80 DUP1 DUP10 ADD MLOAD DUP6 MLOAD SWAP8 DUP9 ADD SWAP9 SWAP1 SWAP9 MSTORE DUP7 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP6 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP5 ADD MSTORE PUSH1 0xA0 DUP1 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 MLOAD DUP1 DUP5 SUB SWAP1 SWAP5 ADD DUP5 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x0 SLOAD SWAP1 SWAP3 SWAP2 DUP1 PUSH1 0xC3 PUSH2 0xFD0 DUP3 CODECOPY PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC3 ADD SWAP1 KECCAK256 SWAP1 POP DUP8 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP10 DUP10 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 DUP14 PUSH1 0x3 PUSH1 0x4 DUP2 LT PUSH2 0xAF1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBA8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB90 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xBD5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP10 POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0xC64 JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xC79 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP12 SWAP1 MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 DUP11 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA5 DUP11 DUP10 DUP9 DUP9 DUP6 DUP10 DUP10 PUSH2 0xEDE JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 DUP4 MLOAD LT ISZERO PUSH2 0xDC9 JUMPI POP PUSH1 0x0 PUSH2 0xDDB JUMP JUMPDEST POP PUSH1 0x24 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 GAS SWAP1 POP PUSH2 0xDF5 DUP11 DUP10 DUP7 PUSH2 0xE1D JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP7 ISZERO PUSH2 0xE0F JUMPI PUSH2 0xE0F DUP12 DUP11 DUP11 DUP11 DUP6 DUP12 DUP12 PUSH2 0xEDE JUMP JUMPDEST POP SWAP9 POP SWAP9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xE5C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x3F DUP5 DIV GAS GT PUSH2 0xED6 JUMPI INVALID JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 GAS DUP5 SUB SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0xEF0 JUMPI POP DUP5 JUMPDEST DUP3 ADD DUP5 DUP2 MUL DUP6 DUP3 DUP3 DUP2 PUSH2 0xEFF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xF3D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP11 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS 0x4D PUSH6 0x74615472616E PUSH20 0x616374696F6E28616464726573732066726F6D2C PUSH2 0x6464 PUSH19 0x65737320746F2C6164647265737320746F6B65 PUSH15 0x436F6E74726163742C75696E743235 CALLDATASIZE KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742C627974657320646174612C75696E7432353620 PUSH15 0x6F6E63652C75696E74323536206D69 PUSH15 0x47617350726963652C75696E743235 CALLDATASIZE KECCAK256 PUSH21 0x784761732C75696E7432353620626173654761732C PUSH22 0x696E7432353620746F6B656E47617350726963652C61 PUSH5 0x6472657373 KECCAK256 PUSH19 0x656C6179657229A26469706673582212209008 GT 0xB0 0xAE JUMPI 0xD 0x24 0xBC 0xE4 0x2D 0x2C CALL PUSH22 0x9AF54D81163477E5AA2964068E1C571A5D2D64736F6C PUSH4 0x43000601 STOP CALLER ",
            "sourceMap": "360:9521:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:9521:0;;;;;;;;;;;;;;;;;;;2611:919;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2611:919:0;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2611:919:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2611:919:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2611:919:0;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2611:919:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2611:919:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2611:919:0;;-1:-1:-1;2611:919:0;-1:-1:-1;2611:919:0;;-1:-1:-1;;;;;2611:919:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2611:919:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3031:61;;;;;;;;;;2982:12;;2996:23;;3031:61;;-1:-1:-1;;;;;3057:12:0;;;;3031:61;3071:6;;3031:61;;;;3071:6;;3031:61;3071:6;3031:61;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3079:9:0;;-1:-1:-1;3089:1:0;;-1:-1:-1;3079:12:0;;;;-1:-1:-1;;;;;3079:12:0;3031:25;:61::i;:::-;3102:161;;;;;;;;;;;;3136:9;;3102:161;;;;3136:9;;3102:161;3136:9;3102:161;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;3102:161:0;;;;137:4:-1;3102:161:0;;;;;;;;;;;;;;;;;3159:6;;-1:-1:-1;3102:161:0;3179:4;;;;;;3102:161;;3179:4;;;;3102:161;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;3102:161:0;;;;;;;;;;;-1:-1:-1;3197:6:0;;-1:-1:-1;3102:161:0;;;;3197:6;;3102:161;3197:6;3102:161;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;3102:161:0;;;;137:4:-1;3102:161:0;;;;;;;;;;;;;;;;;;-1:-1:-1;3217:9:0;;;;;;3102:161;;3217:9;;;;3102:161;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3240:13:0;;-1:-1:-1;3102:20:0;;-1:-1:-1;;3102:161:0:i;:::-;3292:231;-1:-1:-1;;;;;3329:12:0;;;;;3359;;;;;3329;3405:1;3395:12;;;;-1:-1:-1;;;;;3395:12:0;3426:6;3450:4;;3292:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;3292:231:0;;;;;;;;;;;-1:-1:-1;3472:6:0;;-1:-1:-1;3292:231:0;;;;3472:6;;3292:231;3472:6;3292:231;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3496:13:0;;-1:-1:-1;3292:19:0;;-1:-1:-1;3292:231:0:i;:::-;3273:250;;;;2611:919;;;;;;;;;;;;:::o;3611:458::-;-1:-1:-1;;;;;3831:21:0;;;;:46;;-1:-1:-1;;;;;;3856:21:0;;3867:10;3856:21;3831:46;3810:106;;;;;-1:-1:-1;;;3810:106:0;;;;;;;;;;;;-1:-1:-1;;;3810:106:0;;;;;;;;;;;;;;;3954:9;;-1:-1:-1;;;;;3934:12:0;;3961:1;3934:12;;;:6;3954:9;3934:12;;;;;;;;:16;:29;3926:60;;;;;-1:-1:-1;;;3926:60:0;;;;;;;;;;;;-1:-1:-1;;;3926:60:0;;;;;;;;;;;;;;;4019:9;;;;4004:11;:24;;3996:66;;;;;-1:-1:-1;;;3996:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3611:458;;;:::o;5008:1070::-;5348:23;5374:47;5389:9;5400:6;5408:4;5414:6;5374:14;:47::i;:::-;5348:73;-1:-1:-1;5452:21:0;5435:13;:38;;;;;;;;;5431:641;;;5522:12;;5514:61;;;-1:-1:-1;;;5514:61:0;;;;;;;;;;;;;;;;;5579:18;;-1:-1:-1;;;;;5514:38:0;;;;5553:10;;5565:9;;5514:61;;;;;;;;;;5522:12;5514:61;;;;;;5532:1;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5514:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5514:61:0;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5514:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5514:61:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5514:61:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5514:61:0;-1:-1:-1;;;;;;5514:83:0;;5489:164;;;;;-1:-1:-1;;;5489:164:0;;;;;;;;;;;;-1:-1:-1;;;5489:164:0;;;;;;;;;;;;;;;5431:641;;;5690:21;5673:13;:38;;;;;;;;;5670:402;;;-1:-1:-1;;;5759:9:0;5769:1;5759:12;;;;-1:-1:-1;;;;;5751:38:0;;5800:10;5790:21;;;;;;5813:9;5751:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5751:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5751:72:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5751:72:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5751:72:0;-1:-1:-1;;;;;;5751:94:0;;5726:175;;;;;-1:-1:-1;;;5726:175:0;;;;;;;;;;;;-1:-1:-1;;;5726:175:0;;;;;;;;;;;;;;5670:402;5932:14;5949:49;5975:10;5965:21;;;;;;5988:9;5949:15;:49::i;:::-;6030:12;;5932:66;;-1:-1:-1;;;;;;6020:22:0;;;;;;6012:49;;;;;-1:-1:-1;;;6012:49:0;;;;;;;;;;;;-1:-1:-1;;;6012:49:0;;;;;;;;;;;;;;;5670:402;;5008:1070;;;;;;;:::o;8227:1652::-;8584:9;;-1:-1:-1;;;;;8569:12:0;;8520;8569;;;:6;8584:9;8569:12;;;;:24;;;;8608:11;;8534:23;;8604:1221;;8643:9;;;;:13;8640:445;;8676:283;8722:4;8748:2;8772:13;8807:6;8835;8842:1;8835:9;;;;8866:6;8873:1;8866:9;;;;8897:6;8904:1;8897:9;;;;8928:13;8676:24;:283::i;:::-;;8640:445;;;9006:44;;;-1:-1:-1;;;9006:44:0;;-1:-1:-1;;;;;9006:44:0;;;;;;;;;;;;;;;;;;;;;;:26;;;;;;:44;;;;;;;;;;;;;;;-1:-1:-1;9006:26:0;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;9006:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9006:44:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9006:44:0;8998:72;;;;;-1:-1:-1;;;8998:72:0;;;;;;;;;;;;-1:-1:-1;;;8998:72:0;;;;;;;;;;;;;;;9108:4;9098:14;;8604:1221;;;9151:11;;9143:43;;;;;-1:-1:-1;;;9143:43:0;;;;;;;;;;;;-1:-1:-1;;;9143:43:0;;;;;;;;;;;;;;;9225:47;9261:4;9267;9225:35;:47::i;:::-;9200:125;;;;;-1:-1:-1;;;9200:125:0;;;;;;;;;;;;-1:-1:-1;;;9200:125:0;;;;;;;;;;;;;;;9342:9;;;;:13;9339:476;;9399:294;9458:4;9484:2;9508:13;9543:6;9550:1;9543:9;;;;9574:6;9581:1;9574:9;;;;9605:6;9612:1;9605:9;;;;9636:13;9671:4;9399:37;:294::i;:::-;9375:318;;-1:-1:-1;9375:318:0;-1:-1:-1;9339:476:0;;;9756:44;9780:2;9784:6;9791:1;9784:9;;;;9795:4;9756:23;:44::i;:::-;9732:68;;-1:-1:-1;9732:68:0;-1:-1:-1;9339:476:0;9853:9;;9840:32;;;;;;;;;;-1:-1:-1;;;;;9840:32:0;;;;;;;;;9853:9;9840:32;;;8227:1652;;;;;;;;;;:::o;4075:927::-;4417:9;;;4440;;;;4463;;;;;4339:12;4486:9;;;;4509;;;;;4393:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;4393:135:0;;;;;;;;4424:1;4599:16;4339:12;;4393:135;;930:222;;4393:135;930:222;;;;;;;;;;;;-1:-1:-1;4739:9:0;4749:1;4739:12;;;;4773:9;4783:1;4773:12;;;;4807:9;4817:1;4807:12;;;;4841:6;4879:4;4869:15;;;;;;4906:13;4941:9;4951:1;4941:12;;;;;;;;;;;4656:315;;;;;;;;;;;-1:-1:-1;;;;;4656:315:0;-1:-1:-1;;;;;4656:315:0;;;;;;-1:-1:-1;;;;;4656:315:0;-1:-1:-1;;;;;4656:315:0;;;;;;-1:-1:-1;;;;;4656:315:0;-1:-1:-1;;;;;4656:315:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4656:315:0;-1:-1:-1;;;;;4656:315:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4656:315:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4656:315:0;;;4629:356;;;;;;4545:450;;;;;;-1:-1:-1;;;4545:450:0;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4545:450:0;;;4538:457;;;4075:927;;;;;;:::o;47:637:10:-;143:17;184:3;:10;198:2;184:16;176:25;;;;;;310:2;301:12;;295:19;347:2;338:12;;332:19;392:2;383:12;;377:19;212:9;369:28;516:2;512:6;;508:44;;;539:2;534:7;508:44;569:1;:7;;574:2;569:7;:18;;;;580:1;:7;;585:2;580:7;569:18;561:27;;;;;;611:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;611:24:10;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;611:24:10;;-1:-1:-1;;611:24:10;;;-1:-1:-1;;;;;;;653:23:10;;645:32;;;;;;47:637;;;;;;;:::o;7060:552:0:-;7332:4;7348:18;7369:9;7388:44;;;-1:-1:-1;;;7388:44:0;;-1:-1:-1;;;;;7388:44:0;;;;;;;;;;;;;;;;;;;;;;7348:30;;-1:-1:-1;7388:26:0;;;;;;:44;;;;;;;;;;;;;;;-1:-1:-1;7388:26:0;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;7388:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7388:44:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;7446:17:0;;7442:143;;7479:95;7487:4;7493:13;7508:8;7518:13;7533:10;7545:13;7560;7479:7;:95::i;:::-;-1:-1:-1;7601:4:0;;7060:552;-1:-1:-1;;;;;;;;;7060:552:0:o;1504:348:8:-;1623:4;1662:7;1647:4;:11;:23;1643:66;;;-1:-1:-1;1693:5:8;1686:12;;1643:66;-1:-1:-1;1789:2:8;1779:13;;1773:20;-1:-1:-1;;;;;1828:17:8;;1819:26;1504:348;;;;;:::o;7618:603:0:-;7906:12;7920:23;7955:18;7976:9;7955:30;;8019:43;8043:2;8047:8;8057:4;8019:23;:43::i;:::-;7995:67;;-1:-1:-1;7995:67:0;-1:-1:-1;8076:17:0;;8072:143;;8109:95;8117:4;8123:13;8138:8;8148:13;8163:10;8175:13;8190;8109:7;:95::i;:::-;7618:603;;;;;;;;;;;;:::o;6701:353::-;6831:12;6845:23;6904:2;-1:-1:-1;;;;;6904:7:0;6916:8;6926:4;6904:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6904:27:0;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1;6880:51:0;;-1:-1:-1;6880:51:0;-1:-1:-1;6971:2:0;6960:8;:13;6948:9;:25;6941:33;;;;6701:353;;;;;;:::o;6084:611::-;6324:17;6357:9;6344:10;:22;6324:42;;6391:8;6379:9;:20;6376:70;;;-1:-1:-1;6427:8:0;6376:70;6455:26;;6516:25;;;6528:13;6455:26;6516:25;6455:26;6559;;;;;:43;6551:64;;;;;-1:-1:-1;;;6551:64:0;;;;;;;;;;;;-1:-1:-1;;;6551:64:0;;;;;;;;;;;;;;;6625:63;;;-1:-1:-1;;;6625:63:0;;-1:-1:-1;;;;;6625:63:0;;;;;;;;;;;;;;;;;;;;;;:26;;;;;;:63;;;;;;;;;;;;;;;-1:-1:-1;6625:26:0;:63;;;5:2:-1;;;;30:1;27;20:12;5:2;6625:63:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6625:63:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;;;;;;6084:611:0:o"
          },
          "methodIdentifiers": {
            "executeERC20MetaTx(address[4],uint256,bytes,uint256[5],bytes,address,uint8)": "f69004c9"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"MetaTx\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[4]\",\"name\":\"addresses\",\"type\":\"address[4]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256[5]\",\"name\":\"params\",\"type\":\"uint256[5]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"},{\"internalType\":\"enum GenericMetaTxProcessor.SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"}],\"name\":\"executeERC20MetaTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"executeERC20MetaTx(address[4],uint256,bytes,uint256[5],bytes,address,uint8)\":{\"params\":{\"addresses\":\": from, to, tokenContract, relayer\",\"amount\":\"number of tokens to be transfered/allowed as part of the call.\",\"data\":\"bytes to send to the destination.\",\"params\":\"the meta-tx parameters : nonce, minGasPrice, txGas, baseGas, tokenGasPrice.\",\"signature\":\"the signature that ensure from has allowed the meta-tx to be performed.\",\"signatureType\":\"indicate whether it was signed via EOA=0, EIP-1654=1 or EIP-1271=2.\",\"tokenReceiver\":\"recipient of the gas charge.\"},\"returns\":{\"returnData\":\"data resulting from the execution.\",\"success\":\"whether the execution was successful.\"}}}},\"userdoc\":{\"methods\":{\"executeERC20MetaTx(address[4],uint256,bytes,uint256[5],bytes,address,uint8)\":{\"notice\":\"perform the meta-tx using EIP-712 message.\"}}}},\"settings\":{\"compilationTarget\":{\"src/GenericMetaTxProcessor.sol\":\"GenericMetaTxProcessor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/GenericMetaTxProcessor.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"./Libraries/BytesUtil.sol\\\";\\nimport \\\"./Libraries/AddressUtils.sol\\\";\\nimport \\\"./Libraries/SigUtil.sol\\\";\\nimport \\\"./Libraries/SafeMath.sol\\\";\\nimport \\\"./Interfaces/ERC1271.sol\\\";\\nimport \\\"./Interfaces/ERC1271Constants.sol\\\";\\nimport \\\"./Interfaces/ERC1654.sol\\\";\\nimport \\\"./Interfaces/ERC1654Constants.sol\\\";\\nimport \\\"./Interfaces/ERC20.sol\\\";\\n\\ncontract GenericMetaTxProcessor is ERC1271Constants, ERC1654Constants {\\n\\n    // ////////////// LIBRARIES /////////////////\\n    using SafeMath for uint256;\\n    using AddressUtils for address;\\n    // //////////////////////////////////////////\\n\\n\\n    // /////////////// CONSTANTS ////////////////\\n    enum SignatureType { DIRECT, EIP1654, EIP1271 }\\n\\n    bytes32 constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,address verifyingContract)\\\"\\n    );\\n    bytes32 DOMAIN_SEPARATOR;\\n\\n    bytes32 constant ERC20METATRANSACTION_TYPEHASH = keccak256(\\n        \\\"ERC20MetaTransaction(address from,address to,address tokenContract,uint256 amount,bytes data,uint256 nonce,uint256 minGasPrice,uint256 txGas,uint256 baseGas,uint256 tokenGasPrice,address relayer)\\\"\\n    );\\n    // //////////////////////////////////////////\\n\\n    // //////////////// EVENTS //////////////////\\n    event MetaTx(\\n        address indexed from,\\n        uint256 indexed nonce,\\n        bool success\\n    ); // TODO specify event as part of ERC-1776 ?\\n    // //////////////////////////////////////////\\n\\n    // //////////////// STATE ///////////////////\\n    mapping(address => uint256) nonces;\\n    // //////////////////////////////////////////\\n\\n    constructor() public {\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(\\\"Generic Meta Transaction\\\"),\\n                keccak256(\\\"1\\\"),\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    /// @notice perform the meta-tx using EIP-712 message.\\n    /// @param addresses : from, to, tokenContract, relayer\\n    /// @param amount number of tokens to be transfered/allowed as part of the call.\\n    /// @param data bytes to send to the destination.\\n    /// @param params the meta-tx parameters : nonce, minGasPrice, txGas, baseGas, tokenGasPrice.\\n    /// @param signature the signature that ensure from has allowed the meta-tx to be performed.\\n    /// @param tokenReceiver recipient of the gas charge.\\n    /// @param signatureType indicate whether it was signed via EOA=0, EIP-1654=1 or EIP-1271=2.\\n    /// @return success whether the execution was successful.\\n    /// @return returnData data resulting from the execution.\\n    function executeERC20MetaTx(\\n        address[4] calldata addresses, // from, to, tokenContract, relayer\\n        uint256 amount,\\n        bytes calldata data,\\n        uint256[5] calldata params, // nonce, minGasPrice, txGas, baseGas, tokenGasPrice\\n        bytes calldata signature,\\n        address tokenReceiver,\\n        SignatureType signatureType\\n    ) external returns (bool success, bytes memory returnData) {\\n        _ensureParametersValidity(addresses[0], params, addresses[3]);\\n        _ensureCorrectSigner(\\n            addresses,\\n            amount,\\n            data,\\n            params,\\n            signature,\\n            signatureType\\n        );\\n        return\\n            _performERC20MetaTx(\\n                addresses[0],\\n                addresses[1],\\n                ERC20(addresses[2]),\\n                amount,\\n                data,\\n                params,\\n                tokenReceiver\\n            );\\n    }\\n\\n    // ////////////////////////////// INTERNALS /////////////////////////\\n\\n    function _ensureParametersValidity(\\n        address from,\\n        uint256[5] memory params, // nonce, minGasPrice, txGas, baseGas, tokenGasPrice\\n        address relayer\\n    ) internal view {\\n        require(\\n            relayer == address(0) || relayer == msg.sender,\\n            \\\"wrong relayer\\\"\\n        );\\n        require(nonces[from] + 1 == params[0], \\\"nonce out of order\\\");\\n        require(tx.gasprice >= params[1], \\\"gasPrice < signer minGasPrice\\\");\\n    }\\n\\n    function _encodeMessage(\\n        address[4] memory addresses, // from, to, tokenContract, relayer\\n        uint256 amount,\\n        bytes memory data,\\n        uint256[5] memory params // nonce, minGasPrice, txGas, baseGas, tokenGasPrice\\n    ) internal view returns (bytes memory) {\\n\\n        bytes memory paramsEncoded = abi.encode(\\n            params[0],\\n            params[1],\\n            params[2],\\n            params[3],\\n            params[4]\\n        );\\n        return abi.encodePacked(\\n            \\\"\\\\x19\\\\x01\\\",\\n            DOMAIN_SEPARATOR,\\n            keccak256(\\n                abi.encode(\\n                    ERC20METATRANSACTION_TYPEHASH,\\n                    addresses[0],\\n                    addresses[1],\\n                    addresses[2],\\n                    amount,\\n                    keccak256(data),\\n                    paramsEncoded,\\n                    addresses[3]\\n                )\\n            )\\n        );\\n    }\\n\\n    function _ensureCorrectSigner(\\n        address[4] memory addresses, // from, to, tokenContract, relayer\\n        uint256 amount,\\n        bytes memory data,\\n        uint256[5] memory params, // nonce, minGasPrice, txGas, baseGas, tokenGasPrice\\n        bytes memory signature,\\n        SignatureType signatureType\\n    ) internal view {\\n        bytes memory dataToHash = _encodeMessage(addresses, amount, data, params);\\n        if (signatureType == SignatureType.EIP1271) {\\n            require(\\n                ERC1271(addresses[0]).isValidSignature(dataToHash, signature) == ERC1271_MAGICVALUE,\\n                \\\"invalid 1271 signature\\\"\\n            );\\n        } else if(signatureType == SignatureType.EIP1654){\\n            require(\\n                ERC1654(addresses[0]).isValidSignature(keccak256(dataToHash), signature) == ERC1654_MAGICVALUE,\\n                \\\"invalid 1654 signature\\\"\\n            );\\n        } else {\\n            address signer = SigUtil.recover(keccak256(dataToHash), signature);\\n            require(signer == addresses[0], \\\"signer != from\\\");\\n        }\\n    }\\n\\n    function _charge(\\n        address from,\\n        ERC20 tokenContract,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 initialGas,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) internal {\\n        uint256 gasCharge = initialGas - gasleft();\\n        if(gasCharge > gasLimit) {\\n            gasCharge = gasLimit;\\n        }\\n        gasCharge += baseGasCharge;\\n        uint256 tokensToCharge = gasCharge * tokenGasPrice;\\n        require(tokensToCharge / gasCharge == tokenGasPrice, \\\"overflow\\\");\\n        tokenContract.transferFrom(from, tokenReceiver, tokensToCharge);\\n    }\\n\\n    function _executeWithSpecificGas(\\n        address to,\\n        uint256 gasLimit,\\n        bytes memory data\\n    ) internal returns (bool success, bytes memory returnData) {\\n        (success, returnData) = to.call.gas(gasLimit)(data);\\n        assert(gasleft() > gasLimit / 63); // not enough gas provided, assert to throw all gas // TODO use EIP-1930\\n    }\\n\\n    function _transferAndChargeForGas(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 amount,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) internal returns (bool) {\\n        uint256 initialGas = gasleft();\\n        tokenContract.transferFrom(from, to, amount);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, tokenContract, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n        return true;\\n    }\\n\\n    function _executeWithSpecificGasAndChargeForIt(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver,\\n        bytes memory data\\n    ) internal returns (bool success, bytes memory returnData) {\\n        uint256 initialGas = gasleft();\\n        (success, returnData) = _executeWithSpecificGas(to, gasLimit, data);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, tokenContract, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n    }\\n\\n    function _performERC20MetaTx(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 amount,\\n        bytes memory data,\\n        uint256[5] memory params, // nonce, minGasPrice, txGas, baseGas, tokenGasPrice\\n        address tokenReceiver\\n    ) internal returns (bool success, bytes memory returnData) {\\n        nonces[from] = params[0];\\n\\n        if (data.length == 0) {\\n            if(params[4] > 0) {\\n                _transferAndChargeForGas(\\n                    from,\\n                    to,\\n                    tokenContract,\\n                    amount,\\n                    params[2],\\n                    params[4],\\n                    params[3],\\n                    tokenReceiver\\n                );\\n            } else {\\n                require(tokenContract.transferFrom(from, to, amount), \\\"failed transfer\\\");\\n            }\\n            success = true;\\n        } else {\\n            require(amount == 0, \\\"amount > 0 and data\\\");\\n            require(\\n                BytesUtil.doFirstParamEqualsAddress(data, from),\\n                \\\"first param != from\\\"\\n            );\\n            if(params[4] > 0) {\\n                (success, returnData) = _executeWithSpecificGasAndChargeForIt(\\n                    from,\\n                    to,\\n                    tokenContract,\\n                    params[2],\\n                    params[4],\\n                    params[3],\\n                    tokenReceiver,\\n                    data\\n                );\\n            } else {\\n                (success, returnData) = _executeWithSpecificGas(to, params[2], data);\\n            }\\n        }\\n\\n        emit MetaTx(from, params[0], success);\\n    }\\n}\\n\",\"keccak256\":\"0x5fdb9fc3198487050469736091fcc6de0bd980aaf2af922962b9ec85210c9bca\"},\"src/Interfaces/ERC1271.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC1271 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided data\\n    * @param data Arbitrary length data signed on the behalf of address(this)\\n    * @param signature Signature byte array associated with _data\\n    *\\n    * MUST return the bytes4 magic value 0x20c13b0b when function passes.\\n    * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\\n    * MUST allow external calls\\n    */\\n    function isValidSignature(bytes calldata data, bytes calldata signature)\\n        external\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0xd47b461d487409fbb422a86f77818cf4c3a904d21c80b7df63c42f5b114da68f\"},\"src/Interfaces/ERC1271Constants.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ncontract ERC1271Constants {\\n    bytes4 internal constant ERC1271_MAGICVALUE = 0x20c13b0b;\\n}\\n\",\"keccak256\":\"0xe699d97bb95be085cbb795821dd52673088d58d96976e26a0b066a856a6c1f3d\"},\"src/Interfaces/ERC1654.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC1654 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided hash\\n    * @param hash 32 bytes hash to be signed\\n    * @param signature Signature byte array associated with hash\\n    * @return magicValue 0x1626ba7e if valid else 0x00000000\\n    */\\n    function isValidSignature(bytes32 hash, bytes calldata signature)\\n        external\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4f006eeed4fdb08128571445ecdc75e13858dee0b7876431b46f75a2d9d9ff6a\"},\"src/Interfaces/ERC1654Constants.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ncontract ERC1654Constants {\\n    bytes4 internal constant ERC1654_MAGICVALUE = 0x1626ba7e;\\n}\\n\",\"keccak256\":\"0xd7650a572f69557bd6dfe3701a5bf02fd7148a127d7ec4a05dde59fca4ef19dd\"},\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0xeac7dc828dbde8ad86c624d39dca24f7f66c3986958d8a71cd69a6aa9b5ed679\"},\"src/Libraries/BytesUtil.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary BytesUtil {\\n    function memcpy(uint256 dest, uint256 src, uint256 len) internal pure {\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        uint256 mask = 256**(32 - len) - 1;\\n        assembly {\\n            let srcpart := and(mload(src), not(mask))\\n            let destpart := and(mload(dest), mask)\\n            mstore(dest, or(destpart, srcpart))\\n        }\\n    }\\n\\n    function pointerToBytes(uint256 src, uint256 len)\\n        internal\\n        pure\\n        returns (bytes memory)\\n    {\\n        bytes memory ret = new bytes(len);\\n        uint256 retptr;\\n        assembly {\\n            retptr := add(ret, 32)\\n        }\\n\\n        memcpy(retptr, src, len);\\n        return ret;\\n    }\\n\\n    function addressToBytes(address a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(\\n                add(m, 20),\\n                xor(0x140000000000000000000000000000000000000000, a)\\n            )\\n            mstore(0x40, add(m, 52))\\n            b := m\\n        }\\n    }\\n\\n    function uint256ToBytes(uint256 a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(add(m, 32), a)\\n            mstore(0x40, add(m, 64))\\n            b := m\\n        }\\n    }\\n\\n    function doFirstParamEqualsAddress(bytes memory data, address _address)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + 32)) {\\n            return false;\\n        }\\n        uint256 value;\\n        assembly {\\n            value := mload(add(data, 36))\\n        }\\n        return value == uint256(_address);\\n    }\\n\\n    function doParamEqualsUInt256(bytes memory data, uint256 i, uint256 value)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + (i + 1) * 32)) {\\n            return false;\\n        }\\n        uint256 offset = 36 + i * 32;\\n        uint256 valuePresent;\\n        assembly {\\n            valuePresent := mload(add(data, offset))\\n        }\\n        return valuePresent == value;\\n    }\\n\\n    function overrideFirst32BytesWithAddress(\\n        bytes memory data,\\n        address _address\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n\\n        bytes memory addressBytes = addressToBytes(_address);\\n        uint256 src;\\n        assembly {\\n            src := add(addressBytes, 32)\\n        }\\n\\n        memcpy(dest, src, 20);\\n        return data;\\n    }\\n\\n    function overrideFirstTwo32BytesWithAddressAndInt(\\n        bytes memory data,\\n        address _address,\\n        uint256 _value\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        uint256 src;\\n\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n        bytes memory bbytes = addressToBytes(_address);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 20);\\n\\n        assembly {\\n            dest := add(data, 68)\\n        } // 48 = 32 (offset) + 4 (func sig) + 32 (next slot)\\n        bbytes = uint256ToBytes(_value);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 32);\\n\\n        return data;\\n    }\\n}\\n\",\"keccak256\":\"0xbc2e25a5e410c9f7889beb483fe471a6aa55997ac0d3bafabd5042451a806529\"},\"src/Libraries/SafeMath.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that revert\\n */\\nlibrary SafeMath {\\n    /**\\n    * @dev Multiplies two numbers, throws on overflow.\\n    */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        c = a * b;\\n        require(c / a == b, \\\"overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Integer division of two numbers, truncating the quotient.\\n    */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        // uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return a / b;\\n    }\\n\\n    /**\\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\n    */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"undeflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n    * @dev Adds two numbers, throws on overflow.\\n    */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        c = a + b;\\n        require(c >= a, \\\"overflow\\\");\\n        return c;\\n    }\\n}\\n\",\"keccak256\":\"0x77a1483e56a10a93ab2d6b8ae7bd9a40d10e1c0edb9583cce13493b5549bf199\"},\"src/Libraries/SigUtil.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary SigUtil {\\n    function recover(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address recovered)\\n    {\\n        require(sig.length == 65);\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n        require(v == 27 || v == 28);\\n\\n        recovered = ecrecover(hash, v, r, s);\\n        require(recovered != address(0));\\n    }\\n\\n    function recoverWithZeroOnFailure(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address)\\n    {\\n        if (sig.length != 65) {\\n            return (address(0));\\n        }\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            return (address(0));\\n        } else {\\n            return ecrecover(hash, v, r, s);\\n        }\\n    }\\n\\n    // Builds a prefixed hash to mimic the behavior of eth_sign.\\n    function prefixed(bytes32 hash) internal pure returns (bytes memory) {\\n        return abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash);\\n    }\\n}\\n\",\"keccak256\":\"0x779ab6a267e945cd0f164fecf7f6366888e3f1bb36730391b47fd70d52a8f222\"}},\"version\":1}",
        "userdoc": {
          "methods": {
            "executeERC20MetaTx(address[4],uint256,bytes,uint256[5],bytes,address,uint8)": {
              "notice": "perform the meta-tx using EIP-712 message."
            }
          }
        }
      },
      "args": [],
      "address": "0xe5f5b9838f6d6b028Ba0325B0BC1b81F54c50Da3",
      "transactionHash": "0xae7c89e29e8fbef463dbf23541e38c96c75dafcb4a6b62d36ec64794d8f7f294"
    },
    "ExampleReceiver": {
      "contractInfo": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "metaTxProcessor",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "name": "Test",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "name": "doSomething",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "evm": {
          "bytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b5060405161022f38038061022f8339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556101ca806100656000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806331f1d25614610030575b600080fd5b6100b06004803603604081101561004657600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561007157600080fd5b82018360208201111561008357600080fd5b803590602001918460018302840111640100000000831117156100a557600080fd5b5090925090506100b2565b005b336001600160a01b03841614806100d357506000546001600160a01b031633145b610115576040805162461bcd60e51b815260206004820152600e60248201526d1b9bdd08185d5d1a1bdc9a5e995960921b604482015290519081900360640190fd5b7ff526a9e78d2a91108122eb4097f004d13fc5eeb1d1318bce3c5ef50f0fe6e58283838360405180846001600160a01b03166001600160a01b03168152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a150505056fea26469706673582212201136358ea8495b8130630f24884f71730e98eefbb81bffe5f1f959c22553953464736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x22F CODESIZE SUB DUP1 PUSH2 0x22F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1CA DUP1 PUSH2 0x65 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x31F1D256 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xB2 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ DUP1 PUSH2 0xD3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x115 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0xF526A9E78D2A91108122EB4097F004D13FC5EEB1D1318BCE3C5EF50F0FE6E582 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP LOG1 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT CALLDATASIZE CALLDATALOAD DUP15 0xA8 0x49 JUMPDEST DUP2 ADDRESS PUSH4 0xF24884F PUSH18 0x730E98EEFBB81BFFE5F1F959C22553953464 PUSH20 0x6F6C634300060100330000000000000000000000 ",
            "sourceMap": "24:417:11:-:0;;;102:95;8:9:-1;5:2;;;30:1;27;20:12;5:2;102:95:11;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;102:95:11;156:16;:34;;-1:-1:-1;;;;;156:34:11;;;-1:-1:-1;;;;;;156:34:11;;;;;;;;;24:417;;;;;;"
          },
          "deployedBytecode": {
            "linkReferences": {},
            "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806331f1d25614610030575b600080fd5b6100b06004803603604081101561004657600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561007157600080fd5b82018360208201111561008357600080fd5b803590602001918460018302840111640100000000831117156100a557600080fd5b5090925090506100b2565b005b336001600160a01b03841614806100d357506000546001600160a01b031633145b610115576040805162461bcd60e51b815260206004820152600e60248201526d1b9bdd08185d5d1a1bdc9a5e995960921b604482015290519081900360640190fd5b7ff526a9e78d2a91108122eb4097f004d13fc5eeb1d1318bce3c5ef50f0fe6e58283838360405180846001600160a01b03166001600160a01b03168152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f1916909201829003965090945050505050a150505056fea26469706673582212201136358ea8495b8130630f24884f71730e98eefbb81bffe5f1f959c22553953464736f6c63430006010033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x31F1D256 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xB2 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ DUP1 PUSH2 0xD3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x115 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0xF526A9E78D2A91108122EB4097F004D13FC5EEB1D1318BCE3C5EF50F0FE6E582 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP LOG1 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT CALLDATASIZE CALLDATALOAD DUP15 0xA8 0x49 JUMPDEST DUP2 ADDRESS PUSH4 0xF24884F PUSH18 0x730E98EEFBB81BFFE5F1F959C22553953464 PUSH20 0x6F6C634300060100330000000000000000000000 ",
            "sourceMap": "24:417:11:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24:417:11;;;;;;;;;;;;;;;;;;;246:193;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;246:193:11;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;246:193:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;246:193:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;246:193:11;;-1:-1:-1;246:193:11;-1:-1:-1;246:193:11;:::i;:::-;;;330:10;-1:-1:-1;;;;;330:18:11;;;;:52;;-1:-1:-1;366:16:11;;-1:-1:-1;;;;;366:16:11;352:10;:30;330:52;322:79;;;;;-1:-1:-1;;;322:79:11;;;;;;;;;;;;-1:-1:-1;;;322:79:11;;;;;;;;;;;;;;;416:16;421:4;427;;416:16;;;;-1:-1:-1;;;;;416:16:11;-1:-1:-1;;;;;416:16:11;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;416:16:11;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;416::11;;;;-1:-1:-1;416:16:11;;-1:-1:-1;;;;;416:16:11;246:193;;;:::o"
          },
          "methodIdentifiers": {
            "doSomething(address,string)": "31f1d256"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"metaTxProcessor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"Test\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"doSomething\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/Test/ExampleReceiver.sol\":\"ExampleReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Test/ExampleReceiver.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\ncontract ExampleReceiver  {\\n    address /* immutable */ _metaTxProcessor;\\n    constructor(address metaTxProcessor) public {\\n        _metaTxProcessor = metaTxProcessor;\\n    }\\n\\n    event Test(address from, string name);\\n    function doSomething(address from, string calldata name) external {\\n        require(msg.sender == from || msg.sender == _metaTxProcessor, \\\"not authorized\\\");\\n        emit Test(from, name);\\n    }\\n}\\n\",\"keccak256\":\"0x2c40a57d706161b22f459a4f40ad3975c43d72595ba6b78fa95b3687a0788116\"}},\"version\":1}",
        "userdoc": {
          "methods": {}
        }
      },
      "args": [
        "0xe5f5b9838f6d6b028Ba0325B0BC1b81F54c50Da3"
      ],
      "address": "0x4a477860E3FA76dbB053e7c6765e47C46E83F291",
      "transactionHash": "0x1021f81fa431dbd94902375129bd069651478b77aa29ba6fab7f465518ae145e"
    }
  }
}