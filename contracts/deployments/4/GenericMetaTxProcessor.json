{
  "contractInfo": {
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "batchNonce",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "success",
            "type": "bool"
          },
          {
            "indexed": false,
            "internalType": "bytes",
            "name": "returnData",
            "type": "bytes"
          }
        ],
        "name": "MetaTx",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address[4]",
            "name": "addresses",
            "type": "address[4]"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          },
          {
            "internalType": "uint256[5]",
            "name": "params",
            "type": "uint256[5]"
          },
          {
            "internalType": "bytes",
            "name": "signature",
            "type": "bytes"
          },
          {
            "internalType": "address",
            "name": "tokenReceiver",
            "type": "address"
          },
          {
            "internalType": "enum GenericMetaTxProcessor.SignatureType",
            "name": "signatureType",
            "type": "uint8"
          }
        ],
        "name": "executeERC20MetaTx",
        "outputs": [
          {
            "internalType": "bool",
            "name": "success",
            "type": "bool"
          },
          {
            "internalType": "bytes",
            "name": "returnData",
            "type": "bytes"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "uint128",
            "name": "batchId",
            "type": "uint128"
          }
        ],
        "name": "meta_nonce",
        "outputs": [
          {
            "internalType": "uint128",
            "name": "",
            "type": "uint128"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "evm": {
      "bytecode": {
        "linkReferences": {},
        "object": "60806040526002805460ff1916905534801561001a57600080fd5b5060405180604261158c8239604080519182900360420182207f47656e65726963204d657461205472616e73616374696f6e000000000000000083528151928390036018018320603160f81b84528251938490036001018420602080860193909352848401919091526060840152306080808501919091528251808503909101815260a09093019091528151910120600055506114d0806100bc6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806316b581061461003b578063f69004c91461008c575b600080fd5b6100706004803603604081101561005157600080fd5b5080356001600160a01b031690602001356001600160801b03166101ee565b604080516001600160801b039092168252519081900360200190f35b61016b60048036036101c08110156100a357600080fd5b60808201359082018260c0810160a08201356401000000008111156100c757600080fd5b8201836020820111156100d957600080fd5b803590602001918460018302840111640100000000831117156100fb57600080fd5b9193909260c0830160a084013564010000000081111561011a57600080fd5b82018360208201111561012c57600080fd5b8035906020019184600183028401116401000000008311171561014e57600080fd5b919350915080356001600160a01b0316906020013560ff16610224565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101b257818101518382015260200161019a565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6001600160a01b03821660009081526001602090815260408083206001600160801b038086168552925290912054165b92915050565b60025460009060609060ff1615610270576040805162461bcd60e51b815260206004820152600b60248201526a494e5f50524f475245535360a81b604482015290519081900360640190fd5b6002805460ff191660011790556040805160a08082019092526102ca918d356001600160a01b031691908a9060059083908390808284376000920191909152508f91506003905060200201356001600160a01b0316610430565b604080516080818101909252610389918d90600490839083908082843760009201919091525050604080516020601f8e018190048102820181019092528c81528e9250908d908d9081908401838280828437600092019190915250506040805160a081810190925292508d9150600590839083908082843760009201919091525050604080516020601f8e018190048102820181019092528c815291508c908c90819084018382808284376000920191909152508b9250610564915050565b6104146001600160a01b038c3581169060208e0135168d600260200201356001600160a01b03168d8d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040805160a081810190925292508f915060059083908390808284376000920191909152508c91506108ec9050565b6002805460ff19169055909c909b509950505050505050505050565b6001600160a01b038116158061044e57506001600160a01b03811633145b61048f576040805162461bcd60e51b815260206004820152600d60248201526c3bb937b733903932b630bcb2b960991b604482015290519081900360640190fd5b602082015142106104d1576040805162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b604482015290519081900360640190fd5b81516001600160a01b03841660009081526001602081815260408084206001600160801b03600160801b8704818116875291909352932054929392818416908216909201161461055d576040805162461bcd60e51b81526020600482015260126024820152713737b731b29037baba1037b31037b93232b960711b604482015290519081900360640190fd5b5050505050565b606061057287878787610eeb565b9050600282600281111561058257fe5b1415610720578651604080516320c13b0b60e01b8082526004820192835284516044830152845190936001600160a01b0316926320c13b0b9286928992918291602482019160640190602087019080838360005b838110156105ee5781810151838201526020016105d6565b50505050905090810190601f16801561061b5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561064e578181015183820152602001610636565b50505050905090810190601f16801561067b5780820380516001836020036101000a031916815260200191505b5094505050505060206040518083038186803b15801561069a57600080fd5b505afa1580156106ae573d6000803e3d6000fd5b505050506040513d60208110156106c457600080fd5b50516001600160e01b0319161461071b576040805162461bcd60e51b8152602060048201526016602482015275696e76616c69642031323731207369676e617475726560501b604482015290519081900360640190fd5b6108e3565b600182600281111561072e57fe5b141561087957630b135d3f60e11b87600060200201516001600160a01b0316631626ba7e8380519060200120866040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156107ad578181015183820152602001610795565b50505050905090810190601f1680156107da5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b1580156107f857600080fd5b505afa15801561080c573d6000803e3d6000fd5b505050506040513d602081101561082257600080fd5b50516001600160e01b0319161461071b576040805162461bcd60e51b8152602060048201526016602482015275696e76616c69642031363534207369676e617475726560501b604482015290519081900360640190fd5b600061088c828051906020012085610f40565b88519091506001600160a01b038083169116146108e1576040805162461bcd60e51b815260206004820152600e60248201526d7369676e657220213d2066726f6d60901b604482015290519081900360640190fd5b505b50505050505050565b81516001600160a01b0388166000908152600160209081526040808320600160801b85046001600160801b0390811685529252822080546fffffffffffffffffffffffffffffffff191691909316179091558351606090610a555760808401511561097c5761097689898989886002602002015189600460200201518a600360200201518a61100d565b50610a4c565b604080516323b872dd60e01b81526001600160a01b038b811660048301528a81166024830152604482018990529151918916916323b872dd916064808201926020929091908290030181600087803b1580156109d757600080fd5b505af11580156109eb573d6000803e3d6000fd5b505050506040513d6020811015610a0157600080fd5b5051610a4c576040805162461bcd60e51b8152602060048201526015602482015274115490cc8c17d514905394d1915497d19052531151605a1b604482015290519081900360640190fd5b60019150610e28565b610a5f858a6110c0565b610aa6576040805162461bcd60e51b8152602060048201526013602482015272666972737420706172616d20213d2066726f6d60681b604482015290519081900360640190fd5b60008615610c8657604080516370a0823160e01b815230600482015290516001600160a01b038a16916370a08231916024808301926020929190829003018186803b158015610af457600080fd5b505afa158015610b08573d6000803e3d6000fd5b505050506040513d6020811015610b1e57600080fd5b5051604080516323b872dd60e01b81526001600160a01b038d81166004830152306024830152604482018b90529151929350908a16916323b872dd916064808201926020929091908290030181600087803b158015610b7c57600080fd5b505af1158015610b90573d6000803e3d6000fd5b505050506040513d6020811015610ba657600080fd5b5051610bf9576040805162461bcd60e51b815260206004820152601760248201527f45524332305f414c4c4f434154494f4e5f4641494c4544000000000000000000604482015290519081900360640190fd5b876001600160a01b031663095ea7b38a896040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610c5957600080fd5b505af1158015610c6d573d6000803e3d6000fd5b505050506040513d6020811015610c8357600080fd5b50505b608085015115610cbf57610cb58a8a8a886002602002015189600460200201518a600360200201518a8d6110eb565b9093509150610cd7565b610cd189866002602002015188611127565b90935091505b8615610e2657604080516370a0823160e01b815230600482015290516000916001600160a01b038b16916370a0823191602480820192602092909190829003018186803b158015610d2757600080fd5b505afa158015610d3b573d6000803e3d6000fd5b505050506040513d6020811015610d5157600080fd5b5051905081811115610e24576040805163a9059cbb60e01b81526001600160a01b038d8116600483015284840360248301529151918b169163a9059cbb916044808201926020929091908290030181600087803b158015610db157600080fd5b505af1158015610dc5573d6000803e3d6000fd5b505050506040513d6020811015610ddb57600080fd5b5051610e24576040805162461bcd60e51b8152602060048201526013602482015272115490cc8c17d4915195539117d19052531151606a1b604482015290519081900360640190fd5b505b505b8360006020020151896001600160a01b03167f14bf78fa48cd58c248940ceb8c3baedd424d85b3f39432c0301ea1f161490ae38484604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ea4578181015183820152602001610e8c565b50505050905090810190601f168015610ed15780820380516001836020036101000a031916815260200191505b50935050505060405180910390a397509795505050505050565b6060600054610efc868686866111e8565b80519060200120604051602001808061190160f01b815250600201838152602001828152602001925050506040516020818303038152906040529050949350505050565b60008151604114610f5057600080fd5b60208201516040830151606084015160001a601b811015610f6f57601b015b8060ff16601b1480610f8457508060ff16601c145b610f8d57600080fd5b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa158015610fe4573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b03841661100457600080fd5b50505092915050565b6000805a604080516323b872dd60e01b81526001600160a01b038d811660048301528c81166024830152604482018b90529151929350908a16916323b872dd916064808201926020929091908290030181600087803b15801561106f57600080fd5b505af1158015611083573d6000803e3d6000fd5b505050506040513d602081101561109957600080fd5b505084156110b0576110b08a8988888589896112e6565b5060019998505050505050505050565b60006044835110156110d45750600061021e565b5060248201516001600160a01b0382161492915050565b6000606060005a90506110ff8a8986611127565b90935091508615611119576111198b8a8a8a858b8b6112e6565b509850989650505050505050565b60006060846001600160a01b031684846040518082805190602001908083835b602083106111665780518252601f199092019160209182019101611147565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d80600081146111c9576040519150601f19603f3d011682016040523d82523d6000602084013e6111ce565b606091505b509092509050603f84045a116111e057fe5b935093915050565b606060405180806113d860c391396040519081900360c301902090508560006020020151866001602002015187600260200201518787805190602001208760006005811061123257fe5b6020020151886001602002015189600260200201518a600360200201518b600460200201518f600360209081029190910151604080519283019d909d526001600160a01b039b8c16828e0152998b166060820152978a16608089015260a088019690965260c087019490945260e0860192909252610100850152610120840152610140830152610160820152911661018080830191909152825180830390910181526101a090910190915295945050505050565b60005a84039050858111156112f85750845b82018481028582828161130757fe5b0414611345576040805162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b604482015290519081900360640190fd5b604080516323b872dd60e01b81526001600160a01b038b811660048301528581166024830152604482018490529151918a16916323b872dd916064808201926020929091908290030181600087803b1580156113a057600080fd5b505af11580156113b4573d6000803e3d6000fd5b505050506040513d60208110156113ca57600080fd5b505050505050505050505056fe45524332304d6574615472616e73616374696f6e28616464726573732066726f6d2c6164647265737320746f2c6164647265737320746f6b656e436f6e74726163742c75696e7432353620616d6f756e742c627974657320646174612c75696e743235362062617463684e6f6e63652c75696e74323536206578706972792c75696e743235362074784761732c75696e7432353620626173654761732c75696e7432353620746f6b656e47617350726963652c616464726573732072656c6179657229a2646970667358221220c6c9f04e11092fea69f1c0fe69732b2be4e00bb255bafc4599283e4da77d4dae64736f6c63430006010033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e747261637429",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x42 PUSH2 0x158C DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x42 ADD DUP3 KECCAK256 PUSH32 0x47656E65726963204D657461205472616E73616374696F6E0000000000000000 DUP4 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP1 SUB PUSH1 0x18 ADD DUP4 KECCAK256 PUSH1 0x31 PUSH1 0xF8 SHL DUP5 MSTORE DUP3 MLOAD SWAP4 DUP5 SWAP1 SUB PUSH1 0x1 ADD DUP5 KECCAK256 PUSH1 0x20 DUP1 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP5 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ADDRESS PUSH1 0x80 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SSTORE POP PUSH2 0x14D0 DUP1 PUSH2 0xBC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16B58106 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF69004C9 EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1C0 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP1 DUP3 ADD DUP3 PUSH1 0xC0 DUP2 ADD PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xC0 DUP4 ADD PUSH1 0xA0 DUP5 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x19A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1DF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP7 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x270 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x494E5F50524F4752455353 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2CA SWAP2 DUP14 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP11 SWAP1 PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP16 SWAP2 POP PUSH1 0x3 SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH2 0x389 SWAP2 DUP14 SWAP1 PUSH1 0x4 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE DUP15 SWAP3 POP SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP3 POP DUP14 SWAP2 POP PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE SWAP2 POP DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP PUSH2 0x564 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x414 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x20 DUP15 ADD CALLDATALOAD AND DUP14 PUSH1 0x2 PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP14 DUP14 DUP14 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP3 POP DUP16 SWAP2 POP PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP13 SWAP2 POP PUSH2 0x8EC SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x44E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST PUSH2 0x48F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x3BB937B733903932B630BCB2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD TIMESTAMP LT PUSH2 0x4D1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP8 DIV DUP2 DUP2 AND DUP8 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP4 KECCAK256 SLOAD SWAP3 SWAP4 SWAP3 DUP2 DUP5 AND SWAP1 DUP3 AND SWAP1 SWAP3 ADD AND EQ PUSH2 0x55D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x3737B731B29037BABA1037B31037B93232B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x572 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x582 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x720 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x20C13B0B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 DUP4 MSTORE DUP5 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x20C13B0B SWAP3 DUP7 SWAP3 DUP10 SWAP3 SWAP2 DUP3 SWAP2 PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x64 ADD SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5EE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5D6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x61B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x64E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x636 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x67B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031323731207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x72E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x879 JUMPI PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP8 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1626BA7E DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7AD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x795 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7DA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031363534207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x88C DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH2 0xF40 JUMP JUMPDEST DUP9 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x8E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x7369676E657220213D2066726F6D PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x80 SHL DUP6 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE DUP4 MLOAD PUSH1 0x60 SWAP1 PUSH2 0xA55 JUMPI PUSH1 0x80 DUP5 ADD MLOAD ISZERO PUSH2 0x97C JUMPI PUSH2 0x976 DUP10 DUP10 DUP10 DUP10 DUP9 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x4 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH2 0x100D JUMP JUMPDEST POP PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP11 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP10 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xA4C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP PUSH2 0xE28 JUMP JUMPDEST PUSH2 0xA5F DUP6 DUP11 PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0xAA6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x666972737420706172616D20213D2066726F6D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 ISZERO PUSH2 0xC86 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP12 SWAP1 MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 DUP11 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xBF9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305F414C4C4F434154494F4E5F4641494C4544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 DUP11 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD ISZERO PUSH2 0xCBF JUMPI PUSH2 0xCB5 DUP11 DUP11 DUP11 DUP9 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x4 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP14 PUSH2 0x10EB JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0xCD1 DUP10 DUP7 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH2 0x1127 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP JUMPDEST DUP7 ISZERO PUSH2 0xE26 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE24 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP5 SUB PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP12 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xE24 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115490CC8C17D4915195539117D19052531151 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST POP JUMPDEST DUP4 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x14BF78FA48CD58C248940CEB8C3BAEDD424D85B3F39432C0301EA1F161490AE3 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEA4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE8C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xED1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 SLOAD PUSH2 0xEFC DUP7 DUP7 DUP7 DUP7 PUSH2 0x11E8 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0xF6F JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xF84 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xF8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1004 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP12 SWAP1 MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 DUP11 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1083 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1099 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 ISZERO PUSH2 0x10B0 JUMPI PUSH2 0x10B0 DUP11 DUP10 DUP9 DUP9 DUP6 DUP10 DUP10 PUSH2 0x12E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 DUP4 MLOAD LT ISZERO PUSH2 0x10D4 JUMPI POP PUSH1 0x0 PUSH2 0x21E JUMP JUMPDEST POP PUSH1 0x24 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 GAS SWAP1 POP PUSH2 0x10FF DUP11 DUP10 DUP7 PUSH2 0x1127 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP7 ISZERO PUSH2 0x1119 JUMPI PUSH2 0x1119 DUP12 DUP11 DUP11 DUP11 DUP6 DUP12 DUP12 PUSH2 0x12E6 JUMP JUMPDEST POP SWAP9 POP SWAP9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1166 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x3F DUP5 DIV GAS GT PUSH2 0x11E0 JUMPI INVALID JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x13D8 PUSH1 0xC3 SWAP2 CODECOPY PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC3 ADD SWAP1 KECCAK256 SWAP1 POP DUP6 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD DUP8 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP8 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x0 PUSH1 0x5 DUP2 LT PUSH2 0x1232 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD DUP12 PUSH1 0x4 PUSH1 0x20 MUL ADD MLOAD DUP16 PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 ADD SWAP14 SWAP1 SWAP14 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND DUP3 DUP15 ADD MSTORE SWAP10 DUP12 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP8 DUP11 AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xC0 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xE0 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP2 AND PUSH2 0x180 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x1A0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 GAS DUP5 SUB SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0x12F8 JUMPI POP DUP5 JUMPDEST DUP3 ADD DUP5 DUP2 MUL DUP6 DUP3 DUP3 DUP2 PUSH2 0x1307 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1345 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP11 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS 0x4D PUSH6 0x74615472616E PUSH20 0x616374696F6E28616464726573732066726F6D2C PUSH2 0x6464 PUSH19 0x65737320746F2C6164647265737320746F6B65 PUSH15 0x436F6E74726163742C75696E743235 CALLDATASIZE KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742C627974657320646174612C75696E7432353620 PUSH3 0x617463 PUSH9 0x4E6F6E63652C75696E PUSH21 0x323536206578706972792C75696E74323536207478 SELFBALANCE PUSH2 0x732C PUSH22 0x696E7432353620626173654761732C75696E74323536 KECCAK256 PUSH21 0x6F6B656E47617350726963652C6164647265737320 PUSH19 0x656C6179657229A2646970667358221220C6C9 CREATE 0x4E GT MULMOD 0x2F 0xEA PUSH10 0xF1C0FE69732B2BE4E00B 0xB2 SSTORE 0xBA 0xFC GASLIMIT SWAP10 0x28 RETURNDATACOPY 0x4D 0xA7 PUSH30 0x4DAE64736F6C63430006010033454950373132446F6D61696E2873747269 PUSH15 0x67206E616D652C737472696E672076 PUSH6 0x7273696F6E2C PUSH2 0x6464 PUSH19 0x65737320766572696679696E67436F6E747261 PUSH4 0x74290000 ",
        "sourceMap": "360:10721:1:-:0;;;1602:17;;;-1:-1:-1;;1602:17:1;;;1676:271;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;751:93:1;;;;;;;;;;;;;;;;;;1816:37;;;;;;;;;;;;;-1:-1:-1;;;1871:14:1;;;;;;;;;;;;1749:181;;;;;;;;;;;;;;;;;;;1911:4;1749:181;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1749:181:1;;;;;;;1726:214;;;;;-1:-1:-1;1707:233:1;-1:-1:-1;360:10721:1;;;;;;"
      },
      "deployedBytecode": {
        "linkReferences": {},
        "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806316b581061461003b578063f69004c91461008c575b600080fd5b6100706004803603604081101561005157600080fd5b5080356001600160a01b031690602001356001600160801b03166101ee565b604080516001600160801b039092168252519081900360200190f35b61016b60048036036101c08110156100a357600080fd5b60808201359082018260c0810160a08201356401000000008111156100c757600080fd5b8201836020820111156100d957600080fd5b803590602001918460018302840111640100000000831117156100fb57600080fd5b9193909260c0830160a084013564010000000081111561011a57600080fd5b82018360208201111561012c57600080fd5b8035906020019184600183028401116401000000008311171561014e57600080fd5b919350915080356001600160a01b0316906020013560ff16610224565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101b257818101518382015260200161019a565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6001600160a01b03821660009081526001602090815260408083206001600160801b038086168552925290912054165b92915050565b60025460009060609060ff1615610270576040805162461bcd60e51b815260206004820152600b60248201526a494e5f50524f475245535360a81b604482015290519081900360640190fd5b6002805460ff191660011790556040805160a08082019092526102ca918d356001600160a01b031691908a9060059083908390808284376000920191909152508f91506003905060200201356001600160a01b0316610430565b604080516080818101909252610389918d90600490839083908082843760009201919091525050604080516020601f8e018190048102820181019092528c81528e9250908d908d9081908401838280828437600092019190915250506040805160a081810190925292508d9150600590839083908082843760009201919091525050604080516020601f8e018190048102820181019092528c815291508c908c90819084018382808284376000920191909152508b9250610564915050565b6104146001600160a01b038c3581169060208e0135168d600260200201356001600160a01b03168d8d8d8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506040805160a081810190925292508f915060059083908390808284376000920191909152508c91506108ec9050565b6002805460ff19169055909c909b509950505050505050505050565b6001600160a01b038116158061044e57506001600160a01b03811633145b61048f576040805162461bcd60e51b815260206004820152600d60248201526c3bb937b733903932b630bcb2b960991b604482015290519081900360640190fd5b602082015142106104d1576040805162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b604482015290519081900360640190fd5b81516001600160a01b03841660009081526001602081815260408084206001600160801b03600160801b8704818116875291909352932054929392818416908216909201161461055d576040805162461bcd60e51b81526020600482015260126024820152713737b731b29037baba1037b31037b93232b960711b604482015290519081900360640190fd5b5050505050565b606061057287878787610eeb565b9050600282600281111561058257fe5b1415610720578651604080516320c13b0b60e01b8082526004820192835284516044830152845190936001600160a01b0316926320c13b0b9286928992918291602482019160640190602087019080838360005b838110156105ee5781810151838201526020016105d6565b50505050905090810190601f16801561061b5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561064e578181015183820152602001610636565b50505050905090810190601f16801561067b5780820380516001836020036101000a031916815260200191505b5094505050505060206040518083038186803b15801561069a57600080fd5b505afa1580156106ae573d6000803e3d6000fd5b505050506040513d60208110156106c457600080fd5b50516001600160e01b0319161461071b576040805162461bcd60e51b8152602060048201526016602482015275696e76616c69642031323731207369676e617475726560501b604482015290519081900360640190fd5b6108e3565b600182600281111561072e57fe5b141561087957630b135d3f60e11b87600060200201516001600160a01b0316631626ba7e8380519060200120866040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156107ad578181015183820152602001610795565b50505050905090810190601f1680156107da5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b1580156107f857600080fd5b505afa15801561080c573d6000803e3d6000fd5b505050506040513d602081101561082257600080fd5b50516001600160e01b0319161461071b576040805162461bcd60e51b8152602060048201526016602482015275696e76616c69642031363534207369676e617475726560501b604482015290519081900360640190fd5b600061088c828051906020012085610f40565b88519091506001600160a01b038083169116146108e1576040805162461bcd60e51b815260206004820152600e60248201526d7369676e657220213d2066726f6d60901b604482015290519081900360640190fd5b505b50505050505050565b81516001600160a01b0388166000908152600160209081526040808320600160801b85046001600160801b0390811685529252822080546fffffffffffffffffffffffffffffffff191691909316179091558351606090610a555760808401511561097c5761097689898989886002602002015189600460200201518a600360200201518a61100d565b50610a4c565b604080516323b872dd60e01b81526001600160a01b038b811660048301528a81166024830152604482018990529151918916916323b872dd916064808201926020929091908290030181600087803b1580156109d757600080fd5b505af11580156109eb573d6000803e3d6000fd5b505050506040513d6020811015610a0157600080fd5b5051610a4c576040805162461bcd60e51b8152602060048201526015602482015274115490cc8c17d514905394d1915497d19052531151605a1b604482015290519081900360640190fd5b60019150610e28565b610a5f858a6110c0565b610aa6576040805162461bcd60e51b8152602060048201526013602482015272666972737420706172616d20213d2066726f6d60681b604482015290519081900360640190fd5b60008615610c8657604080516370a0823160e01b815230600482015290516001600160a01b038a16916370a08231916024808301926020929190829003018186803b158015610af457600080fd5b505afa158015610b08573d6000803e3d6000fd5b505050506040513d6020811015610b1e57600080fd5b5051604080516323b872dd60e01b81526001600160a01b038d81166004830152306024830152604482018b90529151929350908a16916323b872dd916064808201926020929091908290030181600087803b158015610b7c57600080fd5b505af1158015610b90573d6000803e3d6000fd5b505050506040513d6020811015610ba657600080fd5b5051610bf9576040805162461bcd60e51b815260206004820152601760248201527f45524332305f414c4c4f434154494f4e5f4641494c4544000000000000000000604482015290519081900360640190fd5b876001600160a01b031663095ea7b38a896040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610c5957600080fd5b505af1158015610c6d573d6000803e3d6000fd5b505050506040513d6020811015610c8357600080fd5b50505b608085015115610cbf57610cb58a8a8a886002602002015189600460200201518a600360200201518a8d6110eb565b9093509150610cd7565b610cd189866002602002015188611127565b90935091505b8615610e2657604080516370a0823160e01b815230600482015290516000916001600160a01b038b16916370a0823191602480820192602092909190829003018186803b158015610d2757600080fd5b505afa158015610d3b573d6000803e3d6000fd5b505050506040513d6020811015610d5157600080fd5b5051905081811115610e24576040805163a9059cbb60e01b81526001600160a01b038d8116600483015284840360248301529151918b169163a9059cbb916044808201926020929091908290030181600087803b158015610db157600080fd5b505af1158015610dc5573d6000803e3d6000fd5b505050506040513d6020811015610ddb57600080fd5b5051610e24576040805162461bcd60e51b8152602060048201526013602482015272115490cc8c17d4915195539117d19052531151606a1b604482015290519081900360640190fd5b505b505b8360006020020151896001600160a01b03167f14bf78fa48cd58c248940ceb8c3baedd424d85b3f39432c0301ea1f161490ae38484604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ea4578181015183820152602001610e8c565b50505050905090810190601f168015610ed15780820380516001836020036101000a031916815260200191505b50935050505060405180910390a397509795505050505050565b6060600054610efc868686866111e8565b80519060200120604051602001808061190160f01b815250600201838152602001828152602001925050506040516020818303038152906040529050949350505050565b60008151604114610f5057600080fd5b60208201516040830151606084015160001a601b811015610f6f57601b015b8060ff16601b1480610f8457508060ff16601c145b610f8d57600080fd5b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa158015610fe4573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b03841661100457600080fd5b50505092915050565b6000805a604080516323b872dd60e01b81526001600160a01b038d811660048301528c81166024830152604482018b90529151929350908a16916323b872dd916064808201926020929091908290030181600087803b15801561106f57600080fd5b505af1158015611083573d6000803e3d6000fd5b505050506040513d602081101561109957600080fd5b505084156110b0576110b08a8988888589896112e6565b5060019998505050505050505050565b60006044835110156110d45750600061021e565b5060248201516001600160a01b0382161492915050565b6000606060005a90506110ff8a8986611127565b90935091508615611119576111198b8a8a8a858b8b6112e6565b509850989650505050505050565b60006060846001600160a01b031684846040518082805190602001908083835b602083106111665780518252601f199092019160209182019101611147565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038160008787f1925050503d80600081146111c9576040519150601f19603f3d011682016040523d82523d6000602084013e6111ce565b606091505b509092509050603f84045a116111e057fe5b935093915050565b606060405180806113d860c391396040519081900360c301902090508560006020020151866001602002015187600260200201518787805190602001208760006005811061123257fe5b6020020151886001602002015189600260200201518a600360200201518b600460200201518f600360209081029190910151604080519283019d909d526001600160a01b039b8c16828e0152998b166060820152978a16608089015260a088019690965260c087019490945260e0860192909252610100850152610120840152610140830152610160820152911661018080830191909152825180830390910181526101a090910190915295945050505050565b60005a84039050858111156112f85750845b82018481028582828161130757fe5b0414611345576040805162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b604482015290519081900360640190fd5b604080516323b872dd60e01b81526001600160a01b038b811660048301528581166024830152604482018490529151918a16916323b872dd916064808201926020929091908290030181600087803b1580156113a057600080fd5b505af11580156113b4573d6000803e3d6000fd5b505050506040513d60208110156113ca57600080fd5b505050505050505050505056fe45524332304d6574615472616e73616374696f6e28616464726573732066726f6d2c6164647265737320746f2c6164647265737320746f6b656e436f6e74726163742c75696e7432353620616d6f756e742c627974657320646174612c75696e743235362062617463684e6f6e63652c75696e74323536206578706972792c75696e743235362074784761732c75696e7432353620626173654761732c75696e7432353620746f6b656e47617350726963652c616464726573732072656c6179657229a2646970667358221220c6c9f04e11092fea69f1c0fe69732b2be4e00bb255bafc4599283e4da77d4dae64736f6c63430006010033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16B58106 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF69004C9 EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1C0 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP1 DUP3 ADD DUP3 PUSH1 0xC0 DUP2 ADD PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xC0 DUP4 ADD PUSH1 0xA0 DUP5 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x19A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1DF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP7 AND DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x270 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x494E5F50524F4752455353 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2CA SWAP2 DUP14 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP11 SWAP1 PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP16 SWAP2 POP PUSH1 0x3 SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH2 0x389 SWAP2 DUP14 SWAP1 PUSH1 0x4 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE DUP15 SWAP3 POP SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP3 POP DUP14 SWAP2 POP PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE SWAP2 POP DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP12 SWAP3 POP PUSH2 0x564 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x414 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x20 DUP15 ADD CALLDATALOAD AND DUP14 PUSH1 0x2 PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP14 DUP14 DUP14 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP3 POP DUP16 SWAP2 POP PUSH1 0x5 SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP13 SWAP2 POP PUSH2 0x8EC SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 PUSH2 0x44E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ JUMPDEST PUSH2 0x48F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x3BB937B733903932B630BCB2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD TIMESTAMP LT PUSH2 0x4D1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP8 DIV DUP2 DUP2 AND DUP8 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP4 KECCAK256 SLOAD SWAP3 SWAP4 SWAP3 DUP2 DUP5 AND SWAP1 DUP3 AND SWAP1 SWAP3 ADD AND EQ PUSH2 0x55D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x3737B731B29037BABA1037B31037B93232B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x572 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x582 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x720 JUMPI DUP7 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x20C13B0B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 DUP4 MSTORE DUP5 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x20C13B0B SWAP3 DUP7 SWAP3 DUP10 SWAP3 SWAP2 DUP3 SWAP2 PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x64 ADD SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5EE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5D6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x61B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x64E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x636 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x67B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031323731207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x72E JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x879 JUMPI PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP8 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1626BA7E DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7AD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x795 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7DA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x71B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031363534207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x88C DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH2 0xF40 JUMP JUMPDEST DUP9 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x8E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x7369676E657220213D2066726F6D PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x80 SHL DUP6 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SWAP2 SSTORE DUP4 MLOAD PUSH1 0x60 SWAP1 PUSH2 0xA55 JUMPI PUSH1 0x80 DUP5 ADD MLOAD ISZERO PUSH2 0x97C JUMPI PUSH2 0x976 DUP10 DUP10 DUP10 DUP10 DUP9 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x4 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH2 0x100D JUMP JUMPDEST POP PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP11 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP10 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xA4C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP PUSH2 0xE28 JUMP JUMPDEST PUSH2 0xA5F DUP6 DUP11 PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0xAA6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x666972737420706172616D20213D2066726F6D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 ISZERO PUSH2 0xC86 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP12 SWAP1 MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 DUP11 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xBF9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305F414C4C4F434154494F4E5F4641494C4544000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 DUP11 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD ISZERO PUSH2 0xCBF JUMPI PUSH2 0xCB5 DUP11 DUP11 DUP11 DUP9 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x4 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD DUP11 DUP14 PUSH2 0x10EB JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0xCD1 DUP10 DUP7 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH2 0x1127 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP JUMPDEST DUP7 ISZERO PUSH2 0xE26 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE24 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP5 SUB PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP12 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xE24 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115490CC8C17D4915195539117D19052531151 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST POP JUMPDEST DUP4 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x14BF78FA48CD58C248940CEB8C3BAEDD424D85B3F39432C0301EA1F161490AE3 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEA4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE8C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xED1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 SLOAD PUSH2 0xEFC DUP7 DUP7 DUP7 DUP7 PUSH2 0x11E8 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x2 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0xF6F JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0xF84 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0xF8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1004 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP13 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP12 SWAP1 MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 DUP11 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1083 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1099 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 ISZERO PUSH2 0x10B0 JUMPI PUSH2 0x10B0 DUP11 DUP10 DUP9 DUP9 DUP6 DUP10 DUP10 PUSH2 0x12E6 JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 DUP4 MLOAD LT ISZERO PUSH2 0x10D4 JUMPI POP PUSH1 0x0 PUSH2 0x21E JUMP JUMPDEST POP PUSH1 0x24 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 GAS SWAP1 POP PUSH2 0x10FF DUP11 DUP10 DUP7 PUSH2 0x1127 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP7 ISZERO PUSH2 0x1119 JUMPI PUSH2 0x1119 DUP12 DUP11 DUP11 DUP11 DUP6 DUP12 DUP12 PUSH2 0x12E6 JUMP JUMPDEST POP SWAP9 POP SWAP9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1166 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11C9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x3F DUP5 DIV GAS GT PUSH2 0x11E0 JUMPI INVALID JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH2 0x13D8 PUSH1 0xC3 SWAP2 CODECOPY PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xC3 ADD SWAP1 KECCAK256 SWAP1 POP DUP6 PUSH1 0x0 PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD DUP8 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP8 DUP8 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP8 PUSH1 0x0 PUSH1 0x5 DUP2 LT PUSH2 0x1232 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x2 PUSH1 0x20 MUL ADD MLOAD DUP11 PUSH1 0x3 PUSH1 0x20 MUL ADD MLOAD DUP12 PUSH1 0x4 PUSH1 0x20 MUL ADD MLOAD DUP16 PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 ADD SWAP14 SWAP1 SWAP14 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND DUP3 DUP15 ADD MSTORE SWAP10 DUP12 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP8 DUP11 AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xC0 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xE0 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE SWAP2 AND PUSH2 0x180 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH2 0x1A0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 GAS DUP5 SUB SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0x12F8 JUMPI POP DUP5 JUMPDEST DUP3 ADD DUP5 DUP2 MUL DUP6 DUP3 DUP3 DUP2 PUSH2 0x1307 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1345 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP2 MLOAD SWAP2 DUP11 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS 0x4D PUSH6 0x74615472616E PUSH20 0x616374696F6E28616464726573732066726F6D2C PUSH2 0x6464 PUSH19 0x65737320746F2C6164647265737320746F6B65 PUSH15 0x436F6E74726163742C75696E743235 CALLDATASIZE KECCAK256 PUSH2 0x6D6F PUSH22 0x6E742C627974657320646174612C75696E7432353620 PUSH3 0x617463 PUSH9 0x4E6F6E63652C75696E PUSH21 0x323536206578706972792C75696E74323536207478 SELFBALANCE PUSH2 0x732C PUSH22 0x696E7432353620626173654761732C75696E74323536 KECCAK256 PUSH21 0x6F6B656E47617350726963652C6164647265737320 PUSH19 0x656C6179657229A2646970667358221220C6C9 CREATE 0x4E GT MULMOD 0x2F 0xEA PUSH10 0xF1C0FE69732B2BE4E00B 0xB2 SSTORE 0xBA 0xFC GASLIMIT SWAP10 0x28 RETURNDATACOPY 0x4D 0xA7 PUSH30 0x4DAE64736F6C634300060100330000000000000000000000000000000000 ",
        "sourceMap": "360:10721:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:10721:1;;;;;;;;;;;;;;;;;;;;;;;;10952:127;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10952:127:1;;-1:-1:-1;;;;;10952:127:1;;;;;-1:-1:-1;;;;;10952:127:1;;:::i;:::-;;;;-1:-1:-1;;;;;10952:127:1;;;;;;;;;;;;;;2685:1006;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2685:1006:1;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2685:1006:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2685:1006:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2685:1006:1;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2685:1006:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2685:1006:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2685:1006:1;;-1:-1:-1;2685:1006:1;-1:-1:-1;2685:1006:1;;-1:-1:-1;;;;;2685:1006:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2685:1006:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10952:127;-1:-1:-1;;;;;11051:12:1;;11025:7;11051:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;11051:21:1;;;;;;;;;;;;10952:127;;;;;:::o;2685:1006::-;3114:4;;3056:12;;3070:23;;3114:4;;3113:5;3105:29;;;;;-1:-1:-1;;;3105:29:1;;;;;;;;;;;;-1:-1:-1;;;3105:29:1;;;;;;;;;;;;;;;3144:4;:11;;-1:-1:-1;;3144:11:1;3151:4;3144:11;;;3165:61;;;;;;;;;;;;3191:12;;-1:-1:-1;;;;;3191:12:1;;3165:61;3205:6;;3165:61;;;;3205:6;;3165:61;3205:6;3165:61;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3213:9:1;;-1:-1:-1;3223:1:1;;-1:-1:-1;3213:12:1;;;;-1:-1:-1;;;;;3213:12:1;3165:25;:61::i;:::-;3236:161;;;;;;;;;;;;3270:9;;3236:161;;;;3270:9;;3236:161;3270:9;3236:161;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;3236:161:1;;;;137:4:-1;3236:161:1;;;;;;;;;;;;;;;;;3293:6;;-1:-1:-1;3236:161:1;3313:4;;;;;;3236:161;;3313:4;;;;3236:161;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;3236:161:1;;;;;;;;;;;-1:-1:-1;3331:6:1;;-1:-1:-1;3236:161:1;;;;3331:6;;3236:161;3331:6;3236:161;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;3236:161:1;;;;137:4:-1;3236:161:1;;;;;;;;;;;;;;;;;;-1:-1:-1;3351:9:1;;;;;;3236:161;;3351:9;;;;3236:161;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3374:13:1;;-1:-1:-1;3236:20:1;;-1:-1:-1;;3236:161:1:i;:::-;3431:231;-1:-1:-1;;;;;3468:12:1;;;;;3498;;;;;3468;3544:1;3534:12;;;;-1:-1:-1;;;;;3534:12:1;3565:6;3589:4;;3431:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;3431:231:1;;;;;;;;;;;-1:-1:-1;3611:6:1;;-1:-1:-1;3431:231:1;;;;3611:6;;3431:231;3611:6;3431:231;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3635:13:1;;-1:-1:-1;3431:19:1;;-1:-1:-1;3431:231:1:i;:::-;3672:4;:12;;-1:-1:-1;;3672:12:1;;;3407:255;;;;-1:-1:-1;2685:1006:1;-1:-1:-1;;;;;;;;;;2685:1006:1:o;3772:543::-;-1:-1:-1;;;;;3992:21:1;;;;:46;;-1:-1:-1;;;;;;4017:21:1;;4028:10;4017:21;3992:46;3971:106;;;;;-1:-1:-1;;;3971:106:1;;;;;;;;;;;;-1:-1:-1;;;3971:106:1;;;;;;;;;;;;;;;4113:9;;;;4095:15;:27;4087:47;;;;;-1:-1:-1;;;4087:47:1;;;;;;;;;;;;-1:-1:-1;;;4087:47:1;;;;;;;;;;;;;;;4170:9;;-1:-1:-1;;;;;4251:12:1;;4144:15;4251:12;;;:6;4223:9;4251:12;;;;;;;-1:-1:-1;;;;;;;;4170:18:1;;4251:21;;;;;;;;;;;;4170:18;;:9;4251:34;;;:21;;;:25;;;:34;;4243:65;;;;;-1:-1:-1;;;4243:65:1;;;;;;;;;;;;-1:-1:-1;;;4243:65:1;;;;;;;;;;;;;;;3772:543;;;;;:::o;5362:1070::-;5702:23;5728:47;5743:9;5754:6;5762:4;5768:6;5728:14;:47::i;:::-;5702:73;-1:-1:-1;5806:21:1;5789:13;:38;;;;;;;;;5785:641;;;5876:12;;5868:61;;;-1:-1:-1;;;5868:61:1;;;;;;;;;;;;;;;;;5933:18;;-1:-1:-1;;;;;5868:38:1;;;;5907:10;;5919:9;;5868:61;;;;;;;;;;5876:12;5868:61;;;;;;5886:1;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5868:61:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5868:61:1;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5868:61:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5868:61:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5868:61:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5868:61:1;-1:-1:-1;;;;;;5868:83:1;;5843:164;;;;;-1:-1:-1;;;5843:164:1;;;;;;;;;;;;-1:-1:-1;;;5843:164:1;;;;;;;;;;;;;;;5785:641;;;6044:21;6027:13;:38;;;;;;;;;6024:402;;;-1:-1:-1;;;6113:9:1;6123:1;6113:12;;;;-1:-1:-1;;;;;6105:38:1;;6154:10;6144:21;;;;;;6167:9;6105:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6105:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6105:72:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6105:72:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6105:72:1;-1:-1:-1;;;;;;6105:94:1;;6080:175;;;;;-1:-1:-1;;;6080:175:1;;;;;;;;;;;;-1:-1:-1;;;6080:175:1;;;;;;;;;;;;;;6024:402;6286:14;6303:49;6329:10;6319:21;;;;;;6342:9;6303:15;:49::i;:::-;6384:12;;6286:66;;-1:-1:-1;;;;;;6374:22:1;;;;;;6366:49;;;;;-1:-1:-1;;;6366:49:1;;;;;;;;;;;;-1:-1:-1;;;6366:49:1;;;;;;;;;;;;;;;6024:402;;5362:1070;;;;;;;:::o;8581:2365::-;8963:9;;-1:-1:-1;;;;;9044:12:1;;8874;9044;;;:6;9020:9;9044:12;;;;;;;-1:-1:-1;;;8963:18:1;;-1:-1:-1;;;;;9044:21:1;;;;;;;;;:29;;-1:-1:-1;;9044:29:1;;;;;;;;;9098:11;;8888:23;;9094:1786;;9133:9;;;;:13;9130:451;;9166:283;9212:4;9238:2;9262:13;9297:6;9325;9332:1;9325:9;;;;9356:6;9363:1;9356:9;;;;9387:6;9394:1;9387:9;;;;9418:13;9166:24;:283::i;:::-;;9130:451;;;9496:44;;;-1:-1:-1;;;9496:44:1;;-1:-1:-1;;;;;9496:44:1;;;;;;;;;;;;;;;;;;;;;;:26;;;;;;:44;;;;;;;;;;;;;;;-1:-1:-1;9496:26:1;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;9496:44:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9496:44:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9496:44:1;9488:78;;;;;-1:-1:-1;;;9488:78:1;;;;;;;;;;;;-1:-1:-1;;;9488:78:1;;;;;;;;;;;;;;;9604:4;9594:14;;9094:1786;;;9664:47;9700:4;9706;9664:35;:47::i;:::-;9639:125;;;;;-1:-1:-1;;;9639:125:1;;;;;;;;;;;;-1:-1:-1;;;9639:125:1;;;;;;;;;;;;;;;9778:23;9818:10;;9815:264;;9866:38;;;-1:-1:-1;;;9866:38:1;;9898:4;9866:38;;;;;;-1:-1:-1;;;;;9866:23:1;;;;;:38;;;;;;;;;;;;;;:23;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;9866:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9866:38:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9866:38:1;9930:55;;;-1:-1:-1;;;9930:55:1;;-1:-1:-1;;;;;9930:55:1;;;;;;;9971:4;9930:55;;;;;;;;;;;;9866:38;;-1:-1:-1;9930:26:1;;;;;;:55;;;;;9866:38;;9930:55;;;;;;;;-1:-1:-1;9930:26:1;:55;;;5:2:-1;;;;30:1;27;20:12;5:2;9930:55:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9930:55:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9930:55:1;9922:91;;;;;-1:-1:-1;;;9922:91:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;10031:13;-1:-1:-1;;;;;10031:21:1;;10053:2;10057:6;10031:33;;;;;;;;;;;;;-1:-1:-1;;;;;10031:33:1;-1:-1:-1;;;;;10031:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10031:33:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10031:33:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;9815:264:1;10095:9;;;;:13;10092:476;;10152:294;10211:4;10237:2;10261:13;10296:6;10303:1;10296:9;;;;10327:6;10334:1;10327:9;;;;10358:6;10365:1;10358:9;;;;10389:13;10424:4;10152:37;:294::i;:::-;10128:318;;-1:-1:-1;10128:318:1;-1:-1:-1;10092:476:1;;;10509:44;10533:2;10537:6;10544:1;10537:9;;;;10548:4;10509:23;:44::i;:::-;10485:68;;-1:-1:-1;10485:68:1;-1:-1:-1;10092:476:1;10584:10;;10581:289;;10635:38;;;-1:-1:-1;;;10635:38:1;;10667:4;10635:38;;;;;;10614:18;;-1:-1:-1;;;;;10635:23:1;;;;;:38;;;;;;;;;;;;;;;:23;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;10635:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10635:38:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10635:38:1;;-1:-1:-1;10695:28:1;;;10691:165;;;10755:58;;;-1:-1:-1;;;10755:58:1;;-1:-1:-1;;;;;10755:58:1;;;;;;;10784:28;;;10755:58;;;;;;:22;;;;;;:58;;;;;;;;;;;;;;;-1:-1:-1;10755:22:1;:58;;;5:2:-1;;;;30:1;27;20:12;5:2;10755:58:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10755:58:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10755:58:1;10747:90;;;;;-1:-1:-1;;;10747:90:1;;;;;;;;;;;;-1:-1:-1;;;10747:90:1;;;;;;;;;;;;;;;10581:289;;9094:1786;;10908:6;10915:1;10908:9;;;;10902:4;-1:-1:-1;;;;;10895:44:1;;10919:7;10928:10;10895:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10895:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8581:2365;;;;;;;;;;:::o;4321:452::-;4585:12;4670:16;;4710:45;4723:9;4734:6;4742:4;4748:6;4710:12;:45::i;:::-;4700:56;;;;;;4616:150;;;;;;-1:-1:-1;;;4616:150:1;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4616:150:1;;;4609:157;;4321:452;;;;;;:::o;47:637:15:-;143:17;184:3;:10;198:2;184:16;176:25;;;;;;310:2;301:12;;295:19;347:2;338:12;;332:19;392:2;383:12;;377:19;212:9;369:28;516:2;512:6;;508:44;;;539:2;534:7;508:44;569:1;:7;;574:2;569:7;:18;;;;580:1;:7;;585:2;580:7;569:18;561:27;;;;;;611:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;611:24:15;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;611:24:15;;-1:-1:-1;;611:24:15;;;-1:-1:-1;;;;;;;653:23:15;;645:32;;;;;;47:637;;;;;;;:::o;7414:552:1:-;7686:4;7702:18;7723:9;7742:44;;;-1:-1:-1;;;7742:44:1;;-1:-1:-1;;;;;7742:44:1;;;;;;;;;;;;;;;;;;;;;;7702:30;;-1:-1:-1;7742:26:1;;;;;;:44;;;;;;;;;;;;;;;-1:-1:-1;7742:26:1;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;7742:44:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7742:44:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;7800:17:1;;7796:143;;7833:95;7841:4;7847:13;7862:8;7872:13;7887:10;7899:13;7914;7833:7;:95::i;:::-;-1:-1:-1;7955:4:1;;7414:552;-1:-1:-1;;;;;;;;;7414:552:1:o;1504:348:13:-;1623:4;1662:7;1647:4;:11;:23;1643:66;;;-1:-1:-1;1693:5:13;1686:12;;1643:66;-1:-1:-1;1789:2:13;1779:13;;1773:20;-1:-1:-1;;;;;1828:17:13;;1819:26;1504:348;;;;:::o;7972:603:1:-;8260:12;8274:23;8309:18;8330:9;8309:30;;8373:43;8397:2;8401:8;8411:4;8373:23;:43::i;:::-;8349:67;;-1:-1:-1;8349:67:1;-1:-1:-1;8430:17:1;;8426:143;;8463:95;8471:4;8477:13;8492:8;8502:13;8517:10;8529:13;8544;8463:7;:95::i;:::-;7972:603;;;;;;;;;;;;:::o;7055:353::-;7185:12;7199:23;7258:2;-1:-1:-1;;;;;7258:7:1;7270:8;7280:4;7258:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7258:27:1;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1;7234:51:1;;-1:-1:-1;7234:51:1;-1:-1:-1;7325:2:1;7314:8;:13;7302:9;:25;7295:33;;;;7055:353;;;;;;:::o;4779:577::-;4987:12;930:222;;;;;;;;;;;;;;;;;;;-1:-1:-1;5085:9:1;5095:1;5085:12;;;;5111:9;5121:1;5111:12;;;;5137:9;5147:1;5137:12;;;;5163:6;5193:4;5183:15;;;;;;5212:6;5219:1;5212:9;;;;;;;;;;;5235:6;5242:1;5235:9;;;;5258:6;5265:1;5258:9;;;;5281:6;5288:1;5281:9;;;;5304:6;5311:1;5304:9;;;;5327;5337:1;5327:12;;;;;;;;;5018:331;;;;;;;;;;-1:-1:-1;;;;;5018:331:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;5018:331:1;;;;;;;;4779:577;-1:-1:-1;;;;;4779:577:1:o;6438:611::-;6678:17;6711:9;6698:10;:22;6678:42;;6745:8;6733:9;:20;6730:70;;;-1:-1:-1;6781:8:1;6730:70;6809:26;;6870:25;;;6882:13;6809:26;6870:25;6809:26;6913;;;;;:43;6905:64;;;;;-1:-1:-1;;;6905:64:1;;;;;;;;;;;;-1:-1:-1;;;6905:64:1;;;;;;;;;;;;;;;6979:63;;;-1:-1:-1;;;6979:63:1;;-1:-1:-1;;;;;6979:63:1;;;;;;;;;;;;;;;;;;;;;;:26;;;;;;:63;;;;;;;;;;;;;;;-1:-1:-1;6979:26:1;:63;;;5:2:-1;;;;30:1;27;20:12;5:2;6979:63:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6979:63:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;;;;;;6438:611:1:o"
      },
      "methodIdentifiers": {
        "executeERC20MetaTx(address[4],uint256,bytes,uint256[5],bytes,address,uint8)": "f69004c9",
        "meta_nonce(address,uint128)": "16b58106"
      }
    },
    "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"MetaTx\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[4]\",\"name\":\"addresses\",\"type\":\"address[4]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256[5]\",\"name\":\"params\",\"type\":\"uint256[5]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"},{\"internalType\":\"enum GenericMetaTxProcessor.SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"}],\"name\":\"executeERC20MetaTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"batchId\",\"type\":\"uint128\"}],\"name\":\"meta_nonce\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"executeERC20MetaTx(address[4],uint256,bytes,uint256[5],bytes,address,uint8)\":{\"params\":{\"addresses\":\": from, to, tokenContract, relayer\",\"amount\":\"number of tokens to be transfered/allowed as part of the call.\",\"data\":\"bytes to send to the destination.\",\"params\":\"the meta-tx parameters : batchNonce, expiry, txGas, baseGas, tokenGasPrice.\",\"signature\":\"the signature that ensure from has allowed the meta-tx to be performed.\",\"signatureType\":\"indicate whether it was signed via EOA=0, EIP-1654=1 or EIP-1271=2.\",\"tokenReceiver\":\"recipient of the gas charge.\"},\"returns\":{\"returnData\":\"data resulting from the execution.\",\"success\":\"whether the execution was successful.\"}}}},\"userdoc\":{\"methods\":{\"executeERC20MetaTx(address[4],uint256,bytes,uint256[5],bytes,address,uint8)\":{\"notice\":\"perform the meta-tx using EIP-712 message.\"}}}},\"settings\":{\"compilationTarget\":{\"src/GenericMetaTxProcessor.sol\":\"GenericMetaTxProcessor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/GenericMetaTxProcessor.sol\":{\"content\":\"pragma solidity 0.6.1;\\n\\nimport \\\"./Libraries/BytesUtil.sol\\\";\\nimport \\\"./Libraries/AddressUtils.sol\\\";\\nimport \\\"./Libraries/SigUtil.sol\\\";\\nimport \\\"./Libraries/SafeMath.sol\\\";\\nimport \\\"./Interfaces/ERC1271.sol\\\";\\nimport \\\"./Interfaces/ERC1271Constants.sol\\\";\\nimport \\\"./Interfaces/ERC1654.sol\\\";\\nimport \\\"./Interfaces/ERC1654Constants.sol\\\";\\nimport \\\"./Interfaces/ERC20.sol\\\";\\n\\ncontract GenericMetaTxProcessor is ERC1271Constants, ERC1654Constants {\\n\\n    // ////////////// LIBRARIES /////////////////\\n    using SafeMath for uint256;\\n    using AddressUtils for address;\\n    // //////////////////////////////////////////\\n\\n\\n    // /////////////// CONSTANTS ////////////////\\n    enum SignatureType { DIRECT, EIP1654, EIP1271 }\\n\\n    bytes32 constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,address verifyingContract)\\\"\\n    );\\n    bytes32 DOMAIN_SEPARATOR;\\n\\n    bytes32 constant ERC20METATRANSACTION_TYPEHASH = keccak256(\\n        \\\"ERC20MetaTransaction(address from,address to,address tokenContract,uint256 amount,bytes data,uint256 batchNonce,uint256 expiry,uint256 txGas,uint256 baseGas,uint256 tokenGasPrice,address relayer)\\\"\\n    );\\n    // //////////////////////////////////////////\\n\\n    // //////////////// EVENTS //////////////////\\n    event MetaTx(\\n        address indexed from,\\n        uint256 indexed batchNonce,\\n        bool success,\\n        bytes returnData\\n    ); // TODO specify event as part of ERC-1776 ?\\n    // //////////////////////////////////////////\\n\\n    // //////////////// STATE ///////////////////\\n    mapping(address => mapping(uint128 => uint128)) nonces;\\n    bool lock = false;\\n    // //////////////////////////////////////////\\n\\n    constructor() public {\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(\\\"Generic Meta Transaction\\\"),\\n                keccak256(\\\"1\\\"),\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    /// @notice perform the meta-tx using EIP-712 message.\\n    /// @param addresses : from, to, tokenContract, relayer\\n    /// @param amount number of tokens to be transfered/allowed as part of the call.\\n    /// @param data bytes to send to the destination.\\n    /// @param params the meta-tx parameters : batchNonce, expiry, txGas, baseGas, tokenGasPrice.\\n    /// @param signature the signature that ensure from has allowed the meta-tx to be performed.\\n    /// @param tokenReceiver recipient of the gas charge.\\n    /// @param signatureType indicate whether it was signed via EOA=0, EIP-1654=1 or EIP-1271=2.\\n    /// @return success whether the execution was successful.\\n    /// @return returnData data resulting from the execution.\\n    function executeERC20MetaTx(\\n        address[4] calldata addresses, // from, to, tokenContract, relayer\\n        uint256 amount,\\n        bytes calldata data,\\n        uint256[5] calldata params, // batchNonce, expiry, txGas, baseGas, tokenGasPrice\\n        bytes calldata signature,\\n        address tokenReceiver,\\n        SignatureType signatureType\\n    ) external returns (bool success, bytes memory returnData) {\\n        require(!lock, \\\"IN_PROGRESS\\\");\\n        lock = true;\\n        _ensureParametersValidity(addresses[0], params, addresses[3]);\\n        _ensureCorrectSigner(\\n            addresses,\\n            amount,\\n            data,\\n            params,\\n            signature,\\n            signatureType\\n        );\\n        (success, returnData) = _performERC20MetaTx(\\n                addresses[0],\\n                addresses[1],\\n                ERC20(addresses[2]),\\n                amount,\\n                data,\\n                params,\\n                tokenReceiver\\n            );\\n        lock = false;\\n    }\\n\\n    // ////////////////////////////// INTERNALS /////////////////////////\\n\\n    function _ensureParametersValidity(\\n        address from,\\n        uint256[5] memory params, // batchNonce, expiry, txGas, baseGas, tokenGasPrice\\n        address relayer\\n    ) internal view {\\n        require(\\n            relayer == address(0) || relayer == msg.sender,\\n            \\\"wrong relayer\\\"\\n        );\\n        require(block.timestamp < params[1], \\\"expired\\\");\\n        uint128 batchId = uint128(params[0] / 2**128);\\n        uint128 nonce = uint128(params[0]);\\n        require(nonces[from][batchId] + 1 == nonce, \\\"nonce out of order\\\");\\n    }\\n\\n    function _encodeMessage(\\n        address[4] memory addresses, // from, to, tokenContract, relayer\\n        uint256 amount,\\n        bytes memory data,\\n        uint256[5] memory params // batchNonce, expiry, txGas, baseGas, tokenGasPrice\\n    ) internal view returns (bytes memory) {\\n        return abi.encodePacked(\\n            \\\"\\\\x19\\\\x01\\\",\\n            DOMAIN_SEPARATOR,\\n            keccak256(messageBytes(addresses, amount, data, params))\\n        );\\n    }\\n\\n    function messageBytes(\\n        address[4] memory addresses, // from, to, tokenContract, relayer\\n        uint256 amount,\\n        bytes memory data,\\n        uint256[5] memory params\\n    ) internal pure returns(bytes memory) {\\n        return abi.encode(\\n            ERC20METATRANSACTION_TYPEHASH,\\n            addresses[0],\\n            addresses[1],\\n            addresses[2],\\n            amount,\\n            keccak256(data),\\n            params[0],\\n            params[1],\\n            params[2],\\n            params[3],\\n            params[4],\\n            addresses[3]\\n        );\\n    }\\n\\n    function _ensureCorrectSigner(\\n        address[4] memory addresses, // from, to, tokenContract, relayer\\n        uint256 amount,\\n        bytes memory data,\\n        uint256[5] memory params, // batchNonce, expiry, txGas, baseGas, tokenGasPrice\\n        bytes memory signature,\\n        SignatureType signatureType\\n    ) internal view {\\n        bytes memory dataToHash = _encodeMessage(addresses, amount, data, params);\\n        if (signatureType == SignatureType.EIP1271) {\\n            require(\\n                ERC1271(addresses[0]).isValidSignature(dataToHash, signature) == ERC1271_MAGICVALUE,\\n                \\\"invalid 1271 signature\\\"\\n            );\\n        } else if(signatureType == SignatureType.EIP1654){\\n            require(\\n                ERC1654(addresses[0]).isValidSignature(keccak256(dataToHash), signature) == ERC1654_MAGICVALUE,\\n                \\\"invalid 1654 signature\\\"\\n            );\\n        } else {\\n            address signer = SigUtil.recover(keccak256(dataToHash), signature);\\n            require(signer == addresses[0], \\\"signer != from\\\");\\n        }\\n    }\\n\\n    function _charge(\\n        address from,\\n        ERC20 tokenContract,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 initialGas,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) internal {\\n        uint256 gasCharge = initialGas - gasleft();\\n        if(gasCharge > gasLimit) {\\n            gasCharge = gasLimit;\\n        }\\n        gasCharge += baseGasCharge;\\n        uint256 tokensToCharge = gasCharge * tokenGasPrice;\\n        require(tokensToCharge / gasCharge == tokenGasPrice, \\\"overflow\\\");\\n        tokenContract.transferFrom(from, tokenReceiver, tokensToCharge);\\n    }\\n\\n    function _executeWithSpecificGas(\\n        address to,\\n        uint256 gasLimit,\\n        bytes memory data\\n    ) internal returns (bool success, bytes memory returnData) {\\n        (success, returnData) = to.call.gas(gasLimit)(data);\\n        assert(gasleft() > gasLimit / 63); // not enough gas provided, assert to throw all gas // TODO use EIP-1930\\n    }\\n\\n    function _transferAndChargeForGas(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 amount,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) internal returns (bool) {\\n        uint256 initialGas = gasleft();\\n        tokenContract.transferFrom(from, to, amount);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, tokenContract, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n        return true;\\n    }\\n\\n    function _executeWithSpecificGasAndChargeForIt(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver,\\n        bytes memory data\\n    ) internal returns (bool success, bytes memory returnData) {\\n        uint256 initialGas = gasleft();\\n        (success, returnData) = _executeWithSpecificGas(to, gasLimit, data);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, tokenContract, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n    }\\n\\n    function _performERC20MetaTx(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 amount,\\n        bytes memory data,\\n        uint256[5] memory params, // batchNonce, expiry, txGas, baseGas, tokenGasPrice\\n        address tokenReceiver\\n    ) internal returns (bool success, bytes memory returnData) {\\n        {\\n            uint128 batchId = uint128(params[0] / 2**128);\\n            uint128 nonce = uint128(params[0]);\\n            nonces[from][batchId] = nonce;\\n        }\\n\\n        if (data.length == 0) {\\n            if(params[4] > 0) {\\n                _transferAndChargeForGas(\\n                    from,\\n                    to,\\n                    tokenContract,\\n                    amount,\\n                    params[2],\\n                    params[4],\\n                    params[3],\\n                    tokenReceiver\\n                );\\n            } else {\\n                require(tokenContract.transferFrom(from, to, amount), \\\"ERC20_TRANSFER_FAILED\\\");\\n            }\\n            success = true;\\n        } else {\\n            require(\\n                BytesUtil.doFirstParamEqualsAddress(data, from),\\n                \\\"first param != from\\\"\\n            );\\n            uint256 previousBalance;\\n            if(amount > 0) {\\n                previousBalance = tokenContract.balanceOf(address(this));\\n                require(tokenContract.transferFrom(from, address(this), amount), \\\"ERC20_ALLOCATION_FAILED\\\");\\n                tokenContract.approve(to, amount);\\n            }\\n            if(params[4] > 0) {\\n                (success, returnData) = _executeWithSpecificGasAndChargeForIt(\\n                    from,\\n                    to,\\n                    tokenContract,\\n                    params[2],\\n                    params[4],\\n                    params[3],\\n                    tokenReceiver,\\n                    data\\n                );\\n            } else {\\n                (success, returnData) = _executeWithSpecificGas(to, params[2], data);\\n            }\\n            if(amount > 0) {\\n                uint256 newBalance = tokenContract.balanceOf(address(this));\\n                if (newBalance > previousBalance) {\\n                    require(tokenContract.transfer(from, newBalance - previousBalance), \\\"ERC20_REFUND_FAILED\\\");\\n                }\\n            }\\n        }\\n\\n        emit MetaTx(from, params[0], success, returnData);\\n    }\\n\\n    function meta_nonce(address from, uint128 batchId) external view returns(uint128) {\\n        return nonces[from][batchId];\\n    }\\n}\\n\",\"keccak256\":\"0xa17443d02de5c6bc5784197d7cb50dceaf688b8b94327289518380dd0b0823f1\"},\"src/Interfaces/ERC1271.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC1271 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided data\\n    * @param data Arbitrary length data signed on the behalf of address(this)\\n    * @param signature Signature byte array associated with _data\\n    *\\n    * MUST return the bytes4 magic value 0x20c13b0b when function passes.\\n    * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\\n    * MUST allow external calls\\n    */\\n    function isValidSignature(bytes calldata data, bytes calldata signature)\\n        external\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0xd47b461d487409fbb422a86f77818cf4c3a904d21c80b7df63c42f5b114da68f\"},\"src/Interfaces/ERC1271Constants.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ncontract ERC1271Constants {\\n    bytes4 internal constant ERC1271_MAGICVALUE = 0x20c13b0b;\\n}\\n\",\"keccak256\":\"0xe699d97bb95be085cbb795821dd52673088d58d96976e26a0b066a856a6c1f3d\"},\"src/Interfaces/ERC1654.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC1654 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided hash\\n    * @param hash 32 bytes hash to be signed\\n    * @param signature Signature byte array associated with hash\\n    * @return magicValue 0x1626ba7e if valid else 0x00000000\\n    */\\n    function isValidSignature(bytes32 hash, bytes calldata signature)\\n        external\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4f006eeed4fdb08128571445ecdc75e13858dee0b7876431b46f75a2d9d9ff6a\"},\"src/Interfaces/ERC1654Constants.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ncontract ERC1654Constants {\\n    bytes4 internal constant ERC1654_MAGICVALUE = 0x1626ba7e;\\n}\\n\",\"keccak256\":\"0xd7650a572f69557bd6dfe3701a5bf02fd7148a127d7ec4a05dde59fca4ef19dd\"},\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0xeac7dc828dbde8ad86c624d39dca24f7f66c3986958d8a71cd69a6aa9b5ed679\"},\"src/Libraries/BytesUtil.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary BytesUtil {\\n    function memcpy(uint256 dest, uint256 src, uint256 len) internal pure {\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        uint256 mask = 256**(32 - len) - 1;\\n        assembly {\\n            let srcpart := and(mload(src), not(mask))\\n            let destpart := and(mload(dest), mask)\\n            mstore(dest, or(destpart, srcpart))\\n        }\\n    }\\n\\n    function pointerToBytes(uint256 src, uint256 len)\\n        internal\\n        pure\\n        returns (bytes memory)\\n    {\\n        bytes memory ret = new bytes(len);\\n        uint256 retptr;\\n        assembly {\\n            retptr := add(ret, 32)\\n        }\\n\\n        memcpy(retptr, src, len);\\n        return ret;\\n    }\\n\\n    function addressToBytes(address a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(\\n                add(m, 20),\\n                xor(0x140000000000000000000000000000000000000000, a)\\n            )\\n            mstore(0x40, add(m, 52))\\n            b := m\\n        }\\n    }\\n\\n    function uint256ToBytes(uint256 a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(add(m, 32), a)\\n            mstore(0x40, add(m, 64))\\n            b := m\\n        }\\n    }\\n\\n    function doFirstParamEqualsAddress(bytes memory data, address _address)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + 32)) {\\n            return false;\\n        }\\n        uint256 value;\\n        assembly {\\n            value := mload(add(data, 36))\\n        }\\n        return value == uint256(_address);\\n    }\\n\\n    function doParamEqualsUInt256(bytes memory data, uint256 i, uint256 value)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + (i + 1) * 32)) {\\n            return false;\\n        }\\n        uint256 offset = 36 + i * 32;\\n        uint256 valuePresent;\\n        assembly {\\n            valuePresent := mload(add(data, offset))\\n        }\\n        return valuePresent == value;\\n    }\\n\\n    function overrideFirst32BytesWithAddress(\\n        bytes memory data,\\n        address _address\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n\\n        bytes memory addressBytes = addressToBytes(_address);\\n        uint256 src;\\n        assembly {\\n            src := add(addressBytes, 32)\\n        }\\n\\n        memcpy(dest, src, 20);\\n        return data;\\n    }\\n\\n    function overrideFirstTwo32BytesWithAddressAndInt(\\n        bytes memory data,\\n        address _address,\\n        uint256 _value\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        uint256 src;\\n\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n        bytes memory bbytes = addressToBytes(_address);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 20);\\n\\n        assembly {\\n            dest := add(data, 68)\\n        } // 48 = 32 (offset) + 4 (func sig) + 32 (next slot)\\n        bbytes = uint256ToBytes(_value);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 32);\\n\\n        return data;\\n    }\\n}\\n\",\"keccak256\":\"0xbc2e25a5e410c9f7889beb483fe471a6aa55997ac0d3bafabd5042451a806529\"},\"src/Libraries/SafeMath.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that revert\\n */\\nlibrary SafeMath {\\n    /**\\n    * @dev Multiplies two numbers, throws on overflow.\\n    */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        c = a * b;\\n        require(c / a == b, \\\"overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Integer division of two numbers, truncating the quotient.\\n    */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        // uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return a / b;\\n    }\\n\\n    /**\\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\n    */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"undeflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n    * @dev Adds two numbers, throws on overflow.\\n    */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        c = a + b;\\n        require(c >= a, \\\"overflow\\\");\\n        return c;\\n    }\\n}\\n\",\"keccak256\":\"0x77a1483e56a10a93ab2d6b8ae7bd9a40d10e1c0edb9583cce13493b5549bf199\"},\"src/Libraries/SigUtil.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary SigUtil {\\n    function recover(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address recovered)\\n    {\\n        require(sig.length == 65);\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n        require(v == 27 || v == 28);\\n\\n        recovered = ecrecover(hash, v, r, s);\\n        require(recovered != address(0));\\n    }\\n\\n    function recoverWithZeroOnFailure(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address)\\n    {\\n        if (sig.length != 65) {\\n            return (address(0));\\n        }\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            return (address(0));\\n        } else {\\n            return ecrecover(hash, v, r, s);\\n        }\\n    }\\n\\n    // Builds a prefixed hash to mimic the behavior of eth_sign.\\n    function prefixed(bytes32 hash) internal pure returns (bytes memory) {\\n        return abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash);\\n    }\\n}\\n\",\"keccak256\":\"0x779ab6a267e945cd0f164fecf7f6366888e3f1bb36730391b47fd70d52a8f222\"}},\"version\":1}",
    "userdoc": {
      "methods": {
        "executeERC20MetaTx(address[4],uint256,bytes,uint256[5],bytes,address,uint8)": {
          "notice": "perform the meta-tx using EIP-712 message."
        }
      }
    }
  },
  "args": [],
  "address": "0x1A8E2f81dE31cC29588889c29582a93de0a4213d",
  "transactionHash": "0x01aaf2d1f933483ff022b727bdb85ffe61c31693a35d8fd07b5c6ba4bcc217b3"
}