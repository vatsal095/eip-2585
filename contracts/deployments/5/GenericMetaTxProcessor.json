{
  "contractInfo": {
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "batchId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "batchNonce",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "success",
            "type": "bool"
          },
          {
            "indexed": false,
            "internalType": "bytes",
            "name": "returnData",
            "type": "bytes"
          }
        ],
        "name": "MetaTx",
        "type": "event"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              },
              {
                "internalType": "enum GenericMetaTxProcessor.SignatureType",
                "name": "signatureType",
                "type": "uint8"
              }
            ],
            "internalType": "struct GenericMetaTxProcessor.Call",
            "name": "callData",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "tokenContract",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "batchId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "batchNonce",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "expiry",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "txGas",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "baseGas",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tokenGasPrice",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "relayer",
                "type": "address"
              }
            ],
            "internalType": "struct GenericMetaTxProcessor.CallParams",
            "name": "callParams",
            "type": "tuple"
          },
          {
            "internalType": "address",
            "name": "tokenReceiver",
            "type": "address"
          }
        ],
        "name": "executeMetaTransaction",
        "outputs": [
          {
            "internalType": "bool",
            "name": "success",
            "type": "bool"
          },
          {
            "internalType": "bytes",
            "name": "returnData",
            "type": "bytes"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "batchId",
            "type": "uint256"
          }
        ],
        "name": "meta_nonce",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "evm": {
      "bytecode": {
        "linkReferences": {},
        "object": "60806040526002805460ff1916905534801561001a57600080fd5b50604051610027906100b1565b604051809103902060405161003b90610088565b604051809103902060405161004f9061010b565b6040519081900381206100689392913090602001610118565b60408051601f19818403018152919052805160209091012060005561013c565b7f47656e65726963204d657461205472616e73616374696f6e0000000000000000815260180190565b7f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081527f76657273696f6e2c6164647265737320766572696679696e67436f6e74726163602082015261742960f01b604082015260420190565b603160f81b815260010190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b6114718061014b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806326d431e21461003b57806353f1defe14610065575b600080fd5b61004e610049366004610e28565b610085565b60405161005c9291906110e3565b60405180910390f35b610078610073366004610daf565b6100f9565b60405161005c91906113df565b60025460009060609060ff16156100b75760405162461bcd60e51b81526004016100ae90611353565b60405180910390fd5b6002805460ff191660011790556100ce8585610124565b6100d885856101db565b6100e38585856103ce565b6002805460ff1916905590969095509350505050565b6001600160a01b03821660009081526001602090815260408083208484529091529020545b92915050565b6101008101516001600160a01b0316158061014c57506101008101516001600160a01b031633145b6101685760405162461bcd60e51b81526004016100ae906112ae565b8060800151421061018b5760405162461bcd60e51b81526004016100ae90611265565b606081015182516001600160a01b031660009081526001602081815260408084208187015185529091529091205401146101d75760405162461bcd60e51b81526004016100ae906111d1565b5050565b60606101e783836108c8565b90506002836080015160028111156101fb57fe5b14156102b157825160608401516040516320c13b0b60e01b808252926001600160a01b0316916320c13b0b916102359186916004016111a3565b60206040518083038186803b15801561024d57600080fd5b505afa158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102859190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611378565b6103c9565b6001836080015160028111156102c357fe5b1415610379578251815160208301206060850151604051630b135d3f60e11b808252936001600160a01b031692631626ba7e926103029260040161116c565b60206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103529190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611235565b600061039082805190602001208560600151610904565b905083600001516001600160a01b0316816001600160a01b0316146103c75760405162461bcd60e51b81526004016100ae90611286565b505b505050565b60608281015184516001600160a01b031660009081526001602090815260408083208188015184529091528082209290925584519186015151909291906104f95760e08501511561044757610441866000015187602001518388602001518960a001518a60e001518b60c001518b6109bf565b506104f0565b8551602080880151908701516040516323b872dd60e01b81526001600160a01b038516936323b872dd936104829391929091906004016110a6565b602060405180830381600087803b15801561049c57600080fd5b505af11580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104d49190810190610dd9565b6104f05760405162461bcd60e51b81526004016100ae90611302565b6001925061086e565b61050b86604001518760000151610a6e565b6105275760405162461bcd60e51b81526004016100ae90611208565b6020850151600090156106df576040516370a0823160e01b81526001600160a01b038316906370a0823190610560903090600401611092565b60206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105b09190810190610f14565b875160208801516040516323b872dd60e01b81529293506001600160a01b038516926323b872dd926105e99290913091906004016110a6565b602060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061063b9190810190610dd9565b6106575760405162461bcd60e51b81526004016100ae906113a8565b6020808801519087015160405163095ea7b360e01b81526001600160a01b0385169263095ea7b39261068b926004016110ca565b602060405180830381600087803b1580156106a557600080fd5b505af11580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106dd9190810190610dd9565b505b60e08601511561071b5761071187600001518860200151848960a001518a60e001518b60c001518b8e60400151610a99565b9094509250610738565b61073287602001518760a001518960400151610ad5565b90945092505b60208601511561086c576040516370a0823160e01b81526000906001600160a01b038416906370a0823190610771903090600401611092565b60206040518083038186803b15801561078957600080fd5b505afa15801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107c19190810190610f14565b90508181111561086a57875160405163a9059cbb60e01b81526001600160a01b0385169163a9059cbb916107fc9190868603906004016110ca565b602060405180830381600087803b15801561081657600080fd5b505af115801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061084e9190810190610dd9565b61086a5760405162461bcd60e51b81526004016100ae906112d5565b505b505b8460600151856040015187600001516001600160a01b03167f7b0be7654550ec505d9f6fba967d2dbc7c84c72f39508dfb76ca7b8dc9d094a886866040516108b79291906110e3565b60405180910390a450935093915050565b60606000546108d78484610b4f565b80516020918201206040516108ed939201610f74565b604051602081830303815290604052905092915050565b6000815160411461091457600080fd5b60208201516040830151606084015160001a601b81101561093357601b015b8060ff16601b148061094857508060ff16601c145b61095157600080fd5b600186828585604051600081526020016040526040516109749493929190611185565b6020604051602081039080840390855afa158015610996573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b0384166109b657600080fd5b50505092915050565b6000805a6040516323b872dd60e01b81529091506001600160a01b038916906323b872dd906109f6908d908d908c906004016110a6565b602060405180830381600087803b158015610a1057600080fd5b505af1158015610a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a489190810190610dd9565b508415610a5e57610a5e8a898888858989610bc9565b5060019998505050505050505050565b6000604483511015610a825750600061011e565b5060248201516001600160a01b0382161492915050565b6000606060005a9050610aad8a8986610ad5565b90935091508615610ac757610ac78b8a8a8a858b8b610bc9565b509850989650505050505050565b60006060846001600160a01b03168484604051610af29190610f58565b60006040518083038160008787f1925050503d8060008114610b30576040519150601f19603f3d011682016040523d82523d6000602084013e610b35565b606091505b509092509050603f84045a11610b4757fe5b935093915050565b6060604051610b5d90610f8f565b604051809103902083600001518460200151846000015185602001518760400151604051610b8b9190610f58565b604080519182900382209089015160608a015160808b015160a08c015160c08d015160e08e01516101008f01516108ed9d9c9b9a9998602001611106565b60005a8403905085811115610bdb5750845b820184810285828281610bea57fe5b0414610c085760405162461bcd60e51b81526004016100ae90611331565b6040516323b872dd60e01b81526001600160a01b038916906323b872dd90610c38908c90879086906004016110a6565b602060405180830381600087803b158015610c5257600080fd5b505af1158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c8a9190810190610dd9565b50505050505050505050565b80356001600160a01b038116811461011e57600080fd5b600082601f830112610cbd578081fd5b813567ffffffffffffffff811115610cd3578182fd5b610ce6601f8201601f19166020016113e8565b9150808252836020828501011115610cfd57600080fd5b8060208401602084013760009082016020015292915050565b80356003811061011e57600080fd5b6000610120808385031215610d38578182fd5b610d41816113e8565b915050610d4e8383610c96565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100610da584828501610c96565b9082015292915050565b60008060408385031215610dc1578182fd5b610dcb8484610c96565b946020939093013593505050565b600060208284031215610dea578081fd5b81518015158114610df9578182fd5b9392505050565b600060208284031215610e11578081fd5b81516001600160e01b031981168114610df9578182fd5b60008060006101608486031215610e3d578081fd5b833567ffffffffffffffff80821115610e54578283fd5b81860160a08189031215610e66578384fd5b610e7060a06113e8565b9250610e7c8882610c96565b8352610e8b8860208301610c96565b6020840152604081013582811115610ea1578485fd5b610ead89828401610cad565b604085015250606081013582811115610ec4578485fd5b610ed089828401610cad565b606085015250610ee38860808301610d16565b6080840152505080935050610efb8560208601610d25565b9150610f0b856101408601610c96565b90509250925092565b600060208284031215610f25578081fd5b5051919050565b60008151808452610f4481602086016020860161140f565b601f01601f19169290920160200192915050565b60008251610f6a81846020870161140f565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b7f45524332304d6574615472616e73616374696f6e28616464726573732066726f81527f6d2c6164647265737320746f2c6164647265737320746f6b656e436f6e74726160208201527f63742c75696e7432353620616d6f756e742c627974657320646174612c75696e60408201527f7432353620626174636849642c75696e743235362062617463684e6f6e63652c60608201527f75696e74323536206578706972792c75696e743235362074784761732c75696e60808201527f7432353620626173654761732c75696e7432353620746f6b656e47617350726960a08201527263652c616464726573732072656c617965722960681b60c082015260d30190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60008315158252604060208301526110fe6040830184610f2c565b949350505050565b9c8d526001600160a01b039b8c1660208e0152998b1660408d0152978a1660608c015260808b019690965260a08a019490945260c089019290925260e0880152610100870152610120860152610140850152610160840152166101808201526101a00190565b6000838252604060208301526110fe6040830184610f2c565b93845260ff9290921660208401526040830152606082015260800190565b6000604082526111b66040830185610f2c565b82810360208401526111c88185610f2c565b95945050505050565b60208082526017908201527f62617463684e6f6e6365206f7574206f66206f72646572000000000000000000604082015260600190565b602080825260139082015272666972737420706172616d20213d2066726f6d60681b604082015260600190565b602080825260169082015275696e76616c69642031363534207369676e617475726560501b604082015260600190565b602080825260079082015266195e1c1a5c995960ca1b604082015260600190565b6020808252600e908201526d7369676e657220213d2066726f6d60901b604082015260600190565b6020808252600d908201526c3bb937b733903932b630bcb2b960991b604082015260600190565b602080825260139082015272115490cc8c17d4915195539117d19052531151606a1b604082015260600190565b602080825260159082015274115490cc8c17d514905394d1915497d19052531151605a1b604082015260600190565b6020808252600890820152676f766572666c6f7760c01b604082015260600190565b6020808252600b908201526a494e5f50524f475245535360a81b604082015260600190565b602080825260169082015275696e76616c69642031323731207369676e617475726560501b604082015260600190565b60208082526017908201527f45524332305f414c4c4f434154494f4e5f4641494c4544000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561140757600080fd5b604052919050565b60005b8381101561142a578181015183820152602001611412565b838111156103c7575050600091015256fea2646970667358221220e6d61c2c64c813c35c482f4c60c86e19df7fe0b77f980bd80c625c3e3c73f71064736f6c63430006010033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x27 SWAP1 PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x3B SWAP1 PUSH2 0x88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x4F SWAP1 PUSH2 0x10B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 PUSH2 0x68 SWAP4 SWAP3 SWAP2 ADDRESS SWAP1 PUSH1 0x20 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x0 SSTORE PUSH2 0x13C JUMP JUMPDEST PUSH32 0x47656E65726963204D657461205472616E73616374696F6E0000000000000000 DUP2 MSTORE PUSH1 0x18 ADD SWAP1 JUMP JUMPDEST PUSH32 0x454950373132446F6D61696E28737472696E67206E616D652C737472696E6720 DUP2 MSTORE PUSH32 0x76657273696F6E2C6164647265737320766572696679696E67436F6E74726163 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x7429 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1471 DUP1 PUSH2 0x14B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D431E2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x53F1DEFE EQ PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xCE DUP6 DUP6 PUSH2 0x124 JUMP JUMPDEST PUSH2 0xD8 DUP6 DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0xE3 DUP6 DUP6 DUP6 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x14C JUMPI POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12AE JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD TIMESTAMP LT PUSH2 0x18B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 DUP8 ADD MLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD ADD EQ PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x11D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E7 DUP4 DUP4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1FB JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2B1 JUMPI DUP3 MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x20C13B0B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x20C13B0B SWAP2 PUSH2 0x235 SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x285 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x379 JUMPI DUP3 MLOAD DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x1626BA7E SWAP3 PUSH2 0x302 SWAP3 PUSH1 0x4 ADD PUSH2 0x116C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x352 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x904 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1286 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP2 ADD MLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 DUP9 ADD MLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP5 MLOAD SWAP2 DUP7 ADD MLOAD MLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4F9 JUMPI PUSH1 0xE0 DUP6 ADD MLOAD ISZERO PUSH2 0x447 JUMPI PUSH2 0x441 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD DUP4 DUP9 PUSH1 0x20 ADD MLOAD DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 PUSH2 0x9BF JUMP JUMPDEST POP PUSH2 0x4F0 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x482 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x4D4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x86E JUMP JUMPDEST PUSH2 0x50B DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x560 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x5B0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x5E9 SWAP3 SWAP1 SWAP2 ADDRESS SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x63B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x68B SWAP3 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x6DD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP JUMPDEST PUSH1 0xE0 DUP7 ADD MLOAD ISZERO PUSH2 0x71B JUMPI PUSH2 0x711 DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP5 DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 DUP15 PUSH1 0x40 ADD MLOAD PUSH2 0xA99 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x738 JUMP JUMPDEST PUSH2 0x732 DUP8 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0x40 ADD MLOAD PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x771 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x7C1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x86A JUMPI DUP8 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x7FC SWAP2 SWAP1 DUP7 DUP7 SUB SWAP1 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x84E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12D5 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7B0BE7654550EC505D9F6FBA967D2DBC7C84C72F39508DFB76CA7B8DC9D094A8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8B7 SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 SLOAD PUSH2 0x8D7 DUP5 DUP5 PUSH2 0xB4F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x8ED SWAP4 SWAP3 ADD PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x948 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP7 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x974 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x9F6 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xA48 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP DUP5 ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5E DUP11 DUP10 DUP9 DUP9 DUP6 DUP10 DUP10 PUSH2 0xBC9 JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 DUP4 MLOAD LT ISZERO PUSH2 0xA82 JUMPI POP PUSH1 0x0 PUSH2 0x11E JUMP JUMPDEST POP PUSH1 0x24 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 GAS SWAP1 POP PUSH2 0xAAD DUP11 DUP10 DUP7 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP7 ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC7 DUP12 DUP11 DUP11 DUP11 DUP6 DUP12 DUP12 PUSH2 0xBC9 JUMP JUMPDEST POP SWAP9 POP SWAP9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF2 SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x3F DUP5 DIV GAS GT PUSH2 0xB47 JUMPI INVALID JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0xB5D SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 SWAP1 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 DUP13 ADD MLOAD PUSH1 0xC0 DUP14 ADD MLOAD PUSH1 0xE0 DUP15 ADD MLOAD PUSH2 0x100 DUP16 ADD MLOAD PUSH2 0x8ED SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 PUSH1 0x20 ADD PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x0 GAS DUP5 SUB SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0xBDB JUMPI POP DUP5 JUMPDEST DUP3 ADD DUP5 DUP2 MUL DUP6 DUP3 DUP3 DUP2 PUSH2 0xBEA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xC38 SWAP1 DUP13 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xC8A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCBD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xCE6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD38 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD4E DUP4 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xDA5 DUP5 DUP3 DUP6 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDCB DUP5 DUP5 PUSH2 0xC96 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE11 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE3D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE54 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD PUSH1 0xA0 DUP2 DUP10 SUB SLT ISZERO PUSH2 0xE66 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xE70 PUSH1 0xA0 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 POP PUSH2 0xE7C DUP9 DUP3 PUSH2 0xC96 JUMP JUMPDEST DUP4 MSTORE PUSH2 0xE8B DUP9 PUSH1 0x20 DUP4 ADD PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEA1 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xEAD DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE POP PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEC4 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xED0 DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE POP PUSH2 0xEE3 DUP9 PUSH1 0x80 DUP4 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE POP POP DUP1 SWAP4 POP POP PUSH2 0xEFB DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0B DUP6 PUSH2 0x140 DUP7 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF25 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF44 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x140F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF6A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x140F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH32 0x45524332304D6574615472616E73616374696F6E28616464726573732066726F DUP2 MSTORE PUSH32 0x6D2C6164647265737320746F2C6164647265737320746F6B656E436F6E747261 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x63742C75696E7432353620616D6F756E742C627974657320646174612C75696E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7432353620626174636849642C75696E743235362062617463684E6F6E63652C PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x75696E74323536206578706972792C75696E743235362074784761732C75696E PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x7432353620626173654761732C75696E7432353620746F6B656E476173507269 PUSH1 0xA0 DUP3 ADD MSTORE PUSH19 0x63652C616464726573732072656C6179657229 PUSH1 0x68 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xD3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP13 DUP14 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP10 DUP12 AND PUSH1 0x40 DUP14 ADD MSTORE SWAP8 DUP11 AND PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP11 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE AND PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x11B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF2C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11C8 DUP2 DUP6 PUSH2 0xF2C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x62617463684E6F6E6365206F7574206F66206F72646572000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x666972737420706172616D20213D2066726F6D PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031363534207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x7369676E657220213D2066726F6D PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x3BB937B733903932B630BCB2B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x115490CC8C17D4915195539117D19052531151 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x494E5F50524F4752455353 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031323731207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305F414C4C4F434154494F4E5F4641494C4544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1412 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xD6 SHR 0x2C PUSH5 0xC813C35C48 0x2F 0x4C PUSH1 0xC8 PUSH15 0x19DF7FE0B77F980BD80C625C3E3C73 0xF7 LT PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
        "sourceMap": "394:9709:1:-:0;;;1686:17;;;-1:-1:-1;;1686:17:1;;;1760:271;5:2:-1;;;;30:1;27;20:12;5:2;1760:271:1;785:93;;;;;;;;;;;;;;1900:37;;;;;;;;;;;;;;1955:14;;;;;;;;;;;;;;;1833:181;;;;1995:4;;1833:181;;;;;;;;-1:-1:-1;;26:21;;;22:32;6:49;;1833:181:1;;;1810:214;;49:4:-1;1810:214:1;;;;1791:16;:233;394:9709;;1443:372:-1;542:26;522:47;;506:2;588:12;;1623:192;1822:372;911:34;891:55;;980:34;975:2;966:12;;959:56;-1:-1;;;1044:2;1035:12;;1028:26;875:2;1073:12;;2002:192;2201:372;-1:-1;;;1375:24;;1360:1;1418:11;;2381:192;2580:547;196:37;;;2947:2;2932:18;;196:37;;;;3030:2;3015:18;;196:37;-1:-1;;;;;3527:54;3113:2;3098:18;;76:37;2782:3;2767:19;;2753:374;;394:9709:1;;;;;;"
      },
      "deployedBytecode": {
        "linkReferences": {},
        "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806326d431e21461003b57806353f1defe14610065575b600080fd5b61004e610049366004610e28565b610085565b60405161005c9291906110e3565b60405180910390f35b610078610073366004610daf565b6100f9565b60405161005c91906113df565b60025460009060609060ff16156100b75760405162461bcd60e51b81526004016100ae90611353565b60405180910390fd5b6002805460ff191660011790556100ce8585610124565b6100d885856101db565b6100e38585856103ce565b6002805460ff1916905590969095509350505050565b6001600160a01b03821660009081526001602090815260408083208484529091529020545b92915050565b6101008101516001600160a01b0316158061014c57506101008101516001600160a01b031633145b6101685760405162461bcd60e51b81526004016100ae906112ae565b8060800151421061018b5760405162461bcd60e51b81526004016100ae90611265565b606081015182516001600160a01b031660009081526001602081815260408084208187015185529091529091205401146101d75760405162461bcd60e51b81526004016100ae906111d1565b5050565b60606101e783836108c8565b90506002836080015160028111156101fb57fe5b14156102b157825160608401516040516320c13b0b60e01b808252926001600160a01b0316916320c13b0b916102359186916004016111a3565b60206040518083038186803b15801561024d57600080fd5b505afa158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102859190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611378565b6103c9565b6001836080015160028111156102c357fe5b1415610379578251815160208301206060850151604051630b135d3f60e11b808252936001600160a01b031692631626ba7e926103029260040161116c565b60206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506103529190810190610e00565b6001600160e01b031916146102ac5760405162461bcd60e51b81526004016100ae90611235565b600061039082805190602001208560600151610904565b905083600001516001600160a01b0316816001600160a01b0316146103c75760405162461bcd60e51b81526004016100ae90611286565b505b505050565b60608281015184516001600160a01b031660009081526001602090815260408083208188015184529091528082209290925584519186015151909291906104f95760e08501511561044757610441866000015187602001518388602001518960a001518a60e001518b60c001518b6109bf565b506104f0565b8551602080880151908701516040516323b872dd60e01b81526001600160a01b038516936323b872dd936104829391929091906004016110a6565b602060405180830381600087803b15801561049c57600080fd5b505af11580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104d49190810190610dd9565b6104f05760405162461bcd60e51b81526004016100ae90611302565b6001925061086e565b61050b86604001518760000151610a6e565b6105275760405162461bcd60e51b81526004016100ae90611208565b6020850151600090156106df576040516370a0823160e01b81526001600160a01b038316906370a0823190610560903090600401611092565b60206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105b09190810190610f14565b875160208801516040516323b872dd60e01b81529293506001600160a01b038516926323b872dd926105e99290913091906004016110a6565b602060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061063b9190810190610dd9565b6106575760405162461bcd60e51b81526004016100ae906113a8565b6020808801519087015160405163095ea7b360e01b81526001600160a01b0385169263095ea7b39261068b926004016110ca565b602060405180830381600087803b1580156106a557600080fd5b505af11580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106dd9190810190610dd9565b505b60e08601511561071b5761071187600001518860200151848960a001518a60e001518b60c001518b8e60400151610a99565b9094509250610738565b61073287602001518760a001518960400151610ad5565b90945092505b60208601511561086c576040516370a0823160e01b81526000906001600160a01b038416906370a0823190610771903090600401611092565b60206040518083038186803b15801561078957600080fd5b505afa15801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107c19190810190610f14565b90508181111561086a57875160405163a9059cbb60e01b81526001600160a01b0385169163a9059cbb916107fc9190868603906004016110ca565b602060405180830381600087803b15801561081657600080fd5b505af115801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061084e9190810190610dd9565b61086a5760405162461bcd60e51b81526004016100ae906112d5565b505b505b8460600151856040015187600001516001600160a01b03167f7b0be7654550ec505d9f6fba967d2dbc7c84c72f39508dfb76ca7b8dc9d094a886866040516108b79291906110e3565b60405180910390a450935093915050565b60606000546108d78484610b4f565b80516020918201206040516108ed939201610f74565b604051602081830303815290604052905092915050565b6000815160411461091457600080fd5b60208201516040830151606084015160001a601b81101561093357601b015b8060ff16601b148061094857508060ff16601c145b61095157600080fd5b600186828585604051600081526020016040526040516109749493929190611185565b6020604051602081039080840390855afa158015610996573d6000803e3d6000fd5b5050604051601f1901519450506001600160a01b0384166109b657600080fd5b50505092915050565b6000805a6040516323b872dd60e01b81529091506001600160a01b038916906323b872dd906109f6908d908d908c906004016110a6565b602060405180830381600087803b158015610a1057600080fd5b505af1158015610a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a489190810190610dd9565b508415610a5e57610a5e8a898888858989610bc9565b5060019998505050505050505050565b6000604483511015610a825750600061011e565b5060248201516001600160a01b0382161492915050565b6000606060005a9050610aad8a8986610ad5565b90935091508615610ac757610ac78b8a8a8a858b8b610bc9565b509850989650505050505050565b60006060846001600160a01b03168484604051610af29190610f58565b60006040518083038160008787f1925050503d8060008114610b30576040519150601f19603f3d011682016040523d82523d6000602084013e610b35565b606091505b509092509050603f84045a11610b4757fe5b935093915050565b6060604051610b5d90610f8f565b604051809103902083600001518460200151846000015185602001518760400151604051610b8b9190610f58565b604080519182900382209089015160608a015160808b015160a08c015160c08d015160e08e01516101008f01516108ed9d9c9b9a9998602001611106565b60005a8403905085811115610bdb5750845b820184810285828281610bea57fe5b0414610c085760405162461bcd60e51b81526004016100ae90611331565b6040516323b872dd60e01b81526001600160a01b038916906323b872dd90610c38908c90879086906004016110a6565b602060405180830381600087803b158015610c5257600080fd5b505af1158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c8a9190810190610dd9565b50505050505050505050565b80356001600160a01b038116811461011e57600080fd5b600082601f830112610cbd578081fd5b813567ffffffffffffffff811115610cd3578182fd5b610ce6601f8201601f19166020016113e8565b9150808252836020828501011115610cfd57600080fd5b8060208401602084013760009082016020015292915050565b80356003811061011e57600080fd5b6000610120808385031215610d38578182fd5b610d41816113e8565b915050610d4e8383610c96565b81526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100610da584828501610c96565b9082015292915050565b60008060408385031215610dc1578182fd5b610dcb8484610c96565b946020939093013593505050565b600060208284031215610dea578081fd5b81518015158114610df9578182fd5b9392505050565b600060208284031215610e11578081fd5b81516001600160e01b031981168114610df9578182fd5b60008060006101608486031215610e3d578081fd5b833567ffffffffffffffff80821115610e54578283fd5b81860160a08189031215610e66578384fd5b610e7060a06113e8565b9250610e7c8882610c96565b8352610e8b8860208301610c96565b6020840152604081013582811115610ea1578485fd5b610ead89828401610cad565b604085015250606081013582811115610ec4578485fd5b610ed089828401610cad565b606085015250610ee38860808301610d16565b6080840152505080935050610efb8560208601610d25565b9150610f0b856101408601610c96565b90509250925092565b600060208284031215610f25578081fd5b5051919050565b60008151808452610f4481602086016020860161140f565b601f01601f19169290920160200192915050565b60008251610f6a81846020870161140f565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b7f45524332304d6574615472616e73616374696f6e28616464726573732066726f81527f6d2c6164647265737320746f2c6164647265737320746f6b656e436f6e74726160208201527f63742c75696e7432353620616d6f756e742c627974657320646174612c75696e60408201527f7432353620626174636849642c75696e743235362062617463684e6f6e63652c60608201527f75696e74323536206578706972792c75696e743235362074784761732c75696e60808201527f7432353620626173654761732c75696e7432353620746f6b656e47617350726960a08201527263652c616464726573732072656c617965722960681b60c082015260d30190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60008315158252604060208301526110fe6040830184610f2c565b949350505050565b9c8d526001600160a01b039b8c1660208e0152998b1660408d0152978a1660608c015260808b019690965260a08a019490945260c089019290925260e0880152610100870152610120860152610140850152610160840152166101808201526101a00190565b6000838252604060208301526110fe6040830184610f2c565b93845260ff9290921660208401526040830152606082015260800190565b6000604082526111b66040830185610f2c565b82810360208401526111c88185610f2c565b95945050505050565b60208082526017908201527f62617463684e6f6e6365206f7574206f66206f72646572000000000000000000604082015260600190565b602080825260139082015272666972737420706172616d20213d2066726f6d60681b604082015260600190565b602080825260169082015275696e76616c69642031363534207369676e617475726560501b604082015260600190565b602080825260079082015266195e1c1a5c995960ca1b604082015260600190565b6020808252600e908201526d7369676e657220213d2066726f6d60901b604082015260600190565b6020808252600d908201526c3bb937b733903932b630bcb2b960991b604082015260600190565b602080825260139082015272115490cc8c17d4915195539117d19052531151606a1b604082015260600190565b602080825260159082015274115490cc8c17d514905394d1915497d19052531151605a1b604082015260600190565b6020808252600890820152676f766572666c6f7760c01b604082015260600190565b6020808252600b908201526a494e5f50524f475245535360a81b604082015260600190565b602080825260169082015275696e76616c69642031323731207369676e617475726560501b604082015260600190565b60208082526017908201527f45524332305f414c4c4f434154494f4e5f4641494c4544000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561140757600080fd5b604052919050565b60005b8381101561142a578181015183820152602001611412565b838111156103c7575050600091015256fea2646970667358221220e6d61c2c64c813c35c482f4c60c86e19df7fe0b77f980bd80c625c3e3c73f71064736f6c63430006010033",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D431E2 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x53F1DEFE EQ PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78 PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xB7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xCE DUP6 DUP6 PUSH2 0x124 JUMP JUMPDEST PUSH2 0xD8 DUP6 DUP6 PUSH2 0x1DB JUMP JUMPDEST PUSH2 0xE3 DUP6 DUP6 DUP6 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x14C JUMPI POP PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12AE JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD TIMESTAMP LT PUSH2 0x18B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 DUP8 ADD MLOAD DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD ADD EQ PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x11D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E7 DUP4 DUP4 PUSH2 0x8C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1FB JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x2B1 JUMPI DUP3 MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x20C13B0B PUSH1 0xE0 SHL DUP1 DUP3 MSTORE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x20C13B0B SWAP2 PUSH2 0x235 SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x261 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x285 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C3 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x379 JUMPI DUP3 MLOAD DUP2 MLOAD PUSH1 0x20 DUP4 ADD KECCAK256 PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x1626BA7E SWAP3 PUSH2 0x302 SWAP3 PUSH1 0x4 ADD PUSH2 0x116C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x352 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x904 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1286 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 DUP2 ADD MLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 DUP9 ADD MLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP5 MLOAD SWAP2 DUP7 ADD MLOAD MLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0x4F9 JUMPI PUSH1 0xE0 DUP6 ADD MLOAD ISZERO PUSH2 0x447 JUMPI PUSH2 0x441 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD DUP4 DUP9 PUSH1 0x20 ADD MLOAD DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 PUSH2 0x9BF JUMP JUMPDEST POP PUSH2 0x4F0 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH2 0x482 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x4D4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x86E JUMP JUMPDEST PUSH2 0x50B DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x527 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x560 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x5B0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST DUP8 MLOAD PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x5E9 SWAP3 SWAP1 SWAP2 ADDRESS SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x63B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP9 ADD MLOAD SWAP1 DUP8 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x68B SWAP3 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x6DD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP JUMPDEST PUSH1 0xE0 DUP7 ADD MLOAD ISZERO PUSH2 0x71B JUMPI PUSH2 0x711 DUP8 PUSH1 0x0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP5 DUP10 PUSH1 0xA0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH1 0xC0 ADD MLOAD DUP12 DUP15 PUSH1 0x40 ADD MLOAD PUSH2 0xA99 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x738 JUMP JUMPDEST PUSH2 0x732 DUP8 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0x40 ADD MLOAD PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x771 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1092 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x79D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x7C1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x86A JUMPI DUP8 MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x7FC SWAP2 SWAP1 DUP7 DUP7 SUB SWAP1 PUSH1 0x4 ADD PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x84E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x12D5 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7B0BE7654550EC505D9F6FBA967D2DBC7C84C72F39508DFB76CA7B8DC9D094A8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8B7 SWAP3 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 SLOAD PUSH2 0x8D7 DUP5 DUP5 PUSH2 0xB4F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x8ED SWAP4 SWAP3 ADD PUSH2 0xF74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH1 0x1B DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x1B ADD JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x948 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP7 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x974 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x996 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP5 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 GAS PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x9F6 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xA48 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP DUP5 ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5E DUP11 DUP10 DUP9 DUP9 DUP6 DUP10 DUP10 PUSH2 0xBC9 JUMP JUMPDEST POP PUSH1 0x1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 DUP4 MLOAD LT ISZERO PUSH2 0xA82 JUMPI POP PUSH1 0x0 PUSH2 0x11E JUMP JUMPDEST POP PUSH1 0x24 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 GAS SWAP1 POP PUSH2 0xAAD DUP11 DUP10 DUP7 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP7 ISZERO PUSH2 0xAC7 JUMPI PUSH2 0xAC7 DUP12 DUP11 DUP11 DUP11 DUP6 DUP12 DUP12 PUSH2 0xBC9 JUMP JUMPDEST POP SWAP9 POP SWAP9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAF2 SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x3F DUP5 DIV GAS GT PUSH2 0xB47 JUMPI INVALID JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0xB5D SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 SWAP1 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 DUP13 ADD MLOAD PUSH1 0xC0 DUP14 ADD MLOAD PUSH1 0xE0 DUP15 ADD MLOAD PUSH2 0x100 DUP16 ADD MLOAD PUSH2 0x8ED SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 PUSH1 0x20 ADD PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x0 GAS DUP5 SUB SWAP1 POP DUP6 DUP2 GT ISZERO PUSH2 0xBDB JUMPI POP DUP5 JUMPDEST DUP3 ADD DUP5 DUP2 MUL DUP6 DUP3 DUP3 DUP2 PUSH2 0xBEA JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xC38 SWAP1 DUP13 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0xC8A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDD9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCBD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD3 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xCE6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x20 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD38 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0x13E8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD4E DUP4 DUP4 PUSH2 0xC96 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0xDA5 DUP5 DUP3 DUP6 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC1 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xDCB DUP5 DUP5 PUSH2 0xC96 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE11 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDF9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE3D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE54 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP7 ADD PUSH1 0xA0 DUP2 DUP10 SUB SLT ISZERO PUSH2 0xE66 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xE70 PUSH1 0xA0 PUSH2 0x13E8 JUMP JUMPDEST SWAP3 POP PUSH2 0xE7C DUP9 DUP3 PUSH2 0xC96 JUMP JUMPDEST DUP4 MSTORE PUSH2 0xE8B DUP9 PUSH1 0x20 DUP4 ADD PUSH2 0xC96 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEA1 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xEAD DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE POP PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xEC4 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0xED0 DUP10 DUP3 DUP5 ADD PUSH2 0xCAD JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE POP PUSH2 0xEE3 DUP9 PUSH1 0x80 DUP4 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE POP POP DUP1 SWAP4 POP POP PUSH2 0xEFB DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD25 JUMP JUMPDEST SWAP2 POP PUSH2 0xF0B DUP6 PUSH2 0x140 DUP7 ADD PUSH2 0xC96 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF25 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF44 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x140F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF6A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x140F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 ADD SWAP1 JUMP JUMPDEST PUSH32 0x45524332304D6574615472616E73616374696F6E28616464726573732066726F DUP2 MSTORE PUSH32 0x6D2C6164647265737320746F2C6164647265737320746F6B656E436F6E747261 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x63742C75696E7432353620616D6F756E742C627974657320646174612C75696E PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7432353620626174636849642C75696E743235362062617463684E6F6E63652C PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x75696E74323536206578706972792C75696E743235362074784761732C75696E PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x7432353620626173654761732C75696E7432353620746F6B656E476173507269 PUSH1 0xA0 DUP3 ADD MSTORE PUSH19 0x63652C616464726573732072656C6179657229 PUSH1 0x68 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xD3 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP13 DUP14 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND PUSH1 0x20 DUP15 ADD MSTORE SWAP10 DUP12 AND PUSH1 0x40 DUP14 ADD MSTORE SWAP8 DUP11 AND PUSH1 0x60 DUP13 ADD MSTORE PUSH1 0x80 DUP12 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP11 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xC0 DUP10 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE AND PUSH2 0x180 DUP3 ADD MSTORE PUSH2 0x1A0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x10FE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF2C JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x11B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF2C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11C8 DUP2 DUP6 PUSH2 0xF2C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x62617463684E6F6E6365206F7574206F66206F72646572000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x666972737420706172616D20213D2066726F6D PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031363534207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x7369676E657220213D2066726F6D PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x3BB937B733903932B630BCB2B9 PUSH1 0x99 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x115490CC8C17D4915195539117D19052531151 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x115490CC8C17D514905394D1915497D19052531151 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x8 SWAP1 DUP3 ADD MSTORE PUSH8 0x6F766572666C6F77 PUSH1 0xC0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x494E5F50524F4752455353 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x696E76616C69642031323731207369676E6174757265 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332305F414C4C4F434154494F4E5F4641494C4544000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1412 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3C7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xD6 SHR 0x2C PUSH5 0xC813C35C48 0x2F 0x4C PUSH1 0xC8 PUSH15 0x19DF7FE0B77F980BD80C625C3E3C73 0xF7 LT PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
        "sourceMap": "394:9709:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;394:9709:1;;;;;;;;;;;;;;;;;;;;;;;;2453:480;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;9973:128;;;;;;;;;:::i;:::-;;;;;;;;2453:480;2664:4;;2606:12;;2620:23;;2664:4;;2663:5;2655:29;;;;-1:-1:-1;;;2655:29:1;;;;;;;;;;;;;;;;;2694:4;:11;;-1:-1:-1;;2694:11:1;2701:4;2694:11;;;2715:47;2741:8;2751:10;2715:25;:47::i;:::-;2772:42;2793:8;2803:10;2772:20;:42::i;:::-;2848:56;2868:8;2878:10;2890:13;2848:19;:56::i;:::-;2914:4;:12;;-1:-1:-1;;2914:12:1;;;2824:80;;;;-1:-1:-1;2453:480:1;-1:-1:-1;;;;2453:480:1:o;9973:128::-;-1:-1:-1;;;;;10072:13:1;;10046:7;10072:13;;;:7;:13;;;;;;;;:22;;;;;;;;;9973:128;;;;;:::o;3014:450::-;3168:18;;;;-1:-1:-1;;;;;3168:32:1;;;:68;;-1:-1:-1;3204:18:1;;;;-1:-1:-1;;;;;3204:32:1;3226:10;3204:32;3168:68;3147:128;;;;-1:-1:-1;;;3147:128:1;;;;;;;;;3311:10;:17;;;3293:15;:35;3285:55;;;;-1:-1:-1;;;3285:55:1;;;;;;;;;3408:21;;;;3366:13;;-1:-1:-1;;;;;3358:22:1;;;;;:7;:22;;;;;;;;3381:18;;;;3358:42;;;;;;;;;:46;:71;3350:107;;;;-1:-1:-1;;;3350:107:1;;;;;;;;;3014:450;;:::o;4388:895::-;4516:23;4542:36;4557:8;4567:10;4542:14;:36::i;:::-;4516:62;-1:-1:-1;4618:21:1;4592:8;:22;;;:47;;;;;;;;;4588:689;;;4688:13;;4732:18;;;;4680:71;;-1:-1:-1;;;4680:71:1;;;4755:18;-1:-1:-1;;;;;4680:39:1;;103:10:3;;4680:71:1;;4720:10;;4680:71;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4680:71:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4680:71:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4680:71:1;;;;;;;;;-1:-1:-1;;;;;;4680:93:1;;4655:174;;;;-1:-1:-1;;;4655:174:1;;;;;;;;;4588:689;;;4875:21;4849:8;:22;;;:47;;;;;;;;;4846:431;;;4944:13;;4976:21;;;;;;4999:18;;;;4936:82;;-1:-1:-1;;;4936:82:1;;;5022:18;-1:-1:-1;;;;;4936:39:1;;103:10:6;;4936:82:1;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4936:82:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4936:82:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4936:82:1;;;;;;;;;-1:-1:-1;;;;;;4936:104:1;;4911:185;;;;-1:-1:-1;;;4911:185:1;;;;;;;;4846:431;5127:14;5144:58;5170:10;5160:21;;;;;;5183:8;:18;;;5144:15;:58::i;:::-;5127:75;;5234:8;:13;;;-1:-1:-1;;;;;5224:23:1;:6;-1:-1:-1;;;;;5224:23:1;;5216:50;;;;-1:-1:-1;;;5216:50:1;;;;;;;;;4846:431;;4388:895;;;:::o;7432:2535::-;7598:23;7678:21;;;;7641:13;;-1:-1:-1;;;;;7633:22:1;7584:12;7633:22;;;:7;:22;;;;;;;;7656:18;;;;7633:42;;;;;;;;:66;;;;7738:24;;7778:13;;;;:20;7584:12;;7598:23;7738:24;7774:2086;;7822:24;;;;:28;7819:555;;7870:343;7916:8;:13;;;7951:8;:11;;;7984:13;8019:10;:17;;;8058:10;:16;;;8096:10;:24;;;8142:10;:18;;;8182:13;7870:24;:343::i;:::-;;7819:555;;;8287:13;;8302:11;;;;;8315:17;;;;8260:73;;-1:-1:-1;;;8260:73:1;;-1:-1:-1;;;;;8260:26:1;;;;;:73;;8287:13;;8302:11;;8315:17;8260:73;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8260:73:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8260:73:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8260:73:1;;;;;;;;;8252:107;;;;-1:-1:-1;;;8252:107:1;;;;;;;;;8397:4;8387:14;;7774:2086;;;8457:65;8493:8;:13;;;8508:8;:13;;;8457:35;:65::i;:::-;8432:143;;;;-1:-1:-1;;;8432:143:1;;;;;;;;;8629:17;;;;8589:23;;8629:21;8626:315;;8688:38;;-1:-1:-1;;;8688:38:1;;-1:-1:-1;;;;;8688:23:1;;;;;:38;;8720:4;;8688:38;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8688:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8688:38:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8688:38:1;;;;;;;;;8779:13;;8809:17;;;;8752:75;;-1:-1:-1;;;8752:75:1;;8670:56;;-1:-1:-1;;;;;;8752:26:1;;;;;:75;;8779:13;;8802:4;;8809:17;8752:75;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8752:75:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8752:75:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8752:75:1;;;;;;;;;8744:111;;;;-1:-1:-1;;;8744:111:1;;;;;;;;;8895:11;;;;;8908:17;;;;8873:53;;-1:-1:-1;;;8873:53:1;;-1:-1:-1;;;;;8873:21:1;;;;;:53;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8873:53:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8873:53:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8873:53:1;;;;;;;;;;8626:315;8957:24;;;;:28;8954:574;;9029:352;9088:8;:13;;;9123:8;:11;;;9156:13;9191:10;:16;;;9229:10;:24;;;9275:10;:18;;;9315:13;9350:8;:13;;;9029:37;:352::i;:::-;9005:376;;-1:-1:-1;9005:376:1;-1:-1:-1;8954:574:1;;;9444:69;9468:8;:11;;;9481:10;:16;;;9499:8;:13;;;9444:23;:69::i;:::-;9420:93;;-1:-1:-1;9420:93:1;-1:-1:-1;8954:574:1;9544:17;;;;:21;9541:309;;9606:38;;-1:-1:-1;;;9606:38:1;;9585:18;;-1:-1:-1;;;;;9606:23:1;;;;;:38;;9638:4;;9606:38;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9606:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9606:38:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9606:38:1;;;;;;;;;9585:59;;9679:15;9666:10;:28;9662:174;;;9749:13;;9726:67;;-1:-1:-1;;;9726:67:1;;-1:-1:-1;;;;;9726:22:1;;;;;:67;;9749:13;9764:28;;;;9726:67;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9726:67:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9726:67:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9726:67:1;;;;;;;;;9718:99;;;;-1:-1:-1;;;9718:99:1;;;;;;;;;9541:309;;7774:2086;;9917:10;:21;;;9897:10;:18;;;9882:8;:13;;;-1:-1:-1;;;;;9875:85:1;;9940:7;9949:10;9875:85;;;;;;;;;;;;;;;;7432:2535;;;;;;;:::o;3470:298::-;3591:12;3676:16;;3716:34;3729:8;3739:10;3716:12;:34::i;:::-;3706:45;;;;;;;3622:139;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3622:139:1;;;3615:146;;3470:298;;;;:::o;47:637:15:-;143:17;184:3;:10;198:2;184:16;176:25;;;;;;310:2;301:12;;295:19;347:2;338:12;;332:19;392:2;383:12;;377:19;212:9;369:28;516:2;512:6;;508:44;;;539:2;534:7;508:44;569:1;:7;;574:2;569:7;:18;;;;580:1;:7;;585:2;580:7;569:18;561:27;;;;;;611:24;621:4;627:1;630;633;611:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;611:24:15;;-1:-1:-1;;611:24:15;;;-1:-1:-1;;;;;;;653:23:15;;645:32;;;;;;47:637;;;;;;;:::o;6265:552:1:-;6537:4;6553:18;6574:9;6593:44;;-1:-1:-1;;;6593:44:1;;6553:30;;-1:-1:-1;;;;;;6593:26:1;;;;;:44;;6620:4;;6626:2;;6630:6;;6593:44;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6593:44:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6593:44:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6593:44:1;;;;;;;;;-1:-1:-1;6651:17:1;;6647:143;;6684:95;6692:4;6698:13;6713:8;6723:13;6738:10;6750:13;6765;6684:7;:95::i;:::-;-1:-1:-1;6806:4:1;;6265:552;-1:-1:-1;;;;;;;;;6265:552:1:o;1504:348:13:-;1623:4;1662:7;1647:4;:11;:23;1643:66;;;-1:-1:-1;1693:5:13;1686:12;;1643:66;-1:-1:-1;1789:2:13;1779:13;;1773:20;-1:-1:-1;;;;;1828:17:13;;1819:26;1504:348;;;;:::o;6823:603:1:-;7111:12;7125:23;7160:18;7181:9;7160:30;;7224:43;7248:2;7252:8;7262:4;7224:23;:43::i;:::-;7200:67;;-1:-1:-1;7200:67:1;-1:-1:-1;7281:17:1;;7277:143;;7314:95;7322:4;7328:13;7343:8;7353:13;7368:10;7380:13;7395;7314:7;:95::i;:::-;6823:603;;;;;;;;;;;;:::o;5906:353::-;6036:12;6050:23;6109:2;-1:-1:-1;;;;;6109:7:1;6121:8;6131:4;6109:27;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1;6085:51:1;;-1:-1:-1;6085:51:1;-1:-1:-1;6176:2:1;6165:8;:13;6153:9;:25;6146:33;;;;5906:353;;;;;;:::o;3774:608::-;3892:12;964:238;;;;;;;;;;;;;;3990:8;:13;;;4017:8;:11;;;4042:10;:24;;;4080:10;:17;;;4121:8;:13;;;4111:24;;;;;;;;;;;;;;;;;4149:18;;;;4181:21;;;;4216:17;;;;4247:16;;;;4277:18;;;;4309:24;;;;4347:18;;;;3923:452;;;;;;;;;;;5289:611;5529:17;5562:9;5549:10;:22;5529:42;;5596:8;5584:9;:20;5581:70;;;-1:-1:-1;5632:8:1;5581:70;5660:26;;5721:25;;;5733:13;5660:26;5721:25;5660:26;5764;;;;;:43;5756:64;;;;-1:-1:-1;;;5756:64:1;;;;;;;;;5830:63;;-1:-1:-1;;;5830:63:1;;-1:-1:-1;;;;;5830:26:1;;;;;:63;;5857:4;;5863:13;;5878:14;;5830:63;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5830:63:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5830:63:1;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5830:63:1;;;;;;;;;;5289:611;;;;;;;;;:::o;5:130:-1:-;72:20;;-1:-1;;;;;26280:54;;27189:35;;27179:2;;27238:1;;27228:12;417:432;;514:3;507:4;499:6;495:17;491:27;481:2;;-1:-1;;522:12;481:2;569:6;556:20;24711:18;24703:6;24700:30;24697:2;;;-1:-1;;24733:12;24697:2;591:60;24806:9;24787:17;;-1:-1;;24783:33;24874:4;24864:15;591:60;;;582:69;;671:6;664:5;657:21;775:3;24874:4;766:6;699;757:16;;754:25;751:2;;;792:1;;782:12;751:2;26595:6;24874:4;699:6;695:17;24874:4;733:5;729:16;26572:30;26651:1;26633:16;;;24874:4;26633:16;26626:27;733:5;474:375;-1:-1;;474:375;857:162;940:20;;27579:1;27569:12;;27559:2;;27595:1;;27585:12;1073:1526;;1189:6;;1177:9;1172:3;1168:19;1164:32;1161:2;;;-1:-1;;1199:12;1161:2;1227:22;1189:6;1227:22;;;1218:31;;;1340:49;1385:3;1361:22;1340:49;;;1322:16;1315:75;1453:2;1511:9;1507:22;3827:20;1453:2;1472:5;1468:16;1461:75;1600:2;1658:9;1654:22;3827:20;1600:2;1619:5;1615:16;1608:75;1750:2;1808:9;1804:22;3827:20;1750:2;1769:5;1765:16;1758:75;1896:3;1955:9;1951:22;3827:20;1896:3;1916:5;1912:16;1905:75;2042:3;2101:9;2097:22;3827:20;2042:3;2062:5;2058:16;2051:75;2190:3;2249:9;2245:22;3827:20;2190:3;2210:5;2206:16;2199:75;2344:3;2403:9;2399:22;3827:20;2344:3;2364:5;2360:16;2353:75;2492:3;2528:49;2573:3;2492;2553:9;2549:22;2528:49;;;2508:18;;;2501:77;2512:5;1155:1444;-1:-1;;1155:1444;4038:366;;;4159:2;4147:9;4138:7;4134:23;4130:32;4127:2;;;-1:-1;;4165:12;4127:2;4227:53;4272:7;4248:22;4227:53;;;4217:63;4317:2;4356:22;;;;3827:20;;-1:-1;;;4121:283;4411:257;;4523:2;4511:9;4502:7;4498:23;4494:32;4491:2;;;-1:-1;;4529:12;4491:2;223:6;217:13;27335:5;25962:13;25955:21;27313:5;27310:32;27300:2;;-1:-1;;27346:12;27300:2;4581:71;4485:183;-1:-1;;;4485:183;4675:261;;4789:2;4777:9;4768:7;4764:23;4760:32;4757:2;;;-1:-1;;4795:12;4757:2;354:13;;-1:-1;;;;;;26128:78;;27430:34;;27420:2;;-1:-1;;27468:12;4943:675;;;;5129:3;5117:9;5108:7;5104:23;5100:33;5097:2;;;-1:-1;;5136:12;5097:2;5194:17;5181:31;5232:18;;5224:6;5221:30;5218:2;;;-1:-1;;5254:12;5218:2;5341:6;5330:9;5326:22;2757:4;2745:9;2740:3;2736:19;2732:30;2729:2;;;-1:-1;;2765:12;2729:2;2793:20;2757:4;2793:20;;;2784:29;;2895:49;2940:3;2916:22;2895:49;;;2877:16;2870:75;3037:49;3082:3;3004:2;3062:9;3058:22;3037:49;;;3004:2;3023:5;3019:16;3012:75;3176:2;3165:9;3161:18;3148:32;5232:18;3192:6;3189:30;3186:2;;;-1:-1;;3222:12;3186:2;3267:54;3317:3;3308:6;3297:9;3293:22;3267:54;;;3176:2;3253:5;3249:16;3242:80;;3416:2;3405:9;3401:18;3388:32;5232:18;3432:6;3429:30;3426:2;;;-1:-1;;3462:12;3426:2;3507:54;3557:3;3548:6;3537:9;3533:22;3507:54;;;3416:2;3493:5;3489:16;3482:80;;3666:65;3727:3;3632;3707:9;3703:22;3666:65;;;3632:3;3652:5;3648:16;3641:91;;;5274:84;;;;5413:80;5485:7;3004:2;5465:9;5461:22;5413:80;;;5403:90;;5549:53;5594:7;5530:3;5574:9;5570:22;5549:53;;;5539:63;;5091:527;;;;;;5625:263;;5740:2;5728:9;5719:7;5715:23;5711:32;5708:2;;;-1:-1;;5746:12;5708:2;-1:-1;3975:13;;5702:186;-1:-1;5702:186;6405:343;;6547:5;24979:12;25263:6;25258:3;25251:19;6640:52;6685:6;25300:4;25295:3;25291:14;25300:4;6666:5;6662:16;6640:52;;;24806:9;27093:14;-1:-1;;27089:28;6704:39;;;;25300:4;6704:39;;6495:253;-1:-1;;6495:253;13147:254;;6915:5;24979:12;7026:52;7071:6;7066:3;7059:4;7052:5;7048:16;7026:52;;;7090:16;;;;;13268:133;-1:-1;;13268:133;13677:650;-1:-1;;;8423:87;;8408:1;8529:11;;6197:37;;;;14179:12;;;6197:37;14290:12;;;13913:414;14334:372;10799:34;10779:55;;10868:34;10863:2;10854:12;;10847:56;10937:34;10932:2;10923:12;;10916:56;11006:34;11001:2;10992:12;;10985:56;11076:34;11070:3;11061:13;;11054:57;11146:34;11140:3;11131:13;;11124:57;-1:-1;;;11210:3;11201:13;;11194:44;10762:3;11257:13;;14514:192;14713:213;-1:-1;;;;;26280:54;;;;5966:37;;14831:2;14816:18;;14802:124;14933:435;-1:-1;;;;;26280:54;;;5966:37;;26280:54;;;;15271:2;15256:18;;5966:37;15354:2;15339:18;;6197:37;;;;15107:2;15092:18;;15078:290;15375:324;-1:-1;;;;;26280:54;;;;5966:37;;15685:2;15670:18;;6197:37;15521:2;15506:18;;15492:207;15706:396;;6107:5;25962:13;25955:21;6087:3;6080:34;15864:2;15976;15965:9;15961:18;15954:48;16016:76;15864:2;15853:9;15849:18;16078:6;16016:76;;;16008:84;15835:267;-1:-1;;;;15835:267;16109:1561;6197:37;;;-1:-1;;;;;26280:54;;;16731:2;16716:18;;5966:37;26280:54;;;16814:2;16799:18;;5966:37;26280:54;;;16897:2;16882:18;;5966:37;16980:3;16965:19;;6197:37;;;;26291:42;17049:19;;6197:37;;;;17148:3;17133:19;;6197:37;;;;17232:3;17217:19;;6197:37;17316:3;17301:19;;6197:37;17400:3;17385:19;;6197:37;17485:3;17470:19;;6197:37;17570:3;17555:19;;6197:37;26280:54;17655:3;17640:19;;5966:37;16566:3;16551:19;;16537:1133;17677:400;;6227:5;6204:3;6197:37;17837:2;17955;17944:9;17940:18;17933:48;17995:72;17837:2;17826:9;17822:18;18053:6;17995:72;;18084:539;6197:37;;;26496:4;26485:16;;;;18443:2;18428:18;;13100:35;18526:2;18511:18;;6197:37;18609:2;18594:18;;6197:37;18282:3;18267:19;;18253:370;18630:484;;18808:2;18829:17;18822:47;18883:76;18808:2;18797:9;18793:18;18945:6;18883:76;;;19007:9;19001:4;18997:20;18992:2;18981:9;18977:18;18970:48;19032:72;19099:4;19090:6;19032:72;;;19024:80;18779:335;-1:-1;;;;;18779:335;19121:407;19312:2;19326:47;;;8040:2;19297:18;;;25251:19;8076:25;25291:14;;;8056:46;8121:12;;;19283:245;19535:407;19726:2;19740:47;;;8779:2;19711:18;;;25251:19;-1:-1;;;25291:14;;;8795:42;8856:12;;;19697:245;19949:407;20140:2;20154:47;;;9107:2;20125:18;;;25251:19;-1:-1;;;25291:14;;;9123:45;9187:12;;;20111:245;20363:407;20554:2;20568:47;;;9438:1;20539:18;;;25251:19;-1:-1;;;25291:14;;;9453:30;9502:12;;;20525:245;20777:407;20968:2;20982:47;;;9753:2;20953:18;;;25251:19;-1:-1;;;25291:14;;;9769:37;9825:12;;;20939:245;21191:407;21382:2;21396:47;;;10076:2;21367:18;;;25251:19;-1:-1;;;25291:14;;;10092:36;10147:12;;;21353:245;21605:407;21796:2;21810:47;;;10398:2;21781:18;;;25251:19;-1:-1;;;25291:14;;;10414:42;10475:12;;;21767:245;22019:407;22210:2;22224:47;;;11509:2;22195:18;;;25251:19;-1:-1;;;25291:14;;;11525:44;11588:12;;;22181:245;22433:407;22624:2;22638:47;;;11839:1;22609:18;;;25251:19;-1:-1;;;25291:14;;;11854:31;11904:12;;;22595:245;22847:407;23038:2;23052:47;;;12155:2;23023:18;;;25251:19;-1:-1;;;25291:14;;;12171:34;12224:12;;;23009:245;23261:407;23452:2;23466:47;;;12475:2;23437:18;;;25251:19;-1:-1;;;25291:14;;;12491:45;12555:12;;;23423:245;23675:407;23866:2;23880:47;;;12806:2;23851:18;;;25251:19;12842:25;25291:14;;;12822:46;12887:12;;;23837:245;24089:213;6197:37;;;24207:2;24192:18;;24178:124;24309:256;24371:2;24365:9;24397:17;;;24472:18;24457:34;;24493:22;;;24454:62;24451:2;;;24529:1;;24519:12;24451:2;24371;24538:22;24349:216;;-1:-1;24349:216;26668:268;26733:1;26740:101;26754:6;26751:1;26748:13;26740:101;;;26821:11;;;26815:18;26802:11;;;26795:39;26776:2;26769:10;26740:101;;;26856:6;26853:1;26850:13;26847:2;;;-1:-1;;26733:1;26903:16;;26896:27;26717:219"
      },
      "methodIdentifiers": {
        "executeMetaTransaction((address,address,bytes,bytes,uint8),(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),address)": "26d431e2",
        "meta_nonce(address,uint256)": "53f1defe"
      }
    },
    "metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"MetaTx\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"enum GenericMetaTxProcessor.SignatureType\",\"name\":\"signatureType\",\"type\":\"uint8\"}],\"internalType\":\"struct GenericMetaTxProcessor.Call\",\"name\":\"callData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batchNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenGasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"internalType\":\"struct GenericMetaTxProcessor.CallParams\",\"name\":\"callParams\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"batchId\",\"type\":\"uint256\"}],\"name\":\"meta_nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/GenericMetaTxProcessor.sol\":\"GenericMetaTxProcessor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/GenericMetaTxProcessor.sol\":{\"content\":\"pragma solidity 0.6.1;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./Libraries/BytesUtil.sol\\\";\\nimport \\\"./Libraries/AddressUtils.sol\\\";\\nimport \\\"./Libraries/SigUtil.sol\\\";\\nimport \\\"./Libraries/SafeMath.sol\\\";\\nimport \\\"./Interfaces/ERC1271.sol\\\";\\nimport \\\"./Interfaces/ERC1271Constants.sol\\\";\\nimport \\\"./Interfaces/ERC1654.sol\\\";\\nimport \\\"./Interfaces/ERC1654Constants.sol\\\";\\nimport \\\"./Interfaces/ERC20.sol\\\";\\n\\ncontract GenericMetaTxProcessor is ERC1271Constants, ERC1654Constants {\\n\\n    // ////////////// LIBRARIES /////////////////\\n    using SafeMath for uint256;\\n    using AddressUtils for address;\\n    // //////////////////////////////////////////\\n\\n\\n    // /////////////// CONSTANTS ////////////////\\n    enum SignatureType { DIRECT, EIP1654, EIP1271 }\\n\\n    bytes32 constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,address verifyingContract)\\\"\\n    );\\n    bytes32 DOMAIN_SEPARATOR;\\n\\n    bytes32 constant ERC20METATRANSACTION_TYPEHASH = keccak256(\\n        \\\"ERC20MetaTransaction(address from,address to,address tokenContract,uint256 amount,bytes data,uint256 batchId,uint256 batchNonce,uint256 expiry,uint256 txGas,uint256 baseGas,uint256 tokenGasPrice,address relayer)\\\"\\n    );\\n    // //////////////////////////////////////////\\n\\n    // //////////////// EVENTS //////////////////\\n    event MetaTx(\\n        address indexed from,\\n        uint256 indexed batchId,\\n        uint256 indexed batchNonce,\\n        bool success,\\n        bytes returnData\\n    ); // TODO specify event as part of ERC-1776 ?\\n    // //////////////////////////////////////////\\n\\n    // //////////////// STATE ///////////////////\\n    mapping(address => mapping(uint256 => uint256)) batches;\\n    bool lock = false;\\n    // //////////////////////////////////////////\\n\\n    constructor() public {\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(\\\"Generic Meta Transaction\\\"),\\n                keccak256(\\\"1\\\"),\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    struct Call {\\n        address from;\\n        address to;\\n        bytes data;\\n        bytes signature;\\n        SignatureType signatureType;\\n    }\\n\\n    struct CallParams {\\n        address tokenContract;\\n        uint256 amount;\\n        uint256 batchId;\\n        uint256 batchNonce;\\n        uint256 expiry;\\n        uint256 txGas;\\n        uint256 baseGas;\\n        uint256 tokenGasPrice;\\n        address relayer;\\n    }\\n\\n    function executeMetaTransaction(\\n        Call memory callData,\\n        CallParams memory callParams,\\n        address tokenReceiver\\n    ) public returns (bool success, bytes memory returnData) {\\n        require(!lock, \\\"IN_PROGRESS\\\");\\n        lock = true;\\n        _ensureParametersValidity(callData, callParams);\\n        _ensureCorrectSigner(callData, callParams);\\n        (success, returnData) = _performERC20MetaTx(callData, callParams, tokenReceiver);\\n        lock = false;\\n    }\\n\\n    // ////////////////////////////// INTERNALS /////////////////////////\\n\\n    function _ensureParametersValidity(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal view {\\n        require(\\n            callParams.relayer == address(0) || callParams.relayer == msg.sender,\\n            \\\"wrong relayer\\\"\\n        );\\n        require(block.timestamp < callParams.expiry, \\\"expired\\\");\\n        require(batches[callData.from][callParams.batchId] + 1 == callParams.batchNonce, \\\"batchNonce out of order\\\");\\n    }\\n\\n    function _encodeMessage(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal view returns (bytes memory) {\\n        return abi.encodePacked(\\n            \\\"\\\\x19\\\\x01\\\",\\n            DOMAIN_SEPARATOR,\\n            keccak256(messageBytes(callData, callParams))\\n        );\\n    }\\n\\n    function messageBytes(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal pure returns(bytes memory) {\\n        return abi.encode(\\n            ERC20METATRANSACTION_TYPEHASH,\\n            callData.from,\\n            callData.to,\\n            callParams.tokenContract,\\n            callParams.amount,\\n            keccak256(callData.data),\\n            callParams.batchId,\\n            callParams.batchNonce,\\n            callParams.expiry,\\n            callParams.txGas,\\n            callParams.baseGas,\\n            callParams.tokenGasPrice,\\n            callParams.relayer\\n        );\\n    }\\n\\n    function _ensureCorrectSigner(\\n        Call memory callData,\\n        CallParams memory callParams\\n    ) internal view {\\n        bytes memory dataToHash = _encodeMessage(callData, callParams);\\n        if (callData.signatureType == SignatureType.EIP1271) {\\n            require(\\n                ERC1271(callData.from).isValidSignature(dataToHash, callData.signature) == ERC1271_MAGICVALUE,\\n                \\\"invalid 1271 signature\\\"\\n            );\\n        } else if(callData.signatureType == SignatureType.EIP1654){\\n            require(\\n                ERC1654(callData.from).isValidSignature(keccak256(dataToHash), callData.signature) == ERC1654_MAGICVALUE,\\n                \\\"invalid 1654 signature\\\"\\n            );\\n        } else {\\n            address signer = SigUtil.recover(keccak256(dataToHash), callData.signature);\\n            require(signer == callData.from, \\\"signer != from\\\");\\n        }\\n    }\\n\\n    function _charge(\\n        address from,\\n        ERC20 tokenContract,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 initialGas,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) internal {\\n        uint256 gasCharge = initialGas - gasleft();\\n        if(gasCharge > gasLimit) {\\n            gasCharge = gasLimit;\\n        }\\n        gasCharge += baseGasCharge;\\n        uint256 tokensToCharge = gasCharge * tokenGasPrice;\\n        require(tokensToCharge / gasCharge == tokenGasPrice, \\\"overflow\\\");\\n        tokenContract.transferFrom(from, tokenReceiver, tokensToCharge);\\n    }\\n\\n    function _executeWithSpecificGas(\\n        address to,\\n        uint256 gasLimit,\\n        bytes memory data\\n    ) internal returns (bool success, bytes memory returnData) {\\n        (success, returnData) = to.call.gas(gasLimit)(data);\\n        assert(gasleft() > gasLimit / 63); // not enough gas provided, assert to throw all gas // TODO use EIP-1930\\n    }\\n\\n    function _transferAndChargeForGas(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 amount,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver\\n    ) internal returns (bool) {\\n        uint256 initialGas = gasleft();\\n        tokenContract.transferFrom(from, to, amount);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, tokenContract, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n        return true;\\n    }\\n\\n    function _executeWithSpecificGasAndChargeForIt(\\n        address from,\\n        address to,\\n        ERC20 tokenContract,\\n        uint256 gasLimit,\\n        uint256 tokenGasPrice,\\n        uint256 baseGasCharge,\\n        address tokenReceiver,\\n        bytes memory data\\n    ) internal returns (bool success, bytes memory returnData) {\\n        uint256 initialGas = gasleft();\\n        (success, returnData) = _executeWithSpecificGas(to, gasLimit, data);\\n        if (tokenGasPrice > 0) {\\n            _charge(from, tokenContract, gasLimit, tokenGasPrice, initialGas, baseGasCharge, tokenReceiver);\\n        }\\n    }\\n\\n    function _performERC20MetaTx(\\n        Call memory callData,\\n        CallParams memory callParams,\\n        address tokenReceiver\\n    ) internal returns (bool success, bytes memory returnData) {\\n        batches[callData.from][callParams.batchId] = callParams.batchNonce;\\n\\n        ERC20 tokenContract = ERC20(callParams.tokenContract);\\n\\n        if (callData.data.length == 0) {\\n            if(callParams.tokenGasPrice > 0) {\\n                _transferAndChargeForGas(\\n                    callData.from,\\n                    callData.to,\\n                    tokenContract,\\n                    callParams.amount,\\n                    callParams.txGas,\\n                    callParams.tokenGasPrice,\\n                    callParams.baseGas,\\n                    tokenReceiver\\n                );\\n            } else {\\n                require(tokenContract.transferFrom(callData.from, callData.to, callParams.amount), \\\"ERC20_TRANSFER_FAILED\\\");\\n            }\\n            success = true;\\n        } else {\\n            require(\\n                BytesUtil.doFirstParamEqualsAddress(callData.data, callData.from),\\n                \\\"first param != from\\\"\\n            );\\n            uint256 previousBalance;\\n            if(callParams.amount > 0) {\\n                previousBalance = tokenContract.balanceOf(address(this));\\n                require(tokenContract.transferFrom(callData.from, address(this), callParams.amount), \\\"ERC20_ALLOCATION_FAILED\\\");\\n                tokenContract.approve(callData.to, callParams.amount);\\n            }\\n            if(callParams.tokenGasPrice > 0) {\\n                (success, returnData) = _executeWithSpecificGasAndChargeForIt(\\n                    callData.from,\\n                    callData.to,\\n                    tokenContract,\\n                    callParams.txGas,\\n                    callParams.tokenGasPrice,\\n                    callParams.baseGas,\\n                    tokenReceiver,\\n                    callData.data\\n                );\\n            } else {\\n                (success, returnData) = _executeWithSpecificGas(callData.to, callParams.txGas, callData.data);\\n            }\\n            if(callParams.amount > 0) {\\n                uint256 newBalance = tokenContract.balanceOf(address(this));\\n                if (newBalance > previousBalance) {\\n                    require(tokenContract.transfer(callData.from, newBalance - previousBalance), \\\"ERC20_REFUND_FAILED\\\");\\n                }\\n            }\\n        }\\n\\n        emit MetaTx(callData.from, callParams.batchId, callParams.batchNonce, success, returnData);\\n    }\\n\\n    function meta_nonce(address from, uint256 batchId) external view returns(uint256) {\\n        return batches[from][batchId];\\n    }\\n}\\n\",\"keccak256\":\"0x978e4629751fe117530f25323bce657eedd285a99dc444422e270322388baeef\"},\"src/Interfaces/ERC1271.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC1271 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided data\\n    * @param data Arbitrary length data signed on the behalf of address(this)\\n    * @param signature Signature byte array associated with _data\\n    *\\n    * MUST return the bytes4 magic value 0x20c13b0b when function passes.\\n    * MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5)\\n    * MUST allow external calls\\n    */\\n    function isValidSignature(bytes calldata data, bytes calldata signature)\\n        external\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0xd47b461d487409fbb422a86f77818cf4c3a904d21c80b7df63c42f5b114da68f\"},\"src/Interfaces/ERC1271Constants.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ncontract ERC1271Constants {\\n    bytes4 internal constant ERC1271_MAGICVALUE = 0x20c13b0b;\\n}\\n\",\"keccak256\":\"0xe699d97bb95be085cbb795821dd52673088d58d96976e26a0b066a856a6c1f3d\"},\"src/Interfaces/ERC1654.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ninterface ERC1654 {\\n\\n    /**\\n    * @dev Should return whether the signature provided is valid for the provided hash\\n    * @param hash 32 bytes hash to be signed\\n    * @param signature Signature byte array associated with hash\\n    * @return magicValue 0x1626ba7e if valid else 0x00000000\\n    */\\n    function isValidSignature(bytes32 hash, bytes calldata signature)\\n        external\\n        view\\n        returns (bytes4 magicValue);\\n}\\n\",\"keccak256\":\"0x4f006eeed4fdb08128571445ecdc75e13858dee0b7876431b46f75a2d9d9ff6a\"},\"src/Interfaces/ERC1654Constants.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\ncontract ERC1654Constants {\\n    bytes4 internal constant ERC1654_MAGICVALUE = 0x1626ba7e;\\n}\\n\",\"keccak256\":\"0xd7650a572f69557bd6dfe3701a5bf02fd7148a127d7ec4a05dde59fca4ef19dd\"},\"src/Interfaces/ERC20.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title ERC20 interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-20\\n */\\ninterface ERC20 {\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address who) external view returns (uint256);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function transferFrom(address from, address to, uint256 value)\\n        external\\n        returns (bool);\\n    function approve(address spender, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6c28b4e23b6c521272670898110501a09e957e790f694725aa749fd8c8e2142a\"},\"src/Libraries/AddressUtils.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary AddressUtils {\\n\\n    function toPayable(address _address) internal pure returns (address payable _payable) {\\n        return address(uint160(_address));\\n    }\\n\\n    function isContract(address addr) internal view returns (bool) {\\n        // for accounts without code, i.e. `keccak256('')`:\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\n\\n        bytes32 codehash;\\n        // solium-disable-next-line security/no-inline-assembly\\n        assembly {\\n            codehash := extcodehash(addr)\\n        }\\n        return (codehash != 0x0 && codehash != accountHash);\\n    }\\n}\\n\",\"keccak256\":\"0xeac7dc828dbde8ad86c624d39dca24f7f66c3986958d8a71cd69a6aa9b5ed679\"},\"src/Libraries/BytesUtil.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary BytesUtil {\\n    function memcpy(uint256 dest, uint256 src, uint256 len) internal pure {\\n        // Copy word-length chunks while possible\\n        for (; len >= 32; len -= 32) {\\n            assembly {\\n                mstore(dest, mload(src))\\n            }\\n            dest += 32;\\n            src += 32;\\n        }\\n\\n        // Copy remaining bytes\\n        uint256 mask = 256**(32 - len) - 1;\\n        assembly {\\n            let srcpart := and(mload(src), not(mask))\\n            let destpart := and(mload(dest), mask)\\n            mstore(dest, or(destpart, srcpart))\\n        }\\n    }\\n\\n    function pointerToBytes(uint256 src, uint256 len)\\n        internal\\n        pure\\n        returns (bytes memory)\\n    {\\n        bytes memory ret = new bytes(len);\\n        uint256 retptr;\\n        assembly {\\n            retptr := add(ret, 32)\\n        }\\n\\n        memcpy(retptr, src, len);\\n        return ret;\\n    }\\n\\n    function addressToBytes(address a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(\\n                add(m, 20),\\n                xor(0x140000000000000000000000000000000000000000, a)\\n            )\\n            mstore(0x40, add(m, 52))\\n            b := m\\n        }\\n    }\\n\\n    function uint256ToBytes(uint256 a) internal pure returns (bytes memory b) {\\n        assembly {\\n            let m := mload(0x40)\\n            mstore(add(m, 32), a)\\n            mstore(0x40, add(m, 64))\\n            b := m\\n        }\\n    }\\n\\n    function doFirstParamEqualsAddress(bytes memory data, address _address)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + 32)) {\\n            return false;\\n        }\\n        uint256 value;\\n        assembly {\\n            value := mload(add(data, 36))\\n        }\\n        return value == uint256(_address);\\n    }\\n\\n    function doParamEqualsUInt256(bytes memory data, uint256 i, uint256 value)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        if (data.length < (36 + (i + 1) * 32)) {\\n            return false;\\n        }\\n        uint256 offset = 36 + i * 32;\\n        uint256 valuePresent;\\n        assembly {\\n            valuePresent := mload(add(data, offset))\\n        }\\n        return valuePresent == value;\\n    }\\n\\n    function overrideFirst32BytesWithAddress(\\n        bytes memory data,\\n        address _address\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n\\n        bytes memory addressBytes = addressToBytes(_address);\\n        uint256 src;\\n        assembly {\\n            src := add(addressBytes, 32)\\n        }\\n\\n        memcpy(dest, src, 20);\\n        return data;\\n    }\\n\\n    function overrideFirstTwo32BytesWithAddressAndInt(\\n        bytes memory data,\\n        address _address,\\n        uint256 _value\\n    ) internal pure returns (bytes memory) {\\n        uint256 dest;\\n        uint256 src;\\n\\n        assembly {\\n            dest := add(data, 48)\\n        } // 48 = 32 (offset) + 4 (func sig) + 12 (address is only 20 bytes)\\n        bytes memory bbytes = addressToBytes(_address);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 20);\\n\\n        assembly {\\n            dest := add(data, 68)\\n        } // 48 = 32 (offset) + 4 (func sig) + 32 (next slot)\\n        bbytes = uint256ToBytes(_value);\\n        assembly {\\n            src := add(bbytes, 32)\\n        }\\n        memcpy(dest, src, 32);\\n\\n        return data;\\n    }\\n}\\n\",\"keccak256\":\"0xbc2e25a5e410c9f7889beb483fe471a6aa55997ac0d3bafabd5042451a806529\"},\"src/Libraries/SafeMath.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\n/**\\n * @title SafeMath\\n * @dev Math operations with safety checks that revert\\n */\\nlibrary SafeMath {\\n    /**\\n    * @dev Multiplies two numbers, throws on overflow.\\n    */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        // Gas optimization: this is cheaper than asserting 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        c = a * b;\\n        require(c / a == b, \\\"overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n    * @dev Integer division of two numbers, truncating the quotient.\\n    */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\\n        // uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n        return a / b;\\n    }\\n\\n    /**\\n    * @dev Subtracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\\n    */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"undeflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n    * @dev Adds two numbers, throws on overflow.\\n    */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {\\n        c = a + b;\\n        require(c >= a, \\\"overflow\\\");\\n        return c;\\n    }\\n}\\n\",\"keccak256\":\"0x77a1483e56a10a93ab2d6b8ae7bd9a40d10e1c0edb9583cce13493b5549bf199\"},\"src/Libraries/SigUtil.sol\":{\"content\":\"pragma solidity ^0.6.0;\\n\\nlibrary SigUtil {\\n    function recover(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address recovered)\\n    {\\n        require(sig.length == 65);\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n        require(v == 27 || v == 28);\\n\\n        recovered = ecrecover(hash, v, r, s);\\n        require(recovered != address(0));\\n    }\\n\\n    function recoverWithZeroOnFailure(bytes32 hash, bytes memory sig)\\n        internal\\n        pure\\n        returns (address)\\n    {\\n        if (sig.length != 65) {\\n            return (address(0));\\n        }\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        assembly {\\n            r := mload(add(sig, 32))\\n            s := mload(add(sig, 64))\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // Version of signature should be 27 or 28, but 0 and 1 are also possible versions\\n        if (v < 27) {\\n            v += 27;\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            return (address(0));\\n        } else {\\n            return ecrecover(hash, v, r, s);\\n        }\\n    }\\n\\n    // Builds a prefixed hash to mimic the behavior of eth_sign.\\n    function prefixed(bytes32 hash) internal pure returns (bytes memory) {\\n        return abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash);\\n    }\\n}\\n\",\"keccak256\":\"0x779ab6a267e945cd0f164fecf7f6366888e3f1bb36730391b47fd70d52a8f222\"}},\"version\":1}",
    "userdoc": {
      "methods": {}
    }
  },
  "args": [],
  "address": "0xe5c05697666A18bBB0f1f620237402413cF7e1A1",
  "transactionHash": "0x6c7de970c679ad36ea1e8ec35b2833c86eeaadda9a2df02583937cfa6da5912b"
}